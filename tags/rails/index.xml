<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rails on Leonardo Borges</title>
    <link>http://leonardoborges.com/tags/rails/</link>
    <description>Recent content in Rails on Leonardo Borges</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://leonardoborges.com/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>look ma no hands tweeting with your voice</title>
      <link>http://leonardoborges.com/writings/2011/04/09/look-ma-no-hands-tweeting-with-your-voice/</link>
      <pubDate>Sat, 09 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/04/09/look-ma-no-hands-tweeting-with-your-voice/</guid>
      <description>&lt;p&gt;&#xA;This is just another one of those boring weekends where I felt the need to hack on something.&lt;br&gt;&lt;br&gt;If you follow Google Chrome&#39;s &lt;a title=&#34;Chrome&#39;s blog&#34; href=&#34;http://chrome.blogspot.com/&#34; target=&#34;_blank&#34;&gt;blog&lt;/a&gt; you&#39;re probably aware of this little nifty feature they started to implement in their latest builds: &lt;a href=&#34;http://chrome.blogspot.com/2011/03/talking-to-your-computer-with-html5.html&#34; target=&#34;_blank&#34;&gt;HTML5 voice recognition&lt;/a&gt;.&lt;br&gt;&lt;br&gt;And that&#39;s when it struck me: &#34;Hey, what if I use that and tweet with my voice instead of typing?&#34;&lt;br&gt;&lt;br&gt;The result of this hacking session is &lt;a href=&#34;http://loudparrot.heroku.com/&#34;&gt;LoudParrot&lt;/a&gt;, a sample Rails app that shows how to do just that. You &lt;strong&gt;will&lt;/strong&gt; need a fairly recent build of Google Chrome -beta - which you can download &lt;a href=&#34;http://www.google.com/intl/en/landing/chrome/beta/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;You can get the source on &lt;a href=&#34;https://github.com/leonardoborges/loud-parrot&#34;&gt;GitHub&lt;/a&gt;.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ide review rubymine</title>
      <link>http://leonardoborges.com/writings/2011/02/16/ide-review-rubymine/</link>
      <pubDate>Wed, 16 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/02/16/ide-review-rubymine/</guid>
      <description>&lt;p&gt;&#xA;Since I started working with Ruby about 4 years ago, I&#39;ve used quite a few text editors and ide&#39;s: &lt;a href=&#34;http://www.aptana.com/products/radrails&#34;&gt;RadRails&lt;/a&gt;, &lt;a href=&#34;http://projects.gnome.org/gedit/&#34; target=&#34;_blank&#34;&gt;gedit&lt;/a&gt; + &lt;a href=&#34;https://github.com/lexrupy/gmate&#34; target=&#34;_blank&#34;&gt;plugins&lt;/a&gt;, &lt;a href=&#34;http://macromates.com/&#34; target=&#34;_blank&#34;&gt;TextMate&lt;/a&gt; and &lt;a href=&#34;http://www.vim.org/&#34; target=&#34;_blank&#34;&gt;Vim&lt;/a&gt;.&lt;br&gt;&lt;br&gt;TextMate is the one I&#39;ve used the most and it&#39;s been ok for a long time. Until you realize you need half a dozen bundles to make it really useful for ruby development. Obviously the same goes for Vim and gedit.&lt;br&gt;&lt;br&gt;Oh, and forget about refactoring. In these tools refactoring equals regex global replace. So if you need it, well, forget it.&lt;br&gt;&lt;br&gt;That&#39;s when I decided to give &lt;strong&gt;&lt;a href=&#34;http://www.jetbrains.com/ruby/&#34; target=&#34;_blank&#34;&gt;RubyMine&lt;/a&gt;&lt;/strong&gt; a fair go. I&#39;ve been using it heavily for a while now and I must say I love it!&lt;br&gt;&lt;br&gt;What pissed me off about RadRails when I first tried it was the speed. It was too slow, something people take for granted when running java based IDE&#39;s.&lt;br&gt;&lt;br&gt;However this is not true for RubyMine. You DO take a hit on startup, nothing major, but once it&#39;s done, it&#39;s a breeze.&lt;br&gt;&lt;br&gt;I&#39;ve compiled a list of my favorite productivity shortcuts and features. Hope it&#39;ll be useful to someone else.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Productivity Shortcuts&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;hr /&gt;&lt;strong&gt;Navigation&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;Ctrl + Tab&lt;/em&gt; - File Switcher&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + T&lt;/em&gt; - Switching between implementation and test works perfectly. Even in a pure ruby project&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + F12&lt;/em&gt; - Expand/restore editor&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + Shift + N&lt;/em&gt; - Go to model/view/controller&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + F1&lt;/em&gt; - Show current file in other views such as the project tree (scroll to file)&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + N&lt;/em&gt; - Open file&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Alt + Shift + N&lt;/em&gt; - Open symbol - across files&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + F7&lt;/em&gt; - Find usages - when on a method, variable, etc…&lt;br&gt;&lt;br&gt;&lt;strong&gt;Running/Debugging&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;Ctrl + Shift + F10&lt;/em&gt; - Run current [test] file. When inside a test method, run that single method.&lt;br&gt;&lt;br&gt;&lt;em&gt;Ctrl + Shift + F9&lt;/em&gt; - Same as above, but in debug mode.&lt;br&gt;&lt;br&gt;&lt;em&gt;Shift + F10/Shift + F9&lt;/em&gt; - Run/Debug last action executed&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + R&lt;/em&gt; - Run rake task&lt;br&gt;&lt;br&gt;&lt;strong&gt;Refactoring&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Alt + N&lt;/em&gt; - Inline variable/ method&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Alt + M&lt;/em&gt; - Extract method&lt;br&gt;&lt;br&gt;&lt;em&gt;Shift + F6&lt;/em&gt; - Rename&lt;br&gt;&lt;br&gt;&lt;em&gt;F5&lt;/em&gt; - Copy current file as...&lt;br&gt;&lt;br&gt;&lt;strong&gt;Editing&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt; Cmd + Y&lt;/em&gt; - Delete line&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + D&lt;/em&gt; - Duplicate Line/Selection&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + Mouse&lt;/em&gt; - Column selection&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + (Up Arrow|Down Arrow)&lt;/em&gt; - Moves de line or selected block of code up or down&lt;br&gt;&lt;br&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;hr /&gt;&lt;em&gt;Code completion&lt;/em&gt; - It&#39;s fairly accurate and pretty fast. They&#39;ve done some good yak shaving around this area.&lt;br&gt;&lt;br&gt;&lt;em&gt;Debugger&lt;/em&gt; - The debugging interface is an absolute beauty. Saved me a lot of time where I&#39;d have used puts statements or googled to re-learn how to use ruby-debug instead. Definitely worth checking out.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The bad stuff&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;hr /&gt;&lt;em&gt;It is not free&lt;/em&gt; - unless you are a committer to an open-source project. But it&#39;s not expensive either.&lt;br&gt;&lt;br&gt;&lt;em&gt;It is a bit slower&lt;/em&gt; - but not that much. The performance hit is insignificant compared to the added value.&lt;br&gt;&lt;br&gt;&lt;em&gt;Regex file open, TextMate style&lt;/em&gt; - What can I say? I do miss this.&lt;br&gt;&lt;br&gt;&lt;em&gt;Wrap highlighted text&lt;/em&gt; - In TextMate, if you highlight a word and press &#34;, [, {, ( or # it surrounds the word with the respective combination of quotes, brackets, etc... Another missed feature&lt;br&gt;&lt;br&gt;&lt;strong&gt;Wrapping up&lt;/strong&gt;&lt;br&gt;It&#39;s probably soon to say it but so far RubyMine has been my missing Ruby IDE. And I&#39;m very happy with it. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>clouds against the floods presentation available</title>
      <link>http://leonardoborges.com/writings/2011/02/12/clouds-against-the-floods-presentation-available/</link>
      <pubDate>Sat, 12 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/02/12/clouds-against-the-floods-presentation-available/</guid>
      <description>&lt;p&gt;&#xA;Last Tuesday I gave a short presentation on the whole &lt;a title=&#34;Clouds against the Floods&#34; href=&#34;http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/&#34; target=&#34;_blank&#34;&gt;Clouds Against the Floods&lt;/a&gt; thing at the &lt;a title=&#34;Ruby on Rails Oceania Meetup&#34; href=&#34;http://rubyonrails.com.au/sydney-meetups&#34; target=&#34;_blank&#34;&gt;Ruby on Rails Oceania User Group&lt;/a&gt; here in Sydney.&lt;br&gt;&lt;br&gt;Those guys are awesome and they recorded the talk - thanks guys!&lt;br&gt;&lt;br&gt;If you&#39;d like to download the slides, they&#39;re available on &lt;a title=&#34;Slideshare profile&#34; href=&#34;http://www.slideshare.net/borgesleonardo/clouds-against-the-floods&#34; target=&#34;_blank&#34;&gt;Slideshare&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Enjoy! ;)&lt;br&gt;&lt;br&gt;&lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; width=&#34;425&#34; height=&#34;344&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34;&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;param name=&#34;allowscriptaccess&#34; value=&#34;always&#34; /&gt;&lt;param name=&#34;src&#34; value=&#34;http://www.youtube.com/v/DYDD9XiW3Gg?hl=en&amp;amp;fs=1&#34; /&gt;&lt;param name=&#34;allowfullscreen&#34; value=&#34;true&#34; /&gt;&lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;425&#34; height=&#34;344&#34; src=&#34;http://www.youtube.com/v/DYDD9XiW3Gg?hl=en&amp;amp;fs=1&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>update to appconstants it can now be used as a gem</title>
      <link>http://leonardoborges.com/writings/2011/02/02/update-to-appconstants-it-can-now-be-used-as-a-gem/</link>
      <pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/02/02/update-to-appconstants-it-can-now-be-used-as-a-gem/</guid>
      <description>&lt;p&gt;&#xA;This is just a quick post to let you know that &lt;a title=&#34;app_constants github repo&#34; href=&#34;https://github.com/leonardoborges/app_constants&#34; target=&#34;_blank&#34;&gt;AppConstants&lt;/a&gt; can now be used as gem!&lt;br&gt;&lt;br&gt;Just add it to your Gemfile and &#39;bundle install&#39; it:&lt;br&gt;&lt;br&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#in your Gemfile&#xA;gem &amp;#34;app_constants&amp;#34;&#xA;&#xA;#in the console&#xA;$ bundle install&#xA;$ rails generate app_constants&#xA;#then follow the instructions on-screen instructions&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;It can also be used without Rails. Check out full instructions on the &lt;a title=&#34;app_constants github repo&#34; href=&#34;https://github.com/leonardoborges/app_constants&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Feedback welcome :)&lt;/p&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>clouds against the floods</title>
      <link>http://leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/</guid>
      <description>&lt;p&gt;&#xA;I think by now everyone&#39;s heard of the hard time the guys up in Queensland, Australia are having because of the &lt;a title=&#34;Queensland Floods&#34; href=&#34;http://www.google.com/search?q=qld+floods&#34; target=&#34;_blank&#34;&gt;recent floods&lt;/a&gt;. People have lost their lives and many others have lost their homes and businesses, product of years of hard work.&lt;br&gt;&lt;br&gt;As a result of this massive disaster the Queensland Government decided to run a telethon to encourage donations to help the flood victims. The Telethon aired last Sunday, 09/01/11, on Channel 9 and lasted for 2 hours.&lt;br&gt;&lt;br&gt;The problem was the existing donations system that the Government had been using so far: it was just not thought out to handle the load we were expecting to have on Sunday.&lt;br&gt;&lt;br&gt;That&#39;s when my employer, &lt;a title=&#34;ThoughtWorks&#34; href=&#34;http://www.thoughtworks.com/&#34; target=&#34;_blank&#34;&gt;ThoughtWorks&lt;/a&gt;, kindly offered a hand to &lt;a href=&#34;http://www.qld.gov.au/smartservice/&#34; target=&#34;_blank&#34;&gt;Smart Services Queensland&lt;/a&gt; in the attempt to make sure they could receive all donations that were likely to come through the web.&lt;br&gt;&lt;br&gt;After that, on the Thursday afternoon before the event, &lt;a title=&#34;Phillip Calçado&#34; href=&#34;http://fragmental.tw/&#34; target=&#34;_blank&#34;&gt;Phillip Calçado&lt;/a&gt;, Ben Barnard and I set off on a mission against the clock: we had a little over 48 hours to develop, test and deploy an application that was expected to handle thousands of users. Not only that but an application that, should it fail, would prevent millions of dollars from reaching the people in need in Queensland. This was a great responsibility but we knew we could do it.&lt;br&gt;&lt;br&gt;Given the time constraints it was a bit obvious that we would use &lt;a title=&#34;Ruby on Rails&#34; href=&#34;http://rubyonrails.org/&#34; target=&#34;_blank&#34;&gt;Ruby on Rails&lt;/a&gt; for this app. Both because of the productivity it&#39;s known for and because we had the knowledge right there. With that out of the way, we had to decide how and where we would deploy this thing. We thought a little about it and came down to to 2 options: &lt;a title=&#34;Amazon EC2&#34; href=&#34;http://aws.amazon.com/ec2/&#34;&gt;Amazon EC2&lt;/a&gt; or &lt;a title=&#34;Heroku&#34; href=&#34;http://heroku.com/&#34; target=&#34;_blank&#34;&gt;Heroku&lt;/a&gt; (which is powered by Amazon EC2 under the hood). I pushed hard for Heroku and that&#39;s what we ended up going with.&lt;br&gt;&lt;br&gt;Now it was time to get down and dirty and start coding the app. In principle it should be fairly simple. It needed a form where a potential donor would fill out his/her information, giving the option to receive the tax receipt by email or regular mail - more on that later. Upon clicking submit users would be taken to the secure payment gateway website where they could input their credit card number and finish the payment, after which they would be taken back to our app with a success - or an error - message and a transaction number.&lt;br&gt;&lt;br&gt;Now this work flow has a couple of implications: First, all emails would have to be sent in the background so as to not interfere with the website performance. We were expecting to be sending thousands of them - workers anyone?&lt;br&gt;&lt;br&gt;Second, the payment gateway integration would have to be developed and tested from scratch. Up until now the Queensland Government integrated with it in a different manner that could not be reused in this case.&lt;br&gt;&lt;br&gt;And most important of all, although simple in concept, we had no idea of the load we should be preparing for. There was just no data from previous telethons. Thus we decided to prepare for the maximum we possibly could.&lt;br&gt;&lt;br&gt;As we developed the application we deployed continuously to Heroku in order to test the payment gateway integration, benchmark the app using &lt;a title=&#34;Apache AB&#34; href=&#34;http://httpd.apache.org/docs/2.0/programs/ab.html&#34; target=&#34;_blank&#34;&gt;Apache AB&lt;/a&gt;, setup cache headers - Heroku uses &lt;a title=&#34;Varnish&#34; href=&#34;http://www.varnish-cache.org/&#34; target=&#34;_blank&#34;&gt;Varnish&lt;/a&gt; - and find bottlenecks.&lt;br&gt;&lt;br&gt;Email was one of these bottlenecks and that&#39;s why we decided to handle that in the background using &lt;a title=&#34;Delayed::Job&#34; href=&#34;https://github.com/collectiveidea/delayed_job&#34; target=&#34;_blank&#34;&gt;Delayed::Jobs&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Since the first deployment, we also tweaked a couple of things at Heroku, such as migrating from their free PostgreSQL offering to a dedicated instance that we believed would both take the load and have plenty of room for all the data - as I write this post, we are already well over the 5MB limit they offer for free.&lt;br&gt;&lt;br&gt;Long story short, by Saturday evening  the website was up and running on 5 app instances, a 6th instance running background jobs - sending emails - and a dedicated PostgreSQL database server.&lt;br&gt;&lt;br&gt;As Heroku is outside the Government network, their SMTP server was a no go on the short term so we also integrated the app with &lt;a title=&#34;SendGrid&#34; href=&#34;http://sendgrid.com/&#34; target=&#34;_blank&#34;&gt;SendGrid&lt;/a&gt;, an email delivery service that fitted perfectly our needs - although the site got so much traction that we went over our monthly quota with them. But the nice guys from SendGrid increased our limit after I opened a ticket explaining the situation!&lt;br&gt;&lt;br&gt;As for performance we used &lt;a href=&#34;http://newrelic.com/&#34;&gt;NewRelic&lt;/a&gt; to monitor the application, which Heroku also makes a breeze to integrate with.&lt;br&gt;&lt;br&gt;We all went home to rest and get ready for Sunday, the day of the Telethon, when we would be monitoring the app throughout the day. We were all excited and when the show went live, we started seeing all those beautiful access charts moving like crazy, spiking over 720 requests per minute and being solid like a rock with flat and fast response times throughout the night.&lt;br&gt;&lt;br&gt;In about two hours we had over AUD$2,000,000.00 (two million) donated through our website.&lt;br&gt;&lt;br&gt;Since then the number of transactions dropped but has stayed constant and as of today we&#39;ve received AUD$25,438,518.32 (over 25 millions of dollars) that will be donated to the flood victims in Queensland.&lt;br&gt;&lt;br&gt;Oh, and the site is still up and going strong so move your fingers and go help: &lt;a title=&#34;Queensland Floods Telethon&#34; href=&#34;http://telethon.smartservice.qld.gov.au/&#34; target=&#34;_blank&#34;&gt;telethon.smartservice.qld.gov.au&lt;/a&gt; - there will be heaps of people grateful for your donation.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>small update to appconstants</title>
      <link>http://leonardoborges.com/writings/2010/04/24/small-update-to-appconstants/</link>
      <pubDate>Sat, 24 Apr 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/04/24/small-update-to-appconstants/</guid>
      <description>&lt;p&gt;&#xA;It&#39;s been now over a week since we moved to Sydney and everything is just great. We&#39;re still house hunting but I got a feeling we&#39;ll have a home soon. :)&lt;br&gt;&lt;br&gt;In the meantime, this morning I got a feature request on github to allow &lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34; target=&#34;_blank&#34;&gt;AppConstants&lt;/a&gt; to interpret YAML files with embedded code like this:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790877.js?file=gistfile1.yml&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;I haven&#39;t needed it myself but thought it would be a nice addition so my &lt;a href=&#34;http://github.com/leonardoborges/app_constants/commit/7c116c8cf9307942f7d8682779510e623156fd08&#34;&gt;latest commit&lt;/a&gt; does exactly that. Let me know if you find any issues.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>upgrading appconstants to rails 3</title>
      <link>http://leonardoborges.com/writings/2010/02/28/upgrading-appconstants-to-rails-3/</link>
      <pubDate>Sun, 28 Feb 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/02/28/upgrading-appconstants-to-rails-3/</guid>
      <description>&lt;p&gt;&#xA;Back in January I &lt;a href=&#34;http://www.leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/&#34; target=&#34;_blank&#34;&gt;announced&lt;/a&gt; a small but useful plugin called &lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34;&gt;AppConstants&lt;/a&gt;, that basically provides a central place where you can store environment specific constants. And since I started using Rails 3 in the past week, I thought I&#39;d make it Rails 3 compatible.&lt;br&gt;&lt;br&gt;The code is really simple and - as I expected - the upgrade process was quite straight forward.&lt;br&gt;&lt;br&gt;I&#39;m not gonna write a guide here on how to upgrade your plugins to Rails 3 - there is plenty about that around the web - but instead, just show the steps I went through to upgrade mine. Similar plugins might have a similar upgrade path.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Generators&lt;/strong&gt;&lt;br&gt;&lt;br&gt;My plugin makes use of a simple generator that copies its default constants file and initializer to &lt;em&gt;Rails.root/config&lt;/em&gt; and &lt;em&gt;Rails.root/config/initializers&lt;/em&gt;, respectively. In Rails 2.x it was located under &lt;em&gt;Rails.root/vendor/plugins/app_constants/generators/app_constants&lt;/em&gt; and it was defined like so:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790878.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;In Rails 3, the generators had to be moved to &lt;em&gt;Rails.root/vendor/plugins/app_constants/lib/generators&lt;/em&gt;. Notice the root directory app_constants under generators has been removed as well. And the code was changed to this:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790879.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;We had three simple changes here:&lt;br&gt;&lt;br&gt;- &lt;em&gt;The generator now extends from &lt;em&gt;&lt;strong&gt;Rails::Generators::Base&lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;: This class uses the Thor infrastructure to handle generators. - more info &lt;a href=&#34;http://blog.plataformatec.com.br/2009/07/creating-your-own-generators-with-thor/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;- &lt;em&gt;I had to implement the &lt;strong&gt;source_root&lt;/strong&gt; class method&lt;/em&gt;, which basically tells your generator where to find your template files.&lt;br&gt;&lt;br&gt;- &lt;em&gt;The &lt;em&gt;&lt;strong&gt;manifest&lt;/strong&gt;&lt;/em&gt; method is now called &lt;em&gt;&lt;strong&gt;copy_config_files&lt;/strong&gt;&lt;/em&gt; - or &lt;strong&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/strong&gt;&lt;/em&gt; you want. &lt;br&gt;&lt;br&gt;The way this works is that, once you invoke the generator, Thor will sequentially call all instance methods in your generator class - or the only instance method in the example above. If your generator does a lot, it will allow for a better organization of your tasks.&lt;br&gt;&lt;br&gt;And that&#39;s it! I did change a couple of other things but that had to be changed anyway and are not related to the migration.&lt;br&gt;&lt;br&gt;For Rails 2.3.x users, you&#39;ll find a 2.3.x branch on github that should work for you.&lt;br&gt;&lt;br&gt;Cheers&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>my take on rails environment specific constants</title>
      <link>http://leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/</guid>
      <description>&lt;p&gt;&#xA;It’s funny how every Rails application I - and possibly you - work on ends up needing some sort of per-environment global constants.&lt;br&gt;&lt;br&gt;Examples may include the application url - It might be used in account activation emails and thus should be different between the development and production environments.&lt;br&gt;&lt;br&gt;Or perhaps your application depends on external services that, depending on the environment, are available in different URIs.&lt;br&gt;&lt;br&gt;There are a couple solutions out there but my needs were simple and straightforward, thus I developed a small rails plugin that is the simplest thing that could possibly work: &lt;strong&gt;&lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34;&gt;AppConstants&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;It&#39;s been useful for my current project and I hope it can be useful to someone else too ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>monit thinking sphinx and rvm</title>
      <link>http://leonardoborges.com/writings/2010/01/13/monit-thinking-sphinx-and-rvm/</link>
      <pubDate>Wed, 13 Jan 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/01/13/monit-thinking-sphinx-and-rvm/</guid>
      <description>&lt;p&gt;&#xA;In one of my Rails projects I&#39;m using &lt;a href=&#34;http://www.sphinxsearch.com/&#34; target=&#34;_blank&#34;&gt;Sphinx&lt;/a&gt; to provide full-text search capabilities. To integrate both worlds I chose &lt;a href=&#34;http://freelancing-god.github.com/ts/en/&#34; target=&#34;_blank&#34;&gt;Thinking Sphinx&lt;/a&gt;, which is just great and so far has met all of my expectations.&lt;br&gt;&lt;br&gt;Also, &lt;a href=&#34;http://www.leonardoborges.com/writings/2010/01/02/managing-multiple-ruby-versions/&#34; target=&#34;_blank&#34;&gt;as I previously mentioned&lt;/a&gt;, I&#39;m using &lt;a href=&#34;http://rvm.beginrescueend.com/&#34;&gt;RVM&lt;/a&gt; to manage my ruby installations on both my development and production machines and this setup is what motivated this post.&lt;br&gt;&lt;br&gt;I use &lt;a href=&#34;http://mmonit.com/monit/&#34; target=&#34;_blank&#34;&gt;Monit&lt;/a&gt; to monitor the services running on my production server - nginx, mysql, php - and as of the first deploy of this application, it only made sense to also monitor Sphinx.&lt;br&gt;&lt;br&gt;In order to create an initialization script, I would need at least a way to start and stop sphinx from the command line, which, using Thinking Sphinx, can be done using these rake tasks:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ rake thinking_sphinx:stop&lt;br&gt;$ rake thinking_sphinx:start&lt;br&gt;&lt;/pre&gt;&lt;br&gt;It&#39;s worth mentioning now that I don&#39;t run sphinx as root. I run it with the same user my rails application uses. For the purpose of this post, let&#39;s call it &lt;em&gt;deploy&lt;/em&gt;.&lt;br&gt;&lt;br&gt;When I tried using my script I got errors such as these:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;Missing the Rails 2.3.5 gem. Please `gem install -v=2.3.5 rails`, update your RAILS_GEM_VERSION setting in config/environment.rb for the Rails version you do have installed, or comment out RAILS_GEM_VERSION to use the latest version installed.&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;After some digging around I found that the GEM_HOME environment variable for my deploy user wasn&#39;t being set correctly - something to do with rvm, but not quite sure - and to fix this, well, I just had to set it, leaving the final working version of my script somewhat like this - simplified :&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#! /bin/sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### BEGIN INIT INFO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### END INIT INFO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd /your/rails/app/root; export GEM_HOME=/path/to/your/gems; RAILS_ENV=production;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  start&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting sphinx: &amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                su - deploy -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$set_path&lt;span style=&#34;color:#e6db74&#34;&gt; rake ts:start&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /var/log/sphinx.log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  stop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stopping sphinx: &amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                su - deploy -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$set_path&lt;span style=&#34;color:#e6db74&#34;&gt; rake ts:stop&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /var/log/sphinx.log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            N&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/init.d/sphinx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Usage: &lt;/span&gt;$N&lt;span style=&#34;color:#e6db74&#34;&gt; {start|stop}&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are 2 things happening here. First, regardless of the user I&amp;rsquo;m running this init script as, I drop privileges in order to execute the rake task with my deploy user. Second, I set the GEM_HOME environment variable to stop getting the &amp;lsquo;gem not found&amp;rsquo; errors.&lt;br&gt;&lt;br&gt;After that, monit was able not only to monitor my sphinx instance, but also (re)start/stop it with the correct user.&lt;br&gt;&lt;br&gt;I&amp;rsquo;m no Linux wizard so if you wanna suggest improvements to this script, feel free to do so!&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails summit 2009 im speaking</title>
      <link>http://leonardoborges.com/writings/2009/09/03/rails-summit-2009-im-speaking/</link>
      <pubDate>Thu, 03 Sep 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/09/03/rails-summit-2009-im-speaking/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://www.railssummit.com.br?utm_campaign=Railssummit&amp;amp;utm_source=banner_parceiros&amp;amp;utm_medium=banner&amp;amp;utm_content=en_souPalestrante_210x60&#34;&gt;&lt;img src=&#34;http://railssummit.com.br/images/banners/en_souPalestrante_210x60.jpg&#34; alt=&#34;Rails Summit 2009&#34; /&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;I&#39;ll be speaking at this year&#39;s &lt;a href=&#34;http://railssummit.com.br/en/pages/home&#34; target=&#34;_blank&#34;&gt;Rails Summit Latin America&lt;/a&gt; in Sao Paulo, Brazil. It will be a good opportunity to meet some &lt;a href=&#34;http://railssummit.com.br/en/speakers&#34;&gt;amazing people&lt;/a&gt; and visit friends back home! :)&lt;br&gt;&lt;br&gt;Overall I&#39;ll be spending 12 days in Brazil, with 2 of them dedicated to the conference. The other 10 I&#39;ll be in Rio de Janeiro visiting my family and friends. I strongly advise you to spend some time in Rio too, if at all possible. It&#39;s an amazing city and you can contact me if you have any questions.&lt;br&gt;&lt;br&gt;Back to the conference, my session is called &lt;strong&gt;JRuby in the enterprise world: Using Rails with legacy code&lt;/strong&gt;, and will be given in the form of a tutorial. I will walk you through some problems we had while making this kind of integration at my company, focusing mostly on dependency management.&lt;br&gt;&lt;br&gt;At the end I hope you&#39;ll have a good understanding of what JRuby is capable of in a legacy environment.&lt;br&gt;&lt;br&gt;If you&#39;re planning to attend and would like to hear anything specific about JRuby, please let me know, I can try and squeeze in.&lt;br&gt;&lt;br&gt;C u there!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails rumble 09</title>
      <link>http://leonardoborges.com/writings/2009/08/25/rails-rumble-09/</link>
      <pubDate>Tue, 25 Aug 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/08/25/rails-rumble-09/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;Update:&lt;/strong&gt; The service is now down while we move it from the VPS provided by Rails Rumble to our own. I&#39;ll let you know once it&#39;s up.&lt;br&gt;&lt;br&gt;Last weekend &lt;a href=&#34;http://www.ivercore.com/&#34; target=&#34;_blank&#34;&gt;Philip&lt;/a&gt;, &lt;a href=&#34;http://www.pedropimentel.com/&#34; target=&#34;_blank&#34;&gt;Pedro&lt;/a&gt; and myself got together for this year&#39;s &lt;a href=&#34;http://railsrumble.com/&#34; target=&#34;_blank&#34;&gt;Rails Rumble&lt;/a&gt;.&lt;br&gt;&lt;br&gt;We haven&#39;t had really decided what to do until a few days before the competition, but I had this really simple idea and decided to go with it. Seems people liked it, given a few positive comments we received.&lt;br&gt;&lt;br&gt;So, after 48 hours - which were not used to work full-time in the application - &lt;a href=&#34;http://birdwatcher.r09.railsrumble.com/&#34;&gt;The Bird Watcher&lt;/a&gt; was born.&lt;br&gt;&lt;br&gt;&lt;a href=&#34;http://birdwatcher.r09.railsrumble.com/&#34;&gt;The Bird Watcher&lt;/a&gt; is a simple way to show the world what&#39;s going on on Twitter for any topic you define.  Go ahead and take a look at the website to see a live example.&lt;br&gt;&lt;br&gt;We&#39;re planning to keep the service up after the competition is over and we have some nice features lined up to go live on the next release.&lt;br&gt;&lt;br&gt;In short, it was an interesting weekend and showed me that this team works really well together.&lt;br&gt;&lt;br&gt;Cheers&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jruby on rails and legacy java apps managing dependencies</title>
      <link>http://leonardoborges.com/writings/2009/07/01/jruby-on-rails-and-legacy-java-apps-managing-dependencies/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/07/01/jruby-on-rails-and-legacy-java-apps-managing-dependencies/</guid>
      <description>&lt;p&gt;&#xA;The motivation for this post came from a couple of messages I&#39;ve seen on the jruby&#39;s google group and because I think it&#39;s pretty cool to share how we tackled this problem.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- A little bit of context&lt;/strong&gt;&lt;br&gt;&lt;br&gt;We, as a vast amount of people out there, have legacy Java code. A lot. In our case this legacy is pretty much crucial to our business. We can&#39;t just trash it and start from scratch. Bad idea.&lt;br&gt;&lt;br&gt;On the other hand we do have new features to be built on top of it. But we wanted an easier way to develop this new stuff and decided for a JRuby on Rails solution, using it as a front-end to our existing services.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- What we decided to do&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Our final rails project would make use of a specially created jar file containing our Java application. This Jar would also contain a public interface of the services we&#39;d have to interact with from rails.&lt;br&gt;&lt;br&gt;As any Java application, ours depend on a number of external jar files that correspond to the various framewoks we usually have in place. e.g.: Hibernate, Spring, apache-commons ...&lt;br&gt;&lt;br&gt;Which means we need to make our app&#39;s jar and all it&#39;s dependencies available in the JRuby classpath in order to use it.&lt;br&gt;&lt;br&gt;Given we&#39;re using warbler to package our application as a war file, we just need to place all jars needed into our rails app&#39;s lib folder. Warbler then takes care of copying any jar files located in there into the war.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- The problem&lt;/strong&gt;&lt;br&gt;&lt;br&gt;So we needed a smart way to include all these dependencies into the project, and copy/paste isn&#39;t an option.&lt;br&gt;&lt;br&gt;In the Java world we use &lt;a href=&#34;http://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; to manage our projects dependencies - and you should too. Because of that our approach involved turning our rails application into a Maven aware project.&lt;br&gt;&lt;br&gt;Basically we needed a &lt;a href=&#34;http://maven.apache.org/pom.html&#34;&gt;pom file&lt;/a&gt; that would declaratively list our java project as a dependency. From there on, Maven knows what the dependencies are and downloads them to your local repository.&lt;br&gt;&lt;br&gt;Which leaves us with one more task. We need to put all these dependencies into our lib folder after maven has downloaded them.&lt;br&gt;&lt;br&gt;Below you&#39;ll find the pom.xml file that we use to achieve this with inline comments explaining each bit:&lt;br&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.company&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- notice how we specify the packaging to be a war,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;          that way, maven knows where to copy the jar files --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;war&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;railsApp&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;railsApp&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.company&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;java-legacy-app&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;compile&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;railsApp&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.codehaus.mojo&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;exec-maven-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- This tasks only creates a basic structure expected by maven,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                    so it can do its work --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;create-mock-web-descriptor&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;compile&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;/bin/sh&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;workingDirectory&amp;gt;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/workingDirectory&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;-c&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    mkdir -p src/main/webapp/WEB-INF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    touch    src/main/webapp/WEB-INF/web.xml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Now in the package phase we copy the jar files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                    that maven put into the fake web app to our rails&amp;#39; lib folder --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;copy-needed-jars-into-lib&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;/bin/sh&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;workingDirectory&amp;gt;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/workingDirectory&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;-c&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    rm -f lib/*.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    cp target/railsApp/WEB-INF/lib/*.jar lib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    rm -rf target/railsApp*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    rm -rf src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Here we optionally create the final war file containing our rails app using warbler,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                     doing a small cleanup of the files and folders maven created  --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;create-final-war&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;/bin/sh&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;workingDirectory&amp;gt;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/workingDirectory&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;-c&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   rm -rf *.war tmp/war&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   jruby -S warble &amp;amp;amp;&amp;amp;amp; \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   mv *.war target/railsApp.war&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;Now from the command line we can just run &lt;em&gt;mvn package&lt;/em&gt; and we&amp;rsquo;re good to go.&lt;br&gt;&lt;br&gt;Maven will start to package the application as a war file. Since it&amp;rsquo;s not a Java application we create the empty web.xml file in the compile phase, to fool maven. &lt;br&gt;&lt;br&gt;&lt;br&gt;After it has copied all the dependencies into WEB-INF/lib the next packaging goals will make sure we copy them to our rails&amp;rsquo; lib folder, also creating the final war file, ready for deployment.&lt;br&gt;&lt;br&gt;&lt;br&gt;Note that once done, you can use a simple code snippet similar to this one as an initializer and load all dependencies:&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;&lt;br&gt;Dir.entries(&amp;quot;#{RAILS_ROOT}/lib&amp;quot;).sort.each do |entry|&lt;br&gt;  if entry =~ /.jar$/&lt;br&gt;    require entry&lt;br&gt;  end&lt;br&gt;end&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Then we can just use script/console, script/server and so on, as we normally would.&lt;br&gt;&lt;br&gt;Sorry for the long post, I tried to pack in as much as I could and I certainly hope it&amp;rsquo;s useful to someone. Any doubts, comments and etc&amp;hellip; just drop me a line. :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails readable test names run individual tests from the console</title>
      <link>http://leonardoborges.com/writings/2009/05/16/rails-readable-test-names-run-individual-tests-from-the-console/</link>
      <pubDate>Sat, 16 May 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/05/16/rails-readable-test-names-run-individual-tests-from-the-console/</guid>
      <description>&lt;p&gt;&#xA;As you probably know, since rails 2.1 you can write test methods in the following format:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;&lt;br&gt;test &#34;hotel should return its permalink&#34; do&lt;br&gt;  #your test code here&lt;br&gt;end&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Which is great, as the test name becomes much more clear. But you can&#39;t simply run this test easily from the command line. You&#39;d have to run something like:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ ruby your_test_file.rb -n test_hotel_should_return_its_permalink&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;It annoys me. And it&#39;s not practical either to make the test fail just so you can get the test&#39;s real name.&lt;br&gt;I wanted to be able to just copy and paste the readable name in the console and have Test::Unit do the conversion and run it for me, like this:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ ruby your_test_file.rb -n &#34;hotel should return its permalink&#34;&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;So I created &lt;a href=&#34;http://github.com/leonardoborges/readable_test_names_runner/tree/master&#34; target=&#34;_blank&#34;&gt;readable_test_names_runner&lt;/a&gt;. It&#39;s a tiny rails plugin that adds this feature for you.&lt;br&gt;&lt;br&gt;Enjoy.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rcov jruby and rcov_plugin</title>
      <link>http://leonardoborges.com/writings/2009/05/05/rcov-jruby-and-rcov_plugin/</link>
      <pubDate>Tue, 05 May 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/05/05/rcov-jruby-and-rcov_plugin/</guid>
      <description>&lt;p&gt;&#xA;The &lt;a href=&#34;http://github.com/commondream/rcov_plugin/tree/master&#34; target=&#34;_blank&#34;&gt;rcov_plugin&lt;/a&gt; project is a rails plugin for &lt;a href=&#34;http://eigenclass.org/hiki.rb?rcov&#34; target=&#34;_blank&#34;&gt;rcov&lt;/a&gt; that adds some useful rake tasks to your application.  And since I&#39;m currently working in a JRuby project it made sense to use this plugin.&lt;br&gt;&lt;br&gt;The thing is, among other stuff, an rcov report from a JRuby project includes some files that shouldn&#39;t be there at all, plus you also need to change the way you call rcov as such. Thus, I thought I&#39;d contribute these changes to the plugin and my pull request was approved this morning - just install the latest version and you should be good to go.&lt;br&gt;&lt;br&gt;It was useful for us here, hope it might be useful for you too.&lt;br&gt;&lt;br&gt;Enjoy :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jruby on rails and google app engine</title>
      <link>http://leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/</link>
      <pubDate>Fri, 10 Apr 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/</guid>
      <description>&lt;p&gt;&#xA;As many of you know the new language supported at &lt;a href=&#34;http://code.google.com/appengine/&#34; target=&#34;_blank&#34;&gt;GAE&lt;/a&gt; now is Java, as officially announced on their &lt;a href=&#34;http://googleappengine.blogspot.com/2009/04/seriously-this-time-new-language-on-app.html&#34; target=&#34;_blank&#34;&gt;blog&lt;/a&gt;. As a Ruby/Rails developer you might not be interested on it but here is a reason you should be: &lt;a href=&#34;http://jruby.codehaus.org/&#34; target=&#34;_blank&#34;&gt;JRuby&lt;/a&gt;.&lt;br&gt;&lt;br&gt;It was only a matter of time until we saw some people deploying JRuby on Rails apps on GAE, like Ola Bini&#39;s &lt;a href=&#34;http://olabini.com/blog/2009/04/jruby-on-rails-on-google-app-engine/&#34; target=&#34;_blank&#34;&gt;mini blog app&lt;/a&gt;. Guess that was the first one really, as he was beta testing the service in secret. Google App Engine imposes a few catches to any java application deployed there and any JRuby app wouldn&#39;t be different. For instance, your Java API access is limited to &lt;a href=&#34;http://code.google.com/appengine/docs/java/jrewhitelist.html&#34; target=&#34;_blank&#34;&gt;these classes - called JRE Class whitelist&lt;/a&gt;.&lt;br&gt;&lt;br&gt;As you can see on his blog, you don&#39;t need active record and in fact shouldn&#39;t even be loading that on your app.&lt;br&gt;&lt;br&gt;I felt compelled to try it and the timing was perfect. I am currently developing a JRuby on Rails app at the company I work for and it was a perfect fit, since we are not using ActiveRecord. The reason is that we get the data we need from other sources, such as web services and even text files.&lt;br&gt;&lt;br&gt;Ola Bini&#39;s tips were crucial here. He provides a small script you can use to prepare the jars you&#39;re sending to your app. Another important piece was the &lt;a href=&#34;http://code.google.com/appengine/downloads.html#Google_App_Engine_SDK_for_Java&#34; target=&#34;_blank&#34;&gt;Google App Engine SDK for Java&lt;/a&gt;. It ships with a server that emulates GAE&#39;s behaviour locally so you&#39;re less likely to have problems once you deploy it.&lt;br&gt;&lt;br&gt;I did have a problem though with the number of files uploaded to my appspot. It&#39;s currently limited to 1000 - a thousand - and a Rails app can easily exceed this limit. So before deploying, remove anything that is not crucial: activerecord - you should&#39;ve done it already - , all tests directories - including the ones inside gems your app needs in order to work, fixtures and etc.&lt;br&gt;&lt;br&gt;After that it was rewarding seeing a custom JRuby On Rails application working perfectly on GAE. And as much as I&#39;d like to, I can&#39;t really share the URL since it&#39;s a private app but I encourage people to try it. I believe GAE will ultimately help the community improve JRuby even more.&lt;br&gt;&lt;br&gt;And as a last tip, this time thanks to &lt;a href=&#34;http://akitaonrails.com/&#34; target=&#34;_blank&#34;&gt;Fabio Akita&lt;/a&gt;, is &lt;a href=&#34;http://gist.github.com/91684&#34; target=&#34;_blank&#34;&gt;this snippet&lt;/a&gt;. You should redirect your log so you can debug your app form GAE&#39;s dashboard.&lt;br&gt;&lt;br&gt;Have fun!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails performance scripts profiler benchmarker</title>
      <link>http://leonardoborges.com/writings/2008/11/20/rails-performance-scripts-profiler-benchmarker/</link>
      <pubDate>Thu, 20 Nov 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/11/20/rails-performance-scripts-profiler-benchmarker/</guid>
      <description>&lt;p&gt;&#xA;There are several ways you can measure your rails application&#39;s performance. The techniques range from filling your code with &#34;puts&#34; statements - :p - to fancy ones like &lt;a href=&#34;http://www.newrelic.com/&#34;&gt;NewRelic&lt;/a&gt; - which is quite nice, I must say.&lt;br&gt;&lt;br&gt;But what many people don&#39;t know is that rails ships with a handful of scripts to help you out. One of which is called &lt;strong&gt;profiler&lt;/strong&gt;, located under your application&#39;s &lt;strong&gt;scripts/performance&lt;/strong&gt; directory.&lt;br&gt;&lt;br&gt;By default it uses the standard ruby profiler but if you want more speed - and additional reporting options - , consider installing the &lt;a href=&#34;http://ruby-prof.rubyforge.org/&#34;&gt;ruby-prof&lt;/a&gt; gem.&lt;br&gt;&lt;br&gt;So if you execute it without params, you&#39;ll get a clue of how it works:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ script/performance/profiler&lt;br&gt;Usage: ./script/performance/profiler &#39;Person.expensive_method(10)&#39; [times] [flat|graph|graph_html]&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Pretty self explanatory, right?&lt;br&gt;&lt;br&gt;As a sample code, I have in my rails app a dumb model with a really dumb method I wanna profile:&lt;br&gt;&lt;br&gt;&#xA;&lt;div class=&#34;code&#34;&gt;&#xA;  &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;&#xA;  class Article&#xA;    def self.find_all_with_delay&#xA;      sleep 10&#xA;      self.find(:all)&#xA;    end&#xA;  end&#xA;  &lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;br&gt;&lt;br&gt;Clearly this method doesn&#39;t perform well and is a bottle neck in our super application! But let&#39;s see what rails&#39; profiler tells us:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34; line=&#34;1&#34;&gt;&lt;br&gt;$ script/performance/profiler &#39;Article.find_all_with_delay&#39; 1 graph &gt; text_graph.perf&lt;br&gt;Loading Rails...&lt;br&gt;Using the ruby-prof extension.&lt;br&gt;Thread ID: 109440&lt;br&gt;Total Time: 10.147995&lt;br&gt;&lt;br&gt;  %total   %self     total      self      wait     child            calls   Name&lt;br&gt;--------------------------------------------------------------------------------&lt;br&gt; 100.00%   0.00%     10.15      0.00      0.00     10.15                1     Global#[No method] (/Users/leo/projects/test/vendor/rails/railties/lib/commands/performance/profiler.rb:24}  /Users/leo/projects/test/vendor/rails/railties/lib/commands/performance/profiler.rb:24&lt;br&gt;                     10.15      0.00      0.00     10.15              1/1     Object#profile_me&lt;br&gt;--------------------------------------------------------------------------------&lt;br&gt;                     10.15      0.00      0.00     10.15              1/1     Global#[No method]&lt;br&gt; 100.00%   0.00%     10.15      0.00      0.00     10.15                1     Object#profile_me ((eval):1}  (eval):1&lt;br&gt;                      0.00      0.00      0.00      0.00              1/1     Class#const_missing&lt;br&gt;                     10.15      0.00      0.00     10.15              1/1     &lt;Class::Article(id: integer, name: string, content: string, created_at: datetime, &lt;/p&gt;</description>
    </item>
    <item>
      <title>dont use rexml i mean it</title>
      <link>http://leonardoborges.com/writings/2008/10/08/dont-use-rexml-i-mean-it/</link>
      <pubDate>Wed, 08 Oct 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/10/08/dont-use-rexml-i-mean-it/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://www.germane-software.com/software/rexml/&#34;&gt;REXML&lt;/a&gt; is the standard XML processing library for Ruby. It&#39;s on Ruby&#39;s core and is terribly &lt;strong&gt;slow&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;Yeah, I know it&#39;s pretty simple to use, got a nice interface and, again, it&#39;s just there. And it is a good library, for most things. But if you, as me, came to a point that processing XML is taking 50% of the time to render a rails action, it&#39;s time to change.&lt;br&gt;&lt;br&gt;My tip? Use &lt;a href=&#34;http://libxml.rubyforge.org/&#34;&gt;libxml&lt;/a&gt; instead. The numbers on their home page speak for themselves. Try it yourself, you won&#39;t be disappointed. And I&#39;m really happy with the performance increase on our app.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>railsconf europe 2008 impressions and highlights</title>
      <link>http://leonardoborges.com/writings/2008/09/09/railsconf-europe-2008-impressions-and-highlights/</link>
      <pubDate>Tue, 09 Sep 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/09/09/railsconf-europe-2008-impressions-and-highlights/</guid>
      <description>&lt;p&gt;&#xA;I&#39;m back in Madrid again after the RailsConf and I think it&#39;s time to say something about it. :)&lt;br&gt;&lt;br&gt;First off, the infrastructure provided by the conference was really great. The rooms, WiFi connection, food...Â  Really well organized.&lt;br&gt;&lt;br&gt;Now to the sessions, highlights:&lt;br&gt;&lt;br&gt;&lt;strong&gt;Tutorials (Tuesday)&lt;/strong&gt;&lt;br&gt;- &lt;a href=&#34;http://nealford.com/downloads/Ford-Farley_Meta_programming_ruby-tutorial.pdf&#34;&gt;Meta-programming Ruby for fun and profit&lt;/a&gt; (Neal Ford, Patrick Farley)&lt;br&gt;The old and good techniques that made Ruby so powerful. Here Neal and Patrick walked us through the main tricks to meta programming like open classes - and conditionally open them - , dynamically define methods, sending messages to objects and how Ruby can help test your Java code in a much easier way.&lt;br&gt;&lt;br&gt;I&#39;ve put the link to the slides but honestly I don&#39;t think they&#39;re too much useful without the talking.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Sessions (Wednessday)&lt;/strong&gt;&lt;br&gt;- EC2, MapReduce and Distributed processing (&lt;a href=&#34;http://railspikes.com&#34;&gt;Jonathan Dahl&lt;/a&gt;)&lt;br&gt;Jonathan explained the theory behind &lt;a href=&#34;http://en.wikipedia.org/wiki/Mapreduce&#34;&gt;MapReduce&lt;/a&gt; using very simple ruby examples, providing the basics on how to distribute and paralelize tasks accross multiple machines.&lt;br&gt;&lt;br&gt;He also introduced &lt;a href=&#34;http://hadoop.apache.org/core/&#34;&gt;Hadoop&lt;/a&gt;, a platform built in Java that &#34;lets one easily write and run     applications that process vast amounts of data&#34;. What I liked the most was the simplicity he explained this subject. As of today, his presentation is not available online. Stay tuned as I&#39;m gonna update this post with the links, as soon as they&#39;re available.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Sessions (Thursday)&lt;/strong&gt;&lt;br&gt;- &lt;a href=&#34;http://nealford.com/downloads/conferences/canonical/Neal_Ford-Debugging_and_Testing_the_Web_Tier.zip&#34;&gt;Debugging &amp;amp; Testing the Web Tier&lt;/a&gt; (&lt;a href=&#34;http://nealford.com&#34;&gt;Neal Ford&lt;/a&gt;)&lt;br&gt;If you&#39;ve been concerned about testing your app&#39;s web tier lately, this presentation would probably not show you anything new. Neal talks about the need to debug and test javascript behaviour accross multiple browsers, using tools like &lt;a href=&#34;http://getfirebug.com/&#34;&gt;Firebug&lt;/a&gt;, &lt;a href=&#34;http://www.jsunit.net/&#34;&gt;JSUnit&lt;/a&gt; and &lt;a href=&#34;http://selenium.openqa.org/&#34;&gt;Selenium&lt;/a&gt;. If you have no idea about what these tools are, please stop now and go evaluate them!&lt;br&gt;&lt;br&gt;We are pretty concerned about testing on my actual job, but selenium tests can be a pain sometimes - a.k.a extremely slow. And what ends up happening is that they are forgotten. Developers only run the test suite if it&#39;s not painful and it&#39;s lightning fast. Here&#39;s is where the highlight for this session comes: &lt;a href=&#34;http://www.thefrontside.net/crosscheck&#34;&gt;CrossCheck&lt;/a&gt;.&lt;br&gt;&lt;br&gt;The idea is to be able to test your javascript code accross multiple browsers without the need to launch them. In fact, you don&#39;t even need a browser installed. The negative point is that it&#39;s kinda fallen behind because now you can only test older versions of browsers. But since the project is getting a lot of traction, I&#39;m pretty sure this will be solved soon.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;&lt;br&gt;My overall impression of the other sessions I attended is that some speakers just didn&#39;t have time to properly prepare themselves, what made me think this years&#39;s RailsConf wasn&#39;t all that I expected.&lt;br&gt;&lt;br&gt;But I also met interesting people and after all one of the key points in a conference is networking. :)&lt;br&gt;&lt;br&gt;Definitely worth it though. And that&#39;s why I took the time to provide this highlights.&lt;br&gt;&lt;br&gt;c u soon&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>railsconf europe 2008 heading to berlin</title>
      <link>http://leonardoborges.com/writings/2008/08/30/railsconf-europe-2008-heading-to-berlin/</link>
      <pubDate>Sat, 30 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/30/railsconf-europe-2008-heading-to-berlin/</guid>
      <description>&lt;p&gt;&#xA;The title says it already.&lt;br&gt;&lt;br&gt;On monday I&#39;ll be going to Berlin to attend this yearÂ´s &lt;a href=&#34;http://en.oreilly.com/railseurope2008/public/content/home&#34;&gt;RailsConf&lt;/a&gt;.&lt;br&gt;&lt;br&gt;This will be my first one and of course my expectations are pretty high!&lt;br&gt;&lt;br&gt;As usual, after the conference I&#39;ll try and give a summary of what happened there, providing as much content as I can.&lt;br&gt;&lt;br&gt;Anyone else&#39;s going??? :)&lt;br&gt;&lt;br&gt;C u there!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac os x getting mysql and rails to work</title>
      <link>http://leonardoborges.com/writings/2008/08/28/mac-os-x-getting-mysql-and-rails-to-work/</link>
      <pubDate>Thu, 28 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/28/mac-os-x-getting-mysql-and-rails-to-work/</guid>
      <description>&lt;p&gt;&#xA;So I couldn&#39;t resist and bought myself a MacBook Pro! It&#39;s my first week with my new toy and I&#39;m really enjoying it.&lt;br&gt;&lt;br&gt;But I need to do something useful with it so I started to prepare it to be my new development platform, starting with Ruby/Rails + MySQL: Here is where the fun begins!&lt;br&gt;&lt;br&gt;After I installed both Rails and MySQL, I fired up a terminal an typed:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;sudo gem install mysql&lt;/pre&gt;&lt;br&gt;...and here is what u get&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;ERROR: Failed to build gem native extension.&lt;/pre&gt;&lt;br&gt;If you google this error you will find a couple solutions and this is the one that worked for me:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;ARCHFLAGS=&#34;-Os -arch x86_64 -fno-common&#34;&lt;br&gt;sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql&lt;br&gt;--with-mysql-config=/usr/local/mysql/bin/mysql_config&lt;/pre&gt;&lt;br&gt;Now, confident enough, I created a sample rails app and tried to create the development database:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;leo$ rake db:create (in /Users/leo/projects/test)&lt;br&gt;dyld: lazy symbol binding failed: Symbol not found: _mysql_init&lt;/pre&gt;&lt;br&gt;Doesn&#39;t look happy yet huh? This took me a while to figure out but it turned out to be fairly simple.&lt;br&gt;I have no idea why but after I installed the gem I had the file mysql.bundle in two different places:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;/Library/Ruby/Gems/1.8/gems/mysql-2.7/lib/mysql.bundle&lt;br&gt;/Library/Ruby/Gems/1.8/gems/mysql-2.7/mysql.bundle&lt;/pre&gt;&lt;br&gt;The solution was to remove the first copy of the file. Now everything is working fine at this end!&lt;br&gt;I really hope this is useful to someone!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails vulnerability on rexml</title>
      <link>http://leonardoborges.com/writings/2008/08/24/rails-vulnerability-on-rexml/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/24/rails-vulnerability-on-rexml/</guid>
      <description>&lt;p&gt;&#xA;REXML, the XML library uses by many ruby apps, including rails, has a vulnerability that requires an immediate patch on whatever rails version you&#39;re using.&lt;br&gt;&lt;br&gt;Details and instructions on the official rails weblog, &lt;a href=&#34;http://weblog.rubyonrails.org/2008/8/23/dos-vulnerabilities-in-rexml&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;But basically, this is what you need to do:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;gem install rexml-expansion-fix&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Then, require rexml-expansion-fix in your rails&#39;s app environment.rb file.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>the biggest rails event in latin america</title>
      <link>http://leonardoborges.com/writings/2008/08/04/the-biggest-rails-event-in-latin-america/</link>
      <pubDate>Mon, 04 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/04/the-biggest-rails-event-in-latin-america/</guid>
      <description>&lt;p&gt;&#xA;Behold latin american railers!&lt;br&gt;&lt;br&gt;This year we will have the &lt;a href=&#34;http://www.locaweb.com.br/railssummit/&#34;&gt;Rails Summit Latin America&lt;/a&gt; on October, 15th and 16th, in SÃ£o Paulo, Brazil.&lt;br&gt;&lt;br&gt;It&#39;s by far the biggest Rails event we&#39;ve ever had, including many of the speakers that were present at &lt;a href=&#34;http://en.oreilly.com/rails2008/public/content/home&#34;&gt;RailsConf&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;a href=&#34;http://akitaonrails.com/&#34;&gt;FÃ¡bio Akita&lt;/a&gt; is also one of the speakers and provides more details on his &lt;a href=&#34;http://akitaonrails.com/2008/8/1/largada-para-o-maior-evento-de-rails-da-am-rica-latina&#34;&gt;blog&lt;/a&gt;.&lt;br&gt;&lt;br&gt;If you&#39;re a assumed rails geek don&#39;t miss the opportunity to hear from the big names and to know a beautiful country like Brazil.&lt;br&gt;&lt;br&gt;Oh, btw, if you&#39;re brazilian, like me, you have no excuse to miss this party!&lt;br&gt;&lt;br&gt;Enjoy!!!&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;br&gt;&lt;a href=&#34;http://www.locaweb.com.br/railssummit&#34;&gt;&lt;br&gt;&lt;img src=&#34;http://www.akitaonrails.com/assets/2008/8/1/468x60.gif&#34; alt=&#34;Rails Summit Latin America&#34; title=&#34;Rails Summit Latin America&#34; border=&#34;0&#34; width=&#34;468&#34; height=&#34;60&#34;/&gt;&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>passenger mod_rails and problems with custom apache installation</title>
      <link>http://leonardoborges.com/writings/2008/06/07/passenger-mod_rails-and-problems-with-custom-apache-installation/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/06/07/passenger-mod_rails-and-problems-with-custom-apache-installation/</guid>
      <description>&lt;p&gt;&#xA;This week we started to test &lt;a href=&#34;http://www.modrails.com/&#34;&gt;mod_rails&lt;/a&gt; in a couple of projects where I work on. One in production.&lt;br&gt;&lt;br&gt;Of course it&#39;s too early for any conclusions, but I just wanted to share a couple of problems you might find when the installer tries to compile the Apache module.&lt;br&gt;&lt;br&gt;In our case, and I believe it is the case of many servers out there, we have a custom Apache installation, what makes the installer not find it and/or not find the Apache Portable Runtime (APR) sometimes.&lt;br&gt;&lt;br&gt;The first one is easy and is documented &lt;a href=&#34;http://www.modrails.com/documentation/Users%20guide.html#specifying_correct_apache_in&#34;&gt;here&lt;/a&gt;. You just seed to export the following environment variable, pointing to your apache installation:&lt;br&gt;&lt;pre&gt;&lt;tt&gt;&lt;tt&gt;export APXS2=/opt/apache2/bin/apxs&lt;br&gt;&lt;/tt&gt;&lt;/tt&gt;&lt;/pre&gt;&lt;br&gt;The second one is a bit tricky but it happened only when I tried to install passenger in another server that had CentOS. In this case, you will also need the following environment variable, pointing to your Apache APR config:&lt;br&gt;&lt;pre&gt;export APR_CONFIG=/usr/local/apache2/bin/&lt;span class=&#34;nfakPe&#34;&gt;apr&lt;/span&gt;-1-config&lt;/pre&gt;&lt;br&gt;It took me a fair amount of time googling around to find this answer, so I hope it&#39;ll be useful for someone. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>euruko 2008 materials available</title>
      <link>http://leonardoborges.com/writings/2008/05/14/euruko-2008-materials-available/</link>
      <pubDate>Wed, 14 May 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/05/14/euruko-2008-materials-available/</guid>
      <description>&lt;p&gt;&#xA;As some of you know &lt;a href=&#34;http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/&#34;&gt;I went&lt;/a&gt; to the &lt;a href=&#34;http://www.euruko2008.org&#34;&gt;European Ruby Conf in Prague&lt;/a&gt;, this year.&lt;br&gt;&lt;br&gt;The event was awesome and it&#39;s good to know they finally made available the majority of the slides, &lt;a href=&#34;http://www.euruko2008.org/pages/2-program&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;They also published &lt;a href=&#34;http://www.avc-cvut.cz/avc.php?id=6830&amp;amp;language=en_US&#34;&gt;Matz&#39;s keynote&lt;/a&gt;, and more videos from the conference are being edited right now, so stay tuned to their home page!&lt;br&gt;&lt;br&gt;Enjoy!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>a couple of things from here</title>
      <link>http://leonardoborges.com/writings/2008/05/10/a-couple-of-things-from-here/</link>
      <pubDate>Sat, 10 May 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/05/10/a-couple-of-things-from-here/</guid>
      <description>&lt;p&gt;&#xA;It&#39;s been some time since my last post but here I am! Where? In Spain, of course! Having a great time, I must say.&lt;br&gt;&lt;br&gt;I arrived last week in Madrid and the past 2 weeks before that I spent basically packing my stuff. There is still some paperwork going on but everything is flowing well.&lt;br&gt;&lt;br&gt;Besides this little feedback, I was reading this week&#39;s issue of the excellent series &lt;a href=&#34;http://antoniocangiano.com/2008/05/05/this-week-in-ruby-may-5-2008/&#34;&gt;This Week In Ruby&lt;/a&gt;, from my friend &lt;a href=&#34;http://antoniocangiano.com/&#34;&gt;Antonio Cangiano&lt;/a&gt;. I found something quite interesting, a plugin called &lt;a href=&#34;http://hobocentral.net/hobofields/&#34;&gt;HoboFields&lt;/a&gt;.&lt;br&gt;&lt;br&gt;One of the things that bothers me in rails is the fact that by looking at your model classes, you can&#39;t tell the fields you have there. Sure, you can look at the migration script. Yeah, you can also load the development environment and inspect the object. It&#39;s a pain in the @zz! But this is the way ActiveRecord works...&lt;br&gt;&lt;br&gt;Other ORM solutions like &lt;a href=&#34;http://datamapper.org/&#34;&gt;DataMapper&lt;/a&gt;, allows you to define the fields directly in the class. It&#39;s a much cleaner and clear way to maintain your models. And you get to know what properties you have just by looking at your classes.&lt;br&gt;&lt;br&gt;That&#39;s exactly what HoboFields adds to ActiveRecord.&lt;br&gt;&lt;br&gt;You define your properties and its types straight into your model class, and the plugin creates the migration scripts for you. Coming from a java world my self, I find it rather interesting, useful and it also reminds me of the way &lt;a href=&#34;http://hibernate.org&#34;&gt;Hibernate&lt;/a&gt; works. You define your mappings with anotations in your class and hibernate just generate the schemas from there.&lt;br&gt;&lt;br&gt;It&#39;s worth a try.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>passengermod_rails released</title>
      <link>http://leonardoborges.com/writings/2008/04/14/passengermod_rails-released/</link>
      <pubDate>Mon, 14 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/14/passengermod_rails-released/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://www.modrails.com/&#34;&gt;Passenger(mod_rails)&lt;/a&gt; has been released.&lt;br&gt;&lt;br&gt;The idea is to ease the pain on rails applications deployment. I tested myself and in less than five minutes I had my application working behind Apache!&lt;br&gt;&lt;br&gt;I&#39;m not going to say much here besides the fact that it seems like a really good option for rails deployment and &lt;a href=&#34;http://www.modrails.com/testimonials.html&#34;&gt;people&lt;/a&gt; have been talking about it already, including &lt;a href=&#34;http://www.loudthinking.com/&#34;&gt;DHH&lt;/a&gt;.&lt;br&gt;&lt;br&gt;But I do recommend a read on the &lt;a href=&#34;http://www.modrails.com/documentation/Architectural%20overview.html&#34;&gt;architecture overview&lt;/a&gt; document. Be sure to read it all, specially the part on &lt;a href=&#34;http://www.modrails.com/documentation/Architectural%20overview.html#concurrent_requests&#34;&gt;handling concurrent requests&lt;/a&gt;.&lt;br&gt;&lt;br&gt;To install, &#34;it doesn&#39;t get easier than&#34; &lt;a href=&#34;http://www.modrails.com/install.html&#34;&gt;that&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Good job guys.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jruby db2 xquery bug</title>
      <link>http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</link>
      <pubDate>Mon, 07 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;Update&lt;/strong&gt;: Follow up link to this issue on JRuby&#39;s Jira, &lt;a href=&#34;http://jira.codehaus.org/browse/JRUBY-2430&#34;&gt;here&lt;/a&gt;&lt;br&gt;&lt;br&gt;As I told in my last &lt;a href=&#34;http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/&#34;&gt;post&lt;/a&gt;, it was time to give JRuby a serious try. So I took one of our rails projects at work and decided to migrate it to JRuby and see what happens.&lt;br&gt;&lt;br&gt;We heavily use the XML capabilities of DB2 and this was a huge problem. Every query would work just fine through the activerecord-jdbc-adapter - part of the &lt;a href=&#34;http://rubyforge.org/projects/jruby-extras&#34;&gt;JRuby Extras&lt;/a&gt; . But every &lt;strong&gt;X&lt;/strong&gt;query would gracefully &lt;strong&gt;fail&lt;/strong&gt;!&lt;br&gt;&lt;br&gt;After some debugging I got stuck and decided to get JRuby and activerecord-jdbc-adapter&#39;s source to see what was happening.&lt;br&gt;&lt;br&gt;As I could see, it has a bug -in my opinion - at the java part of the code. The jdbc-adapter is a bridge to allow Active Record to talk with databases through native JDBC drivers, so it&#39;s normal that we do have a java part here. At this point, what the code does is to inspect the sql statement sent from ruby and decide if it&#39;s a select, update or insert.&lt;br&gt;&lt;br&gt;I fixed the problem and submitted a &lt;a href=&#34;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=19340&amp;amp;group_id=2014&amp;amp;atid=7859&#34;&gt;patch&lt;/a&gt; to rubyforge. I&#39;m not sure if it&#39;s the best solution or not, but now I got the xQueries working just fine.&lt;br&gt;&lt;br&gt;I&#39;d love to hear from people with similar environments whether this patch works for you or not. I&#39;m sure I didn&#39;t try every possibility.&lt;br&gt;&lt;br&gt;If you wanna try it, just drop me a message (e-mail in the &lt;a href=&#34;http://leonardoborges.com/writings/about/&#34;&gt;About&lt;/a&gt; page) and I can send the pre-compiled jar file - for activerecord-jdbc-0.8&lt;br&gt;&lt;br&gt;You can also just check out the code and compile yourself. ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>qcon 2008 slides available</title>
      <link>http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/</link>
      <pubDate>Fri, 04 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/</guid>
      <description>&lt;p&gt;&#xA;Most of last QCon&#39;s presentations are available for download &lt;a href=&#34;http://jaoo.dk/london-2008/schedule&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Highlights to Ola Bini&#39;s on &lt;a href=&#34;http://jaoo.dk/london-2008/file?path=/qcon-london-2008/slides/OlaBini_JRuby_Power_on_the_JVM.pdf&#34;&gt;JRuby(pdf)&lt;/a&gt; and Randy Shoup&#39;s on  &lt;a href=&#34;http://jaoo.dk/london-2008/file?path=/qcon-london-2008/slides/RandyShoup_eBaysArchitecturalPrinciples.pdf&#34;&gt;eBay&#39;s architectural principles(pdf)&lt;/a&gt;.&lt;br&gt;&lt;br&gt;And while we&#39;re talking about JRuby, it&#39;s impressive how it&#39;s becoming a recurrent and big subject. Fast. It had its own small space at big event like QCon and in the last Euruko in Prague, we had a presentation by the JRuby Core Developers &lt;a href=&#34;http://headius.blogspot.com/&#34;&gt;Charles Nutter&lt;/a&gt; and &lt;a href=&#34;http://www.bloglines.com/blog/ThomasEEnebo&#34;&gt;Thomas Enebo&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Big companies are sponsoring JRuby&#39;s development indirectly or directly, like &lt;a href=&#34;http://www.sun.com&#34;&gt;Sun&lt;/a&gt;. And other big companies are endorsing its production ready state, like &lt;a href=&#34;http://www.oracle.com&#34;&gt;Oracle&lt;/a&gt;, which has a publicly available website developed with JRuby On Rails.&lt;br&gt;&lt;br&gt;It&#39;s past the time to give it a serious try...&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>euruko 2008 european rubyconf prague</title>
      <link>http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/</link>
      <pubDate>Tue, 25 Mar 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/</guid>
      <description>&lt;p&gt;&#xA;On friday I&#39;ll be heading Prague for the &lt;a href=&#34;http://www.euruko2008.org/&#34;&gt;European RubyConf&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Anyone is going? :)&lt;br&gt;&lt;br&gt;Almost 300 attendees already registered for the event. And a few very interesting people will be speaking there like &lt;a href=&#34;http://en.wikipedia.org/wiki/Yukihiro_Matsumoto&#34;&gt;Matz&lt;/a&gt; and &lt;a href=&#34;http://www.loudthinking.com/&#34;&gt;DHH&lt;/a&gt; (this one, through skype).&lt;br&gt;&lt;br&gt;Besides that, the organization staff is scheduling 2 parties, friday and saturday, for the attendees.&lt;br&gt;&lt;br&gt;Networking comes to mind, doesn&#39;t it? I think it will be a great opportunity to meet interesting and bright people.&lt;br&gt;&lt;br&gt;So, see u in Prague!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>openid</title>
      <link>http://leonardoborges.com/writings/2008/02/18/openid/</link>
      <pubDate>Mon, 18 Feb 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/02/18/openid/</guid>
      <description>&lt;p&gt;&#xA;I think I&#39;ve been really lucky lately. In my new job I&#39;m getting to work with many interesting things and &lt;a href=&#34;http://openid.net/&#34;&gt;OpenID&lt;/a&gt; is just one of them.&lt;br&gt;&lt;br&gt;We are investing high in Ruby on Rails and we have now a few internal applications in development stages. Our manager wanted the ability to let people log in to our rails applications(for now) using their OpenID accounts.&lt;br&gt;&lt;br&gt;It was a funny task, as I knew very little about OpenID. The idea actually is really good. Instead of creating a new user account on each new service/site you&#39;d like to subscribe to, you create a single user account in a OpenID provider - like &lt;a href=&#34;https://www.myopenid.com/&#34;&gt;MyOpenID&lt;/a&gt; - and use this identity to authenticate yourself in the services/sites that support this protocol.&lt;br&gt;&lt;br&gt;What do we earn from that? Well, in my opinion, we can get a couple of benefits:&lt;br&gt;&lt;br&gt;- You don&#39;t need to memorize 723 logins and 723 passwords (if you really care about creating different passwords for all of your user accounts)&lt;br&gt;&lt;br&gt;- You don&#39;t authenticate yourself to the service you&#39;re attempting to use. This service actually asks to your provider if your identity is valid, and you authenticate yourself there. Nowhere else.&lt;br&gt;&lt;br&gt;I strongly recommend you visit the &lt;a href=&#34;http://openid.net/&#34;&gt;OpenID&lt;/a&gt; to understand more about it.&lt;br&gt;&lt;br&gt;But, back to the problem, we needed to put it working in a rails app. And that&#39;s when I found the &lt;a href=&#34;http://openidenabled.com/ruby-openid/&#34;&gt;ruby-openid&lt;/a&gt; library, provided by &lt;a href=&#34;http://openidenabled.com/&#34;&gt;OpenID Enabled&lt;/a&gt;.&lt;br&gt;&lt;br&gt;It is a complete library, really well documented that provides an abstraction layer both for consumer and server applications.&lt;br&gt;&lt;br&gt;My first step was to develop the consumer. That&#39;s what you need if you are going to provide your users with OpenID authentication in your web site. The ruby-openid library comes with several samples that really helped me out here. They were developed using &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby On Rails&lt;/a&gt; and are a really good start point.&lt;br&gt;&lt;br&gt;After this step, I was asked to evaluate the possibility of being a OpenID provider. At first I thought it would be a really complicated task, but again this ruby library had a great example of a simple provider. The drawback is that the samples were developed in an older version of Rails ( &amp;lt; 2.x ) . So I had to freeze the Rails version to 1.2.5 so I could run the provider sample code.&lt;br&gt;&lt;br&gt;I am now working on porting this code to Rails 2.x, into one of our applications and it&#39;s been flowing well so far. Just wanted to share this library for those of you trying something similar. It is really worth a look.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails 20 xml data type and db2</title>
      <link>http://leonardoborges.com/writings/2008/01/02/rails-20-xml-data-type-and-db2/</link>
      <pubDate>Wed, 02 Jan 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/01/02/rails-20-xml-data-type-and-db2/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;[2008/04/30] Update:&lt;/strong&gt; The ibm_db gem has been updated to support the new Rails 2.0 style migration. Now you can just use t.xml and it will work. Look &lt;a href=&#34;http://rubyforge.org/forum/forum.php?forum_id=24055&#34;&gt;here&lt;/a&gt; for more info. Thanks to Mario Briggs for pointing me to the update.&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;In my new job we work with XML data natively stored on DB2. I have done some test with Rails and DB2 a few weeks ago and it&#39;s pretty interesting, specially the easiness that Rails deals with XML.&lt;br&gt;&lt;br&gt;We decided to test some new features of DB2 9.5 and I decided to test them with Rails 2.0.&lt;br&gt;&lt;br&gt;So I created a new Rails app, configured the database.yml to use the &lt;a href=&#34;http://db2onrails.com/2007/10/17/ibm_db-gem-updated-to-090/&#34;&gt;idm_db&lt;/a&gt; gem and fired:&lt;br&gt;&lt;br&gt;&lt;code&gt;$ rake db:create&lt;/code&gt;&lt;br&gt;&lt;br&gt;The output is nice but, the database isn&#39;t there! I suppose it&#39;s something with the gem that needs to be updated. But really don&#39;t know about it. It just doesn&#39;t work. But this will not hold us down. I will just create the database by hand and keep going with my tests.&lt;br&gt;&lt;br&gt;After that, I created a new model &lt;em&gt;XmlDocument,&lt;/em&gt; which has a column named &lt;em&gt;data&lt;/em&gt;, of type XML. According to the new migrations syntax, my model&#39;s migration would look something similar with this:&lt;br&gt;&lt;br&gt;&lt;code&gt;class CreateXmlDocuments &amp;lt; ActiveRecord::Migration&lt;br&gt;def self.up&lt;br&gt;create_table :xml_documents do |t|&lt;br&gt;t.xml :data&lt;br&gt;t.timestamps&lt;br&gt;end&lt;br&gt;end&lt;/code&gt;&lt;br&gt;&lt;br&gt;def self.down&lt;br&gt;drop_table :xml_documents&lt;br&gt;end&lt;br&gt;end&lt;br&gt;&lt;br&gt;Right? Ok, I fired up a terminal and lauched:&lt;br&gt;&lt;br&gt;&lt;code&gt;$ rake db:migrate&lt;/code&gt;&lt;br&gt;&lt;br&gt;The output? Here it is:&lt;br&gt;&lt;br&gt;&lt;code&gt;== 3 CreateXmlDocuments: migrating ============================================&lt;br&gt;-- create_table(:xml_documents)&lt;br&gt;rake aborted!&lt;br&gt;undefined method `xml&#39; for #&lt;br&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;Yes, a big nice exception! The new migration syntax doesn&#39;t allow you to do &lt;em&gt;t.xml&lt;/em&gt;! But please don&#39;t ask me why! :p&lt;br&gt;The solution? Well, although it&#39;s weird - imo - , it&#39;s also easy. You can mix the new and the old syntax in the same file. So our model&#39;s  migration  will now look like this:&lt;br&gt;&lt;br&gt;&lt;code&gt;class CreateXmlDocuments &amp;lt; ActiveRecord::Migration&lt;br&gt;def self.up&lt;br&gt;create_table :xml_documents do |t|&lt;br&gt;t.column  :data, :xml&lt;br&gt;t.timestamps&lt;br&gt;end&lt;br&gt;end&lt;/code&gt;&lt;br&gt;&lt;br&gt;def self.down&lt;br&gt;drop_table :xml_documents&lt;br&gt;end&lt;br&gt;end&lt;br&gt;&lt;br&gt;And that&#39;s it! We&#39;re ready to go! I didn&#39;t find anything else different so far, besides what I described here. Hope this helps!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails 20 scaffold</title>
      <link>http://leonardoborges.com/writings/2007/12/21/rails-20-scaffold/</link>
      <pubDate>Fri, 21 Dec 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/12/21/rails-20-scaffold/</guid>
      <description>&lt;p&gt;&#xA;Following the Rails 2.0 hype, I&#39;ve been playing around with it and decided to share a first impression: Scaffolding is gone!&lt;br&gt;&lt;br&gt;But wait, before you knock your head against the wall, let me tell you something: I lied :)&lt;br&gt;&lt;br&gt;Scaffolding is not really gone. It&#39;s just changed a bit.&lt;br&gt;&lt;br&gt;How can I tell? Well, as a good developer I thought: &#34;I&#39;ll just create a scaffold with the new version and see what&#39;s different&#34;&lt;br&gt;&lt;br&gt;I fired up a terminal, created a news rails application and generated a new model:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate model Contact name:string email:string&lt;/code&gt;&lt;/strong&gt; - yes you can do this in rails 2.0, and these fields get into your model&#39;s migration!&lt;br&gt;&lt;br&gt;Now the I have a new model, it&#39;s time for a controller to manage it:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate controller Contacts&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;So your controller would look something like this huh?&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;class ContactsController &amp;lt; ApplicationController&lt;br&gt;scaffold :contact&lt;br&gt;end&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Well, too bad! The method scaffold is gone from ActionController::Base! And I&#39;m not lying this time!&lt;br&gt;&lt;br&gt;Now that the dynamic scaffold is gone, we&#39;re left with the static one.&lt;br&gt;Ok, let&#39;s try it then:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate scaffold contact&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;And it won&#39;t work again! ;) At the end of the output, you will get something like this:&lt;br&gt;&lt;br&gt;&lt;code&gt;Another migration is already named create_contacts: db/migrate/001_create_contacts.rb&lt;/code&gt;&lt;br&gt;&lt;br&gt;It really means that if your model is meant to be used by a scaffold, you better generate it in the same line. It will fail, afaik, if the model previously existed. Destroy yout model and controller, and execute the following:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate scaffold Contact name:string email:string&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Done! Just run your migrations, startup your server and your new scaffold in rails 2.0 will be working gracefully!&lt;br&gt;&lt;br&gt;It took me a while to discover this changes because I didn&#39;t find it well documented. But maybe I was not looking in the right places. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rubyworks production stack for rails</title>
      <link>http://leonardoborges.com/writings/2007/12/01/rubyworks-production-stack-for-rails/</link>
      <pubDate>Sat, 01 Dec 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/12/01/rubyworks-production-stack-for-rails/</guid>
      <description>&lt;p&gt;&#xA;Well, we all know how hard, or at least cumbersome, it can be to set up a production environment to deploy your applications. Besides all the hardware stuff like storages, links, routers you are still left with a huge amount of software configuration to handle. This often includes configuring things like clusters, load balancing and services monitoring - Including notification of interested parts in case of any failure. Pieces of software you have to tie up and make them work together.&lt;br&gt;&lt;br&gt;But hey, ruby lovers, you may have a better way to get this going! Released by &lt;a href=&#34;http://www.thoughtworks.com/&#34; title=&#34;TW&#39;s web site&#34;&gt;ThoughtWorks&lt;/a&gt;, &lt;a href=&#34;http://studios.thoughtworks.com/rubyworks&#34; title=&#34;RubyWorks&#34;&gt;RubyWorks&lt;/a&gt; is, as quoted from their website, a production application stack for &lt;a href=&#34;http://www.rubyonrails.org/&#34; title=&#34;Ruby On Rails&#34;&gt;Ruby On Rails&lt;/a&gt; applications. I decided to give it a try and I really enjoyed it.&lt;br&gt;&lt;br&gt;First of all I didn&#39;t want to mess with my actual configuration so I installed a new vm with &lt;a href=&#34;http://www.virtualbox.org/&#34; title=&#34;Virtual Box&#34;&gt;Virtual Box&lt;/a&gt;. It has Ubuntu 7.10 on it, with 256MB of memory.&lt;br&gt;&lt;br&gt;After installing RubyWorks - instructions on their website -, you get a new skeleton rails app up and running, being served by 4 &lt;a href=&#34;http://mongrel.rubyforge.org/&#34; title=&#34;Mongrel&#34;&gt;mongrels&lt;/a&gt; that defaults to production environment! Impressed? There is more. A &lt;a href=&#34;http://haproxy.1wt.eu/&#34; title=&#34;HAProxy&#34;&gt;HAProxy&lt;/a&gt; is also set up in front of your mongrel servers acting as a load balancer.&lt;br&gt;&lt;br&gt;Well, you probably want to monitor all that stuff huh? A &lt;a href=&#34;http://www.tildeslash.com/monit/&#34; title=&#34;Monit&#34;&gt;monit&lt;/a&gt; web interface is waiting for your call on port 2812! It monitors all your mongrel servers - four by default - and your HAProxy, allowing you to measure CPU and Memory usage, among other things.&lt;br&gt;&lt;br&gt;The coolest thing here is that all these softwares you would have to setup by hand are already working together, ready for production! Well, is it?&lt;br&gt;&lt;br&gt;Going a little deeper, I deployed a database backed application to test this stack&#39;s performance.&lt;br&gt;&lt;br&gt;I used &lt;a href=&#34;http://www.joedog.org/JoeDog/Siege&#34; title=&#34;Siege&#34;&gt;Siege&lt;/a&gt; to stress the app and I am very happy with the results! I compared it with a single mongrel running on production env and no proxy at all.&lt;br&gt;&lt;br&gt;It is worth mentioning that having 4 mongrels running took my vm to 77% of memory usage, while a single mongrel took it to 38%.&lt;br&gt;&lt;br&gt;</description>
    </item>
  </channel>
</rss>
