<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Objective-C on Leonardo Borges</title>
    <link>http://leonardoborges.com/tags/objective-c/</link>
    <description>Recent content in Objective-C on Leonardo Borges</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Mar 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://leonardoborges.com/tags/objective-c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rottingnames for iphone available for free</title>
      <link>http://leonardoborges.com/writings/2011/03/19/rottingnames-for-iphone-available-for-free/</link>
      <pubDate>Sat, 19 Mar 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/03/19/rottingnames-for-iphone-available-for-free/</guid>
      <description>&lt;p&gt;&#xA;Following the staggering success of the online version of &lt;a href=&#34;http://rottingnames.heroku.com&#34;&gt;RottingNames&lt;/a&gt; - where by success I mean the handful of metal heads constantly using the app :) - I released the &lt;a href=&#34;http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8&#34;&gt;iPhone version for free &lt;/a&gt;. You can now generate crazy and fun names anywhere! Go &lt;a href=&#34;http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8&#34;&gt;get it&lt;/a&gt;!&lt;br&gt;&lt;br&gt;I&#39;ve been meaning to post this for Â a while but I was waiting to have some free time and add a few new features to the app, which I just realised won&#39;t happen any time soon given the priorities I have at the moment. But by all means feel free to drop a line if you&#39;re dying about a missing feature.&lt;br&gt;&lt;br&gt;Now go have fun ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>learning objective c a ruby analogy</title>
      <link>http://leonardoborges.com/writings/2010/02/25/learning-objective-c-a-ruby-analogy/</link>
      <pubDate>Thu, 25 Feb 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/02/25/learning-objective-c-a-ruby-analogy/</guid>
      <description>&lt;p&gt;&#xA;Learning new programming languages is fun. And if it&#39;s your 2nd, 3rd...Nth programming language you will eventually look for features you already know and love.&lt;br&gt;&lt;br&gt;Coming from Ruby - but after having done my fair amount of Java for many years, among other things - I end up looking for features like &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/07/22/procs-lambdas-blocks-whats-the-difference/&#34; target=&#34;_blank&#34;&gt;blocks&lt;/a&gt;, &lt;a href=&#34;http://rubylearning.com/satishtalim/ruby_open_classes.html&#34; target=&#34;_blank&#34;&gt;open classes&lt;/a&gt; and syntax sugar like &lt;a href=&#34;http://ruby-doc.org/core/classes/Module.html#M001681&#34; target=&#34;_blank&#34;&gt;automatic generation of attribute accessors.&lt;/a&gt; These are hard to let go of.&lt;br&gt;&lt;br&gt;Having decided to learn &lt;a href=&#34;http://developer.apple.com/Mac/library/documentation/Cocoa/Conceptual/ObjectiveC/index.html&#34; target=&#34;_blank&#34;&gt;Objective-C&lt;/a&gt; recently, I was delighted to find out that all of these are available - for better or for worse - and wanted to share this analogy with its Ruby counterparts.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Attribute accessors&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;In ruby, this class definition&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790881.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;implements for you the getters and setters of the instance variable &lt;strong&gt;name&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;&lt;br&gt;In Objective-C, the combination of the @property and @synthesize directives provides you with roughly the same result:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790882.js?file=gistfile1.m&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Now the compiler is responsible for writing those getters/setters for you.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Open classes &amp; blocks&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Blocks in ruby are the structures that allow you to - among other things - iterate over arrays like this:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790883.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Objective-C doesn&#39;t have an &#39;each&#39; method in its root array class (NSArray) but since it does support blocks and open classes, you could just write it yourself:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790884.js?file=gistfile1.m&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Yes, I know the syntax isn&#39;t appealing, but using it in your program is a bit better:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790886.js?file=gistfile1.m&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Given the syntactic differences, the code above is very similar to its ruby counterpart. Iterating over an array is just one of the many things blocks are useful for. Others might include dealing with files, network sockets etc...&lt;br&gt;&lt;br&gt;Blocks are powerful structures and are not created everyday, but it&#39;s nice to know that you can resort to them when the time comes. ;)&lt;br&gt;&#xA;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
