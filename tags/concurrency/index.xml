<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concurrency on Leonardo Borges</title>
    <link>http://leonardoborges.com/tags/concurrency/</link>
    <description>Recent content in Concurrency on Leonardo Borges</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Jul 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://leonardoborges.com/tags/concurrency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clojure, core.async and the Lisp advantage</title>
      <link>http://leonardoborges.com/writings/2013/07/06/clojure-core-dot-async-lisp-advantage/</link>
      <pubDate>Sat, 06 Jul 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/07/06/clojure-core-dot-async-lisp-advantage/</guid>
      <description>&lt;p&gt;Long gone are the days when systems needed to do only one thing at a time.&lt;/p&gt;&#xA;&lt;p&gt;Concurrency is the word but it often leads to complex code, dealing with locks, mutexes etcâ€¦&lt;/p&gt;&#xA;&lt;p&gt;There are several different abstractions which allows us to both model and think about asynchronous code in a more sane fashion: futures, promises and events/callbacks are but a few of them.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t get into the merits - or lack thereof - of these alternatives in this post but rather focus on a different alternative: &lt;a href=&#34;http://en.wikipedia.org/wiki/Communicating_sequential_processes&#34;&gt;Communicating Sequential Processes - CSP&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Tale Of Concurrency: Partitioning Data Between Processes</title>
      <link>http://leonardoborges.com/writings/2011/06/19/a-tale-of-concurrency-partitioning-data-between-processes/</link>
      <pubDate>Sun, 19 Jun 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/06/19/a-tale-of-concurrency-partitioning-data-between-processes/</guid>
      <description>&lt;p&gt;So I had just finished writing this feature. I was confident it&amp;rsquo;d work - after all I had a good level of tests around it.&#xA;It sounded like yet another successful deployment.&lt;/p&gt;&#xA;&lt;p&gt;One week in and something starts breaking. It was hard to track down but at the end I realised it was caused by having concurrent processes running in parallel.&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s what happened in a recent production release at our current client. It was a very interesting problem to track&#xA;down and solve and I&amp;rsquo;ll do my best to explain and walk you through it here.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
