<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leonardo Borges</title>
    <link>http://leonardoborges.com/</link>
    <description>Recent content on Leonardo Borges</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Jan 2021 09:05:02 +1100</lastBuildDate>
    <atom:link href="http://leonardoborges.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Newsletter</title>
      <link>http://leonardoborges.com/writings/a-newsletter/</link>
      <pubDate>Thu, 21 Jan 2021 09:05:02 +1100</pubDate>
      <guid>http://leonardoborges.com/writings/a-newsletter/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been meaning to get back to writing for a while now. I find that a lot of what I&amp;rsquo;d like to share is too small for a blog post and a little too long-winded for Twitter. As such I&amp;rsquo;ve started &lt;a href=&#34;https://leonardoborges.substack.com/&#34;&gt;a Newsletter&lt;/a&gt; that I think fits the bill.&lt;/p&gt;&#xA;&lt;p&gt;This newsletter will primarity focus of leadership and technology, with a few life and current events thrown in for good measure. It will be published fortnightly initially but that may change.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Be Bored</title>
      <link>http://leonardoborges.com/writings/2020/05/12/be-bored/</link>
      <pubDate>Tue, 12 May 2020 08:31:15 +1000</pubDate>
      <guid>http://leonardoborges.com/writings/2020/05/12/be-bored/</guid>
      <description>&lt;p&gt;Recently I wrote an internal blog post at work titled &lt;em&gt;On the traps of working from home&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;While the content isn&amp;rsquo;t new it was triggered by the recent events around COVID-19 and the fact that all of a sudden the whole company was working from home, distributed across multiple timezones.&lt;/p&gt;&#xA;&lt;p&gt;I was worried that we may default to having more meetings instead of better communication and writing this post was my attempt to share how I tend to deal with distractions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Classifier Evaluation</title>
      <link>http://leonardoborges.com/writings/2020/04/09/classifier-evaluation/</link>
      <pubDate>Thu, 09 Apr 2020 07:26:02 +1000</pubDate>
      <guid>http://leonardoborges.com/writings/2020/04/09/classifier-evaluation/</guid>
      <description>&lt;p&gt;I recently wrote &lt;a href=&#34;https://www.recordpoint.com/how-well-do-you-classify/&#34;&gt;an article&lt;/a&gt; on our company blog where I explained how we evaluate Machine Learning models at &lt;a href=&#34;https://www.recordpoint.com/how-well-do-you-classify/&#34;&gt;RecordPoint&lt;/a&gt; &amp;ndash; if you haven&amp;rsquo;t read it yet, I&amp;rsquo;d recommend you do so before proceeding.&lt;/p&gt;&#xA;&lt;p&gt;Since its publishing, I received a number of comments asking me to clarify the concepts presented with concrete examples.&lt;/p&gt;&#xA;&lt;p&gt;The original article is light on code by design as the audience for the company blog isn&amp;rsquo;t always that technical. Therefore, in this post I&amp;rsquo;ll provide a simple example that will hopefully clear things up &amp;ndash; in particular why accuracy isn&amp;rsquo;t enough.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projects</title>
      <link>http://leonardoborges.com/projects/</link>
      <pubDate>Thu, 19 Mar 2020 13:34:28 +1100</pubDate>
      <guid>http://leonardoborges.com/projects/</guid>
      <description>&lt;p&gt;Here I keep a list of the open-source projects that I&amp;rsquo;ve either started or contributed to.&lt;/p&gt;&#xA;&lt;h3 id=&#34;clojure&#34;&gt;Clojure&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/leonardoborges/imminent&#34;&gt;imminent&lt;/a&gt; - Composable futures for Clojure&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/leonardoborges/bouncer&#34;&gt;bouncer&lt;/a&gt; - A validation DSL for Clojure apps (creator)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/clojure/algo.monads&#34;&gt;clojure/algo.monads&lt;/a&gt; - Macros for defining monads, and definition of the most common monads (&lt;a href=&#34;https://github.com/clojure/algo.monads/commits?author=leonardoborges&#34;&gt;commits&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/malcolmsparks/clj-logging-config&#34;&gt;clj-logging-config&lt;/a&gt; - Easy logging configuration for Clojure (&lt;a href=&#34;https://github.com/malcolmsparks/clj-logging-config/commit/ec8a08535daad01eb9f23e92771b623b5902c8c9&#34;&gt;commit #1&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ruby&#34;&gt;Ruby&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34;&gt;AppConstants&lt;/a&gt; - A clean way to manage environment specific constants (creator)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/leonardoborges/jquery-daterange-picker&#34;&gt;jquery-daterange-picker&lt;/a&gt; - A small and simple utility built on top of jQuery UI&amp;rsquo;s datepicker that provides &amp;ldquo;validation&amp;rdquo; for date ranges (creator)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/rails/rails/tree/master&#34;&gt;Ruby on Rails&lt;/a&gt; - a full stack MVC&#xA;framework for Ruby (&lt;a href=&#34;https://github.com/rails/rails/commit/0c391b46fb39b697bbae1493caade23e2ddbd8a6&#34;&gt;commit #1&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/jruby/jruby/tree/master&#34;&gt;JRuby&lt;/a&gt; - Ruby on the JVM (&lt;a href=&#34;https://github.com/jruby/jruby/commit/e85018a&#34;&gt;commit #1&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/radar/paranoia&#34;&gt;paranoia&lt;/a&gt; - acts_as_paranoid for Rails 3 (&lt;a href=&#34;https://github.com/radar/paranoia/commit/f766bbc81c4d0b89d39062a716f4afa93bd6492d&#34;&gt;commit #1&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/rubiii/savon&#34;&gt;Savon&lt;/a&gt; - Heavy metal Ruby SOAP client (&lt;a href=&#34;https://github.com/calamitas/savon/commit/0c3aa5e65cc2a3a417bbdcfccdfd21f665a0aff1&#34;&gt;commit #1&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/leonardoborges/readable_test_names_runner/tree/maste&#34;&gt;Readable test names runner&lt;/a&gt; - Run individual tests in rails using their readable names (creator)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://github.com/commondream/rcov_plugin/tree/master&#34;&gt;Rcov_plugin&lt;/a&gt; - Rails plugin for rcov (&lt;a href=&#34;https://github.com/commondream/rcov_plugin/commit/49631bb57fa9c7aa26375455b2523b7cd30a158c&#34;&gt;commit #1&lt;/a&gt;, &lt;a href=&#34;https://github.com/commondream/rcov_plugin/commit/b22b1883e9dfa50248fa22b1ae0e1859f8c75118&#34;&gt;commit #2&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can also see what I&amp;rsquo;ve been up to on my &lt;a href=&#34;https://github.com/leonardoborges&#34;&gt;GitHub profile&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Books</title>
      <link>http://leonardoborges.com/books/</link>
      <pubDate>Thu, 19 Mar 2020 12:29:00 +1100</pubDate>
      <guid>http://leonardoborges.com/books/</guid>
      <description>&lt;p&gt;I am fortunate enough to be able to call myself an author.  I published my first book &lt;a href=&#34;https://www.amazon.com/Clojure-Reactive-Programming-Leonardo-Borges/dp/1783986662/&#34;&gt;Clojure Reactive Programming&lt;/a&gt; in 2015 and it&amp;rsquo;s available on &lt;a href=&#34;https://www.amazon.com/Clojure-Reactive-Programming-Leonardo-Borges/dp/1783986662/&#34;&gt;Amazon&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;style&gt;&#xA;figure.cljbook img {&#xA;  width: 250px;&#xA;  height: 333px;&#xA;  display: block;&#xA;  margin-left: auto;&#xA;  margin-right: auto;  &#xA;}&#xA;&lt;/style&gt;&#xA;&lt;figure class=&#34;cljbook&#34;&gt;&lt;img src=&#34;http://leonardoborges.com/images/clj-reactive-prog.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;In addition I spend a considerable amount of my personal time reading - this habit makes me a better professional and, more importantly, a better person. If you&amp;rsquo;re curious about what I&amp;rsquo;m reading the widget below will give you a glimpse. Or you can just visit my &lt;a href=&#34;https://www.goodreads.com/author/show/13699066.Leonardo_Borges&#34;&gt;Goodreads profile&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://leonardoborges.com/about/</link>
      <pubDate>Thu, 19 Mar 2020 12:15:59 +1100</pubDate>
      <guid>http://leonardoborges.com/about/</guid>
      <description>&lt;style&gt;&#xA;figure.aboutme img {&#xA;  float: right;&#xA;  width: 400px;&#xA;  margin-left: 1em;&#xA;  margin-bottom: 1em;  &#xA;&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;figure class=&#34;aboutme&#34;&gt;&lt;img src=&#34;http://leonardoborges.com/images/about_leo_japan.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Hi there,&lt;p&gt;&#xA;I&amp;rsquo;ve spent the last two decades at the intersection of technology and leadership, helping build and scale engineering teams across companies like ThoughtWorks, Atlassian, Zip Co, and Canva.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Currently, I lead AI Engineering at Optus, where I focus on turning cutting-edge technology into practical business solutions.&#xA;&lt;h2 id=&#34;my-journey&#34;&gt;My Journey&lt;/h2&gt;&#xA;&lt;p&gt;My path in technology started with a deep love for functional programming and distributed systems. I even wrote a &lt;a href=&#34;https://www.amazon.com/Clojure-Reactive-Programming-Leonardo-Borges/dp/1783986662/&#34;&gt;book about Clojure&lt;/a&gt; along the way. But what truly captivated me was understanding how great teams operate â€” how they innovate, scale, and maintain their cultural DNA through periods of intense growth.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Highlights of the Symposium on Blockchain and Distributed Ledger Technology - Day 1</title>
      <link>http://leonardoborges.com/writings/2018/02/19/highlights-of-the-symposium-on-blockchain-and-distributed-ledger-technology-day-1/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2018/02/19/highlights-of-the-symposium-on-blockchain-and-distributed-ledger-technology-day-1/</guid>
      <description>&lt;p&gt;Early last week I had the chance to attend theÂ &lt;a href=&#34;http://blockchain.unsw.edu.au/symposium18/HTML/index.html&#34;&gt;Symposium on Blockchain and Distributed Ledger Technology&lt;/a&gt; organised by UNSW. I wasn&amp;rsquo;t aware that UNSW was so heavily involved in the community until this event and have since learned about their &lt;a href=&#34;http://blockchain.unsw.edu.au/&#34;&gt;interest group&lt;/a&gt; which has been going on for a while.&lt;/p&gt;&#xA;&lt;p&gt;The talks had a healthy mix of research and industry case studies with subjects ranging from the technical challenges of current blockchain implementations to the legal implications of distributed ledger technology.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Highlights of the Symposium on Blockchain and Distributed Ledger Technology - Day 2</title>
      <link>http://leonardoborges.com/writings/2018/02/19/highlights-of-the-symposium-on-blockchain-and-distributed-ledger-technology-day-2/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2018/02/19/highlights-of-the-symposium-on-blockchain-and-distributed-ledger-technology-day-2/</guid>
      <description>&lt;p&gt;If you haven&amp;rsquo;t yet, make sure you read my &lt;a href=&#34;http://leonardoborges.com/2018/02/19/highlights-of-the-symposium-on-blockchain-and-distributed-ledger-technology-day-1/&#34;&gt;summary of Day 1&lt;/a&gt; first.&lt;/p&gt;&#xA;&lt;h2 id=&#34;morning-panel&#34;&gt;Morning Panel&lt;/h2&gt;&#xA;&lt;p&gt;Day 2 started with a morning panel with:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Paul Fox fromÂ &lt;a href=&#34;http://www.blockchainpacific.capital/team/&#34;&gt;Blockchain.capital&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Leon Gerard Vandenberg from RightsFusion Pty Ltd &amp;amp; &lt;a href=&#34;http://www.solara.io/&#34;&gt;Solara&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Oliver Harvey from &lt;a href=&#34;http://asic.gov.au/about-asic/what-we-do/our-structure/asic-senior-executives/asic-senior-executives-biographies/&#34;&gt;ASIC&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Ross Buckley from &lt;a href=&#34;http://www.law.unsw.edu.au/profile/ross-buckley&#34;&gt;UNSW Law&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The panelists took turns in giving their views around blockchain, investments and regulation, leading into a Q&amp;amp;A at the end. I was running late to this session and believe I may have missed Ross&amp;rsquo; individual slot.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mission accomplished</title>
      <link>http://leonardoborges.com/writings/2016/05/27/mission-accomplished/</link>
      <pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2016/05/27/mission-accomplished/</guid>
      <description>&lt;p&gt;A year and four months ago &lt;a href=&#34;http://www.leonardoborges.com/writings/2014/12/27/staring-a-new-chapter/&#34;&gt;I joined Atlassian&lt;/a&gt; to pursue a very exciting opportunity: to deliver realtime collaborative editing to Confluence. I have talked about it last year at &lt;a href=&#34;https://www.youtube.com/watch?v=3QR8meTrh5g&amp;amp;index=16&amp;amp;list=PLZdCLR02grLoBx0Y5ZrpdmLxc160PIwzQ&#34;&gt;EuroClojure&lt;/a&gt; and this year at &lt;a href=&#34;http://qconsp.com/presentation/colabora%C3%A7%C3%A3o-em-tempo-real-com-clojure-e-clojurescript%E2%80%8B&#34;&gt;QCon Brazil&lt;/a&gt;. Even &lt;a href=&#34;http://www.cognitect.com/&#34;&gt;Cognitect&lt;/a&gt; wrote &lt;a href=&#34;http://blog.cognitect.com/blog/2015/7/21/atlassian-builds-realtime-collaboration-services-with-clojure&#34;&gt;a few words about it&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In a nutshell this involved writing Clojure code all day to build an awesome service we call Synchrony. Synchrony is capable of realtime data synchronisation - not just collaborative editing - and as such its applications are many! This has been proven again and again internally during the Atlassian ShipIt hackatons, and externally via &lt;a href=&#34;https://enso.me/&#34;&gt;Enso.me&lt;/a&gt;, which is powered by Synchrony.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Clojure Sydney Meetup, four years in</title>
      <link>http://leonardoborges.com/writings/2016/02/08/the-clojure-sydney-meetup-four-years-in/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2016/02/08/the-clojure-sydney-meetup-four-years-in/</guid>
      <description>&lt;h2 id=&#34;in-the-beginning&#34;&gt;In the beginning&lt;/h2&gt;&#xA;&lt;p&gt;Nearly 4 years ago I founded the Sydney Clojure User Group. I had been playing with Clojure for a little while&#xA;and started a small study group to learn more. Initially this group was private and held at the ThoughtWorks office.&lt;/p&gt;&#xA;&lt;p&gt;After a couple of meetups and conversations I decided to open up the group to the public and then realised we weren&amp;rsquo;t the only ones interested in Clojure and, even more important, interested in meeting like-minded people, share experiences and help each other.&lt;/p&gt;</description>
    </item>
    <item>
      <title>So long 2015: Year highlights</title>
      <link>http://leonardoborges.com/writings/2016/01/04/so-long-2015-year-highlights/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2016/01/04/so-long-2015-year-highlights/</guid>
      <description>&lt;p&gt;I should have published this post still in 2015 but as I was on holidays traveling around Australia I didn&amp;rsquo;t really have the time to do it. Better late than never, right? (also Linode - the provider hosting this site - has been under a &lt;a href=&#34;https://news.ycombinator.com/item?id=10825425&#34;&gt;severe DDoS attack&lt;/a&gt; so the site just came back up today)&lt;/p&gt;&#xA;&lt;p&gt;2015 has been a unusually quiet year in this blog. Thankfully that is because I have been extremely busy in many other areas. I&amp;rsquo;d like to take the opportunity and look back at 2015&amp;rsquo;s highlights.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clojure Reactive Programming has been published</title>
      <link>http://leonardoborges.com/writings/2015/03/27/clojure-reactive-programming-has-been-published/</link>
      <pubDate>Fri, 27 Mar 2015 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2015/03/27/clojure-reactive-programming-has-been-published/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m extremely happy to let everyone know my book, &lt;a href=&#34;https://www.packtpub.com/web-development/clojure-reactive-programming&#34;&gt;Clojure Reactive Programming&lt;/a&gt;, has finally been published!&lt;/p&gt;&#xA;&lt;p&gt;You can get it at the &lt;a href=&#34;https://www.packtpub.com/web-development/clojure-reactive-programming&#34;&gt;publisher&amp;rsquo;s website&lt;/a&gt; or on &lt;a href=&#34;http://www.amazon.com/Clojure-Reactive-Programming-Leonardo-Borges/dp/1783986662/ref=sr_1_1?ie=UTF8&amp;amp;qid=1427205216&amp;amp;sr=8-1&amp;amp;keywords=Clojure+Reactive+Programming&#34;&gt;Amazon&lt;/a&gt;. I had a great time writing it and I truly hope you find it useful!&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve met a few authors here and there and I heard more than once that a book is never really finished. I now know what they mean.&lt;/p&gt;&#xA;&lt;p&gt;The book doesn&amp;rsquo;t cover everything I wanted to write about due to time and space limitations. Having said that, now that the book is out I do plan to expand on a few things using this blog.&lt;/p&gt;</description>
    </item>
    <item>
      <title>So long 2014: Year highlights</title>
      <link>http://leonardoborges.com/writings/2014/12/31/so-long-2014-year-highlights/</link>
      <pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/12/31/so-long-2014-year-highlights/</guid>
      <description>&lt;p&gt;Another year is about to end and as it is tradition in this blog it&amp;rsquo;s time to look at the year&amp;rsquo;s highlights!&lt;/p&gt;&#xA;&lt;h2 id=&#34;functional-programming&#34;&gt;Functional Programming&lt;/h2&gt;&#xA;&lt;p&gt;I have been advocating Functional Programming and Clojure for a while now and 2014 has been good to me. It was the first year where I was paid to work almost entirely in functional languages. Most of it was in Scala and a little less in Clojure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A new chapter begins</title>
      <link>http://leonardoborges.com/writings/2014/12/27/staring-a-new-chapter/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/12/27/staring-a-new-chapter/</guid>
      <description>&lt;h2 id=&#34;thanks-thoughtworks&#34;&gt;Thanks, ThoughtWorks&lt;/h2&gt;&#xA;&lt;p&gt;After 4 years and 8 months I have made the hard decision to change jobs: Friday, 19th of December, was my last day at &lt;a href=&#34;http://www.thoughtworks.com/&#34;&gt;ThoughtWorks&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this time I have made many friends and have grown a lot as a professional. Consulting presents so many new challenges that often times the technical problems you are trying to solve are the easiest part of the whole project. I am thankful for that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ClojureBridge Sydney, vol. I</title>
      <link>http://leonardoborges.com/writings/2014/12/22/clojurebridge-sydney/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/12/22/clojurebridge-sydney/</guid>
      <description>&lt;p&gt;This past weekend - 19-20th of December - a group of highly motivated individuals gave up their Friday night and their entire Saturday simply to learn how to code in Clojure!&lt;/p&gt;&#xA;&lt;p&gt;It was the first ever &lt;a href=&#34;http://www.clojurebridge.org/&#34;&gt;ClojureBridge&lt;/a&gt; edition in Sydney and if you haven&amp;rsquo;t heard of it before, its goal is to increase diversity in the Clojure community. It does so by offering free workshops targeted at beginners.&lt;/p&gt;&#xA;&lt;p&gt;You should totally read &lt;a href=&#34;http://juliangamble.com/blog/2014/12/20/why-clojurebridge-is-awesome/&#34;&gt;Julian Gamble&amp;rsquo;s post&lt;/a&gt; about the event for details. He&amp;rsquo;s was one of the volunteers on the day and has done a great job of describing his experiences.&lt;/p&gt;</description>
    </item>
    <item>
      <title>EuroClojure 2014 and announcing my book</title>
      <link>http://leonardoborges.com/writings/2014/07/20/euroclojure-2014-and-clojure-reactive-programming/</link>
      <pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/07/20/euroclojure-2014-and-clojure-reactive-programming/</guid>
      <description>&lt;p&gt;A bit late for a EuroClojure 2014 post but I suppose &amp;ldquo;better late than never&amp;rdquo; applies here.&lt;/p&gt;&#xA;&lt;p&gt;The best part of every conference is the networking. Meeting new and interesting people is priceless and I did plenty of that - mostly over Polish beer and food. Polish beer isn&amp;rsquo;t the greatest but if you must have it, better stick to Å»ywiec. It&amp;rsquo;s widely available and was the one which didn&amp;rsquo;t give me a headache :) - I&amp;rsquo;ve been told there are amazing microbreweries though I didn&amp;rsquo;t get a chance to try any while in KrÃ¡kow.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functional composition with Monads, Kleislis and Functors</title>
      <link>http://leonardoborges.com/writings/2014/06/17/functional-composition-with-monads-kleisli-functors/</link>
      <pubDate>Tue, 17 Jun 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/06/17/functional-composition-with-monads-kleisli-functors/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been learning Scala for my current client project and I find writing to be a great tool to test my understanding of any given topic. This means there might be a few Scala posts coming up soon as I keep learning interesting things.&lt;/p&gt;&#xA;&lt;p&gt;Today I&amp;rsquo;ll be exploring a few different ways in which you can compose programs. I&amp;rsquo;ll be using &lt;a href=&#34;https://github.com/scalaz/scalaz&#34;&gt;Scalaz&lt;/a&gt; in this post.&lt;/p&gt;&#xA;&lt;p&gt;The examples that follow all deal with Vehicles - more specifically makes and parts:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Validation and Internationalization in Clojure with bouncer &amp; tower</title>
      <link>http://leonardoborges.com/writings/2014/01/04/validation-and-internationalization-in-clojure-with-bouncer-and-tower/</link>
      <pubDate>Sat, 04 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/01/04/validation-and-internationalization-in-clojure-with-bouncer-and-tower/</guid>
      <description>&lt;p&gt;I released &lt;a href=&#34;https://github.com/leonardoborges/bouncer&#34;&gt;bouncer&lt;/a&gt; in April last year and since then it has had a small but steady growth in usage.&lt;/p&gt;&#xA;&lt;p&gt;So much so that I received some community feedback in the form of emails and pull requests which is simply &lt;em&gt;great&lt;/em&gt;!&lt;/p&gt;&#xA;&lt;p&gt;The latest and most substantial pull request, submitted by &lt;a href=&#34;https://github.com/dm3&#34;&gt;Vadim Platonov&lt;/a&gt;, added the ability to customise validation messages in anyway you like, as you can see in the section &lt;a href=&#34;https://github.com/leonardoborges/bouncer#internationalization-and-customised-error-messages&#34;&gt;Internationalization and customised error messages&lt;/a&gt; of the &lt;a href=&#34;https://github.com/leonardoborges/bouncer/blob/master/README.md&#34;&gt;README&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>So long 2013: Year highlights</title>
      <link>http://leonardoborges.com/writings/2014/01/01/so-long-2013-year-highlights/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2014/01/01/so-long-2013-year-highlights/</guid>
      <description>&lt;p&gt;I finally got some free time so sit down and write this post. I was travelling with my girlfriend around the state of&#xA;Victoria, Australia - mostly around the &lt;a href=&#34;http://www.visitvictoria.com/Regions/great-ocean-road&#34;&gt;Great Ocean Road&lt;/a&gt;. I had an amazing time and it&amp;rsquo;s a trip&#xA;I highly recommend anyone do.&lt;/p&gt;&#xA;&lt;p&gt;As for this year&amp;rsquo;s highlights, let&amp;rsquo;s get started:&lt;/p&gt;&#xA;&lt;h2 id=&#34;clojure&#34;&gt;Clojure&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.meetup.com/clj-syd/&#34;&gt;clj-syd&lt;/a&gt; - the Sydney Clojure User Group - continues going strong and this is in great part thanks to the amazing community behind it.&#xA;You can have a look at our &lt;a href=&#34;https://github.com/clj-syd/clj-syd/wiki/2013&#34;&gt;wiki page for 2013&lt;/a&gt; to see what we&amp;rsquo;ve been up to.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CUFP/ICFP 2013</title>
      <link>http://leonardoborges.com/writings/2013/09/25/cufp-slash-icfp-2013/</link>
      <pubDate>Wed, 25 Sep 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/09/25/cufp-slash-icfp-2013/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m sitting in the Lobby of the Hilton in Boston and since my flight back to Australia isn&amp;rsquo;t for a few hours I thought I&amp;rsquo;d write my experience report while everything is still fresh in my mind.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://leonardoborges.com/images/cufp2013-badge.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://cufp.org/&#34;&gt;CUFP - Commercial Users of Functional Programming -&lt;/a&gt; is a Workshop-like conference targeting the practically-minded functional programming community.&lt;/p&gt;&#xA;&lt;p&gt;As it&amp;rsquo;s stated on their website, &lt;em&gt;&amp;ldquo;The CUFP workshop is a place where people can see how others are using functional programming to solve real world problems [â€¦]&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Purely functional data structures in Clojure: Red-Black Trees</title>
      <link>http://leonardoborges.com/writings/2013/07/15/purely-functional-data-structures-in-clojure-red-black-trees/</link>
      <pubDate>Mon, 15 Jul 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/07/15/purely-functional-data-structures-in-clojure-red-black-trees/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This post is part of a series about Chris Okasaki&amp;rsquo;s &lt;a href=&#34;http://amzn.to/UcIidh&#34;&gt;Purely Functional Data Structures&lt;/a&gt;. You can see all posts in the series by visiting the &lt;a href=&#34;http://www.leonardoborges.com/writings/tags/functional-data-structures/&#34;&gt;functional-data-structures&lt;/a&gt; category in this blog.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Recently I had some free time to come back to &lt;a href=&#34;http://amzn.to/UcIidh&#34;&gt;Purely Functional Data Structures&lt;/a&gt; and implement a new data structure: &lt;a href=&#34;http://en.wikipedia.org/wiki/Red%E2%80%93black_tree&#34;&gt;Red-black trees&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;red-black-trees&#34;&gt;Red-black trees&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Red%E2%80%93black_tree&#34;&gt;Red-black trees&lt;/a&gt; are a type of &lt;a href=&#34;http://en.wikipedia.org/wiki/Self-balancing_binary_search_tree&#34;&gt;self-balancing binary search tree&lt;/a&gt;. Back when I first learned the balancing algorithm used in operations such as insert and delete, I remember it being a particularly tricky one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clojure, core.async and the Lisp advantage</title>
      <link>http://leonardoborges.com/writings/2013/07/06/clojure-core-dot-async-lisp-advantage/</link>
      <pubDate>Sat, 06 Jul 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/07/06/clojure-core-dot-async-lisp-advantage/</guid>
      <description>&lt;p&gt;Long gone are the days when systems needed to do only one thing at a time.&lt;/p&gt;&#xA;&lt;p&gt;Concurrency is the word but it often leads to complex code, dealing with locks, mutexes etcâ€¦&lt;/p&gt;&#xA;&lt;p&gt;There are several different abstractions which allows us to both model and think about asynchronous code in a more sane fashion: futures, promises and events/callbacks are but a few of them.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t get into the merits - or lack thereof - of these alternatives in this post but rather focus on a different alternative: &lt;a href=&#34;http://en.wikipedia.org/wiki/Communicating_sequential_processes&#34;&gt;Communicating Sequential Processes - CSP&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functional Programmers Unite! LambdaJam down under</title>
      <link>http://leonardoborges.com/writings/2013/04/11/functional-programmers-unite-lambdajam-down-under/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/04/11/functional-programmers-unite-lambdajam-down-under/</guid>
      <description>&lt;p&gt;I hinted at &lt;a href=&#34;http://www.yowconference.com.au/lambdajam/&#34;&gt;LambdaJam Australia&lt;/a&gt; back in my &lt;a href=&#34;http://www.leonardoborges.com/writings/2013/01/02/so-long-2012-year-highlights/&#34;&gt;2012 Highlights post&lt;/a&gt; and the dates are fast approaching so I thought appropriate to blog about it once more.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.yowconference.com.au/lambdajam/&#34;&gt;YOW! LambdaJam&lt;/a&gt; is a conference targeted at intermediate and advanced functional programmers and is organised in talks, jams and workshops.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Talks&lt;/strong&gt; are the traditional format and are 30 minutes long;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Workshops&lt;/strong&gt; aim to introduce a specific subjects to attendees in great detail and are up to two hours long;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Jams&lt;/strong&gt; are hands-on sessions. Participants will be guided through pre-defined problems around a given subject/technology and encouraged to work through the solutions either by themselves or ideally as small groups. Jams are also 2 hours long;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Sounds pretty amazing, doesn&amp;rsquo;t it?&lt;/p&gt;</description>
    </item>
    <item>
      <title>clojure and why calculating is better than scheming</title>
      <link>http://leonardoborges.com/writings/2013/03/25/clojure-and-why-calculating-is-better-than-scheming/</link>
      <pubDate>Mon, 25 Mar 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/03/25/clojure-and-why-calculating-is-better-than-scheming/</guid>
      <description>&lt;p&gt;Last week while attending &lt;a href=&#34;http://clojurewest.org&#34;&gt;Clojure/West&lt;/a&gt; in Portland I came across a paper called &lt;a href=&#34;http://www.cs.kent.ac.uk/people/staff/dat/miranda/wadler87.pdf&#34;&gt;Why calculating is better than scheming&lt;/a&gt;. In a nutshell, this paper is a critique to &lt;a href=&#34;http://en.wikipedia.org/wiki/Hal_Abelson&#34;&gt;Abelson&lt;/a&gt; and &lt;a href=&#34;http://en.wikipedia.org/wiki/Gerald_Jay_Sussman&#34;&gt;Sussman&lt;/a&gt;&amp;rsquo;s classic textbook &lt;a href=&#34;http://mitpress.mit.edu/sicp/&#34;&gt;SICP - Structure and Interpretation of Computer Programs&lt;/a&gt;,&#xA;used by MIT for many years to teach their introductory programming course.&lt;/p&gt;&#xA;&lt;p&gt;If you haven&amp;rsquo;t read &lt;a href=&#34;http://mitpress.mit.edu/sicp/&#34;&gt;SICP&lt;/a&gt;, you should. It&amp;rsquo;s an amazing book. It uses &lt;a href=&#34;http://en.wikipedia.org/wiki/Scheme_(programming_language)&#34;&gt;Scheme&lt;/a&gt;, a dialect of Lisp, as the vehicle to present fundamental programming concepts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Purely functional data structures in Clojure: Leftist Heaps</title>
      <link>http://leonardoborges.com/writings/2013/02/03/purely-functional-data-structures-in-clojure-leftist-heaps/</link>
      <pubDate>Sun, 03 Feb 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/02/03/purely-functional-data-structures-in-clojure-leftist-heaps/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This post is part of a series about Chris Okasaki&amp;rsquo;s &lt;a href=&#34;http://amzn.to/UcIidh&#34;&gt;Purely Functional Data Structures&lt;/a&gt;. You can see all posts in the series by visiting the &lt;a href=&#34;http://www.leonardoborges.com/writings/tags/functional-data-structures/&#34;&gt;functional-data-structures&lt;/a&gt; category in this blog.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Last year I started reading a book called &lt;a href=&#34;http://amzn.to/UcIidh&#34;&gt;Purely Functional Data Structures&lt;/a&gt;. It&amp;rsquo;s a fascinating book and if you&amp;rsquo;ve ever wondered how Clojure&amp;rsquo;s persistent data structures work, it&amp;rsquo;s mandatory reading.&lt;/p&gt;&#xA;&lt;p&gt;However, all code samples in the book are written in &lt;a href=&#34;http://bit.ly/YqYjtt&#34;&gt;ML&lt;/a&gt; - with &lt;a href=&#34;http://bit.ly/YqYmp6&#34;&gt;Haskell&lt;/a&gt; versions in the end of the book. This means I got stuck in Chapter 3, where the ML snippets start.&lt;/p&gt;</description>
    </item>
    <item>
      <title>bouncer validation lib for clojure</title>
      <link>http://leonardoborges.com/writings/2013/01/04/bouncer-validation-lib-for-clojure/</link>
      <pubDate>Fri, 04 Jan 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/01/04/bouncer-validation-lib-for-clojure/</guid>
      <description>&lt;p&gt;Today I&amp;rsquo;m releasing bouncer, which was extracted from a project I&amp;rsquo;ve been working on.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a validation library for Clojure apps and it lets you write code like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;def &lt;/span&gt;person {&lt;span style=&#34;color:#e6db74&#34;&gt;:name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Leo&amp;#34;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;validate&lt;/span&gt; person&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:name&lt;/span&gt; required&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:age&lt;/span&gt;  [required number])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;d like to see more examples and a detailed guide check out the &lt;a href=&#34;http://github.com/leonardoborges/bouncer&#34;&gt;github repository&lt;/a&gt;. The README should get you started.&lt;/p&gt;&#xA;&lt;p&gt;This post however isn&amp;rsquo;t only about announcing bouncer. It&amp;rsquo;s also about the motivation and implementation details behind it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>So long 2012: Year highlights</title>
      <link>http://leonardoborges.com/writings/2013/01/02/so-long-2012-year-highlights/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2013/01/02/so-long-2012-year-highlights/</guid>
      <description>&lt;p&gt;Keeping the tradition of end-of-year blog posts, here are my year highlights for 2012:&lt;/p&gt;&#xA;&lt;h2 id=&#34;clojure&#34;&gt;Clojure&lt;/h2&gt;&#xA;&lt;p&gt;I started &lt;a href=&#34;http://www.meetup.com/clj-syd/&#34;&gt;clj-syd&lt;/a&gt; - the Sydney Clojure User Group - back in January and it has seen a major uptake. We consistently get an average of 25 people each month and there&amp;rsquo;s no shortage of talks and topics to discuss. It&amp;rsquo;s a great crowd and I&amp;rsquo;m proud to have started it and of being part of it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monads in small bites - Part IV - Monads</title>
      <link>http://leonardoborges.com/writings/2012/12/08/monads-in-small-bites-part-iv-monads/</link>
      <pubDate>Sat, 08 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/12/08/monads-in-small-bites-part-iv-monads/</guid>
      <description>&lt;p&gt;This is Part IV of my Monads tutorial. Make sure you read the previous parts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/11/30/monads-in-small-bites-part-i-functors/&#34;&gt;Part I   - Functors&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/&#34;&gt;Part II  - Applicative Functors&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/05/monads-in-small-bites-part-iii-monoids/&#34;&gt;Part III - Monoids&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Part IV  - Monads (this post)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;a-quick-recap&#34;&gt;A quick recap&lt;/h3&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;http://leonardoborges.com/2012/11/30/monads-in-small-bites-part-i-functors/&#34;&gt;Part I&lt;/a&gt; we learned about &lt;em&gt;Functors&lt;/em&gt;, which are things that can be mapped over using a normal function - &lt;code&gt;fmap&lt;/code&gt; is used for that.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/&#34;&gt;Part II&lt;/a&gt; tought us that when our Functors themselves contain functions and we want them applied to the values contained in other Functors, &lt;em&gt;Applicatives&lt;/em&gt; come to the rescue - and bring theirs friends &lt;code&gt;pure&lt;/code&gt; and &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monads in small bites - Part III - Monoids</title>
      <link>http://leonardoborges.com/writings/2012/12/05/monads-in-small-bites-part-iii-monoids/</link>
      <pubDate>Wed, 05 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/12/05/monads-in-small-bites-part-iii-monoids/</guid>
      <description>&lt;p&gt;This is Part III of my Monads tutorial. Make sure you read the previous parts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/11/30/monads-in-small-bites-part-i-functors/&#34;&gt;Part I   - Functors&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/&#34;&gt;Part II  - Applicative Functors&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Part III - Monoids (this post)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/08/monads-in-small-bites-part-iv-monads/&#34;&gt;Part IV  - Monads&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;monoids&#34;&gt;Monoids&lt;/h3&gt;&#xA;&lt;p&gt;Simply put, Monoids describe types containing a &lt;a href=&#34;http://en.wikipedia.org/wiki/Binary_function&#34;&gt;binary function&lt;/a&gt; and an identity value.&lt;/p&gt;&#xA;&lt;p&gt;When applied to the identity value and a random value &lt;code&gt;x&lt;/code&gt;, said function leaves its argument &lt;code&gt;x&lt;/code&gt; &lt;em&gt;untouched&lt;/em&gt;, returning it as a result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monads in small bites - Part II - Applicative Functors</title>
      <link>http://leonardoborges.com/writings/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/</link>
      <pubDate>Sun, 02 Dec 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/12/02/monads-in-small-bites-part-ii-applicative-functors/</guid>
      <description>&lt;p&gt;This is Part II of my Monads tutorial. Make sure you read the previous parts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/11/30/monads-in-small-bites-part-i-functors/&#34;&gt;Part I   - Functors&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Part II  - Applicative Functors (this post)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/05/monads-in-small-bites-part-iii-monoids/&#34;&gt;Part III - Monoids&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://leonardoborges.com/2012/12/08/monads-in-small-bites-part-iv-monads/&#34;&gt;Part IV  - Monads&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;applicative-functors&#34;&gt;Applicative Functors&lt;/h3&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;http://leonardoborges.com/2012/11/30/monads-in-small-bites-part-i-functors/&#34;&gt;Part I&lt;/a&gt; I talked a little about Haskell type signatures and introduced Functors, which provide a way to map standard functions over values which are &lt;em&gt;wrapped&lt;/em&gt; inside a Functor - we used &lt;code&gt;fmap&lt;/code&gt; for that. You might want to &lt;a href=&#34;http://leonardoborges.com/2012/11/30/monads-in-small-bites-part-i-functors/&#34;&gt;skim through it&lt;/a&gt; again as a refresher.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monads in small bites - Part I - Functors</title>
      <link>http://leonardoborges.com/writings/2012/11/30/monads-in-small-bites-part-i-functors/</link>
      <pubDate>Fri, 30 Nov 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/11/30/monads-in-small-bites-part-i-functors/</guid>
      <description>&lt;p&gt;Today I join the already bloated group of people who wrote monad tutorials. It&amp;rsquo;s a bit of a ritual, really.&lt;/p&gt;&#xA;&lt;p&gt;Different than most tutorials though I aim to take a different approach. The good news is that I won&amp;rsquo;t be comparing monads to burritos :)&lt;/p&gt;&#xA;&lt;p&gt;People say one needs to have his/her own epiphany in order to understand Monads and reading explanations from others is of little help. My goal is to disprove that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>This is what we built in 24 hours</title>
      <link>http://leonardoborges.com/writings/2012/11/05/this-is-was-we-built-in-24-hours/</link>
      <pubDate>Mon, 05 Nov 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/11/05/this-is-was-we-built-in-24-hours/</guid>
      <description>&lt;p&gt;Last week our current client - &lt;a href=&#34;http://ninemsn.com.au/&#34;&gt;ninemsn&lt;/a&gt; - ran the 3rd edition of their HackDay.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s akin to Atlassian&amp;rsquo;s &lt;a href=&#34;http://www.atlassian.com/shipit-day&#34;&gt;ShipIt&lt;/a&gt; days so if you&amp;rsquo;re not familiar with the concept, you should check their page but here&amp;rsquo;s the gist:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We&amp;rsquo;re given 24 hours to work on whatever we like as long as it&amp;rsquo;s related somehow to the business&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We&amp;rsquo;re also free to use any technology we want&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The team consisted of &lt;a href=&#34;https://twitter.com/romainprieto&#34;&gt;@romainprieto&lt;/a&gt;, Pranav Raja, &lt;a href=&#34;https://twitter.com/thepaddedcell&#34;&gt;@thepaddedcell&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/stewgleadow&#34;&gt;@stewgleadow&lt;/a&gt; and myself (&lt;a href=&#34;https://twitter.com/leonardo_borges&#34;&gt;@leonardo_borges&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clojure, leiningen 2 and Heroku: AOT compilation gotchas</title>
      <link>http://leonardoborges.com/writings/2012/09/10/clojure-leiningen-heroku-aot-compilation-gotchas/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/09/10/clojure-leiningen-heroku-aot-compilation-gotchas/</guid>
      <description>&lt;p&gt;Recently I upgraded the &lt;a href=&#34;http://clojure.org/&#34;&gt;clojure&lt;/a&gt; project I&amp;rsquo;m working on to &lt;a href=&#34;http://leiningen.org/&#34;&gt;Leiningen 2&lt;/a&gt; in order to start using &lt;a href=&#34;https://github.com/clojure/tools.nrepl&#34;&gt;nrepl&lt;/a&gt; - since &lt;a href=&#34;https://github.com/technomancy/swank-clojure&#34;&gt;swank-clojure&lt;/a&gt; is now &lt;a href=&#34;http://technomancy.us/163&#34;&gt;deprecated&lt;/a&gt;. Little did I know this would lead me to a small debugging adventure.&lt;/p&gt;&#xA;&lt;h3 id=&#34;heroku&#34;&gt;Heroku&lt;/h3&gt;&#xA;&lt;p&gt;I use &lt;a href=&#34;http://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt; as my deployment platform and my project had been running on it for a few weeks without any&#xA;issues. I also use Heroku&amp;rsquo;s PostgreSQL solution.&lt;/p&gt;&#xA;&lt;p&gt;However, by upgrading to Leiningen 2, my project started throwing some weird exceptions during deployment -  it couldn&amp;rsquo;t connect to my database any longer. Everything was fine on my local environment though.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sean Corfield: Clojure and CFML sitting in a tree</title>
      <link>http://leonardoborges.com/writings/2012/08/23/sean-corfield-clojure-and-cfml-sitting-in-a-tree/</link>
      <pubDate>Thu, 23 Aug 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/08/23/sean-corfield-clojure-and-cfml-sitting-in-a-tree/</guid>
      <description>&lt;p&gt;Last night I attended the Adobe User Group here in Sydney. That might strike some of you as a big surprise&#xA;given my relationship with Adobe is pretty much limited to fiddling with Photoshop/Lightroom to get my photos looking nice.&lt;/p&gt;&#xA;&lt;p&gt;However the reason for which I attended the meetup is that &lt;a href=&#34;https://twitter.com/seancorfield&#34;&gt;Sean Corfield&lt;/a&gt; - a prolific member of the Clojure community - gave a presentation on how he introduced and migrated most of his backend code at &lt;a href=&#34;http://worldsingles.com/ws2010/index.cfm&#34;&gt;World Singles&lt;/a&gt; from &lt;a href=&#34;http://en.wikipedia.org/wiki/ColdFusion_Markup_Language&#34;&gt;CFML&lt;/a&gt; to &lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt; - hence my interest.&lt;/p&gt;</description>
    </item>
    <item>
      <title>build automation with xcode 4 dot 3 kif and jenkins</title>
      <link>http://leonardoborges.com/writings/2012/05/03/build-automation-with-xcode-4-dot-3-kif-and-jenkins/</link>
      <pubDate>Thu, 03 May 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/05/03/build-automation-with-xcode-4-dot-3-kif-and-jenkins/</guid>
      <description>&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; As pointed to me in &lt;a href=&#34;http://www.leonardoborges.com/writings/2012/05/03/build-automation-with-xcode-4-dot-3-kif-and-jenkins/#comment-703288043&#34;&gt;this commment&lt;/a&gt;, sym links aren&amp;rsquo;t necessary for Waxsim anymore. Check &lt;a href=&#34;https://github.com/jonathanpenn/WaxSim&#34;&gt;Jonathan Penn&amp;rsquo;s fork on github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;After coming back from my holidays in China - which were awesome - I had no downtime at ThoughtWorks and started at a brand new client/project - a much needed change from what I had been working on lately.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s an iOS project, more specifically an iPad app and that&amp;rsquo;s pretty much all I can tell you about it. I will however tell you how my first few days in the project have been so far.&lt;/p&gt;</description>
    </item>
    <item>
      <title>clj syd report number 0</title>
      <link>http://leonardoborges.com/writings/2012/02/22/clj-syd-report-number-0/</link>
      <pubDate>Wed, 22 Feb 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/02/22/clj-syd-report-number-0/</guid>
      <description>&lt;p&gt;Last night we held the first ever meetup for the &lt;a href=&#34;http://groups.google.com/group/clj-syd&#34;&gt;Sydney Clojure User Group&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;When I decided to start running the meetups I had no idea we&amp;rsquo;d end up with &lt;strong&gt;37&lt;/strong&gt;&#xA;people on the first night! What a great turn out!&lt;/p&gt;&#xA;&lt;p&gt;As for the content, here&amp;rsquo;s what you missed:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Running Clojure apps on Heroku&lt;/strong&gt; - Lincoln Stoll (&lt;a href=&#34;https://twitter.com/#!/lstoll&#34;&gt;@lstoll&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Linc works for Heroku but ended up not spending a whole lot of time talking about&#xA;that - instead he showed us how  to build a simple web application using&#xA;&lt;a href=&#34;https://github.com/weavejester/compojure/wiki&#34;&gt;Compojure&lt;/a&gt;, a small Clojure web framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>project euler problem 4 in clojure</title>
      <link>http://leonardoborges.com/writings/2012/02/05/project-euler-problem-4-in-clojure/</link>
      <pubDate>Sun, 05 Feb 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/02/05/project-euler-problem-4-in-clojure/</guid>
      <description>&lt;p&gt;I solved a few of the problems on &lt;a href=&#34;http://projecteuler.net/&#34;&gt;Project Euler&lt;/a&gt; in the past, both in Java and Ruby, and thought it would be useful to redo them in Clojure, thus improving my skills on the language&amp;rsquo;s core functions and libraries. Today I&amp;rsquo;ll share &lt;a href=&#34;http://projecteuler.net/problem=4&#34;&gt;problem 4&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Go ahead and read it but here&amp;rsquo;s the meat of it:&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Find the largest palindrome made from the product of two 3-digit numbers.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;From this statement we can tell two things: (1) we&amp;rsquo;ll need a function that can tell whether a number is a &lt;a href=&#34;http://en.wikipedia.org/wiki/Palindrome&#34;&gt;palindrome&lt;/a&gt; or not and (2) that the largest palindrome is given by the product of two numbers between 100 and 999, inclusive.&lt;/p&gt;</description>
    </item>
    <item>
      <title>backlog ola bini on clojure conj</title>
      <link>http://leonardoborges.com/writings/2012/01/22/backlog-ola-bini-on-clojure-conj/</link>
      <pubDate>Sun, 22 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/01/22/backlog-ola-bini-on-clojure-conj/</guid>
      <description>&lt;p&gt;As I promised in my &lt;a href=&#34;http://bit.ly/clj-syd&#34;&gt;previous post&lt;/a&gt;, here are the highlights of what &lt;a href=&#34;http://olabini.com/blog/&#34;&gt;Ola Bini&lt;/a&gt; had to say about &lt;a href=&#34;http://clojure-conj.org/&#34;&gt;Clojure/conj&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Clojure/conj is the largest gathering of clojure programmers, hackers and enthusiasts, with a single track of talks spanning three days.&#xA;Ola selected his favorite talks and summarised each one of them.&lt;/p&gt;&#xA;&lt;p&gt;The actual slides for each one of the talks can be found on &lt;a href=&#34;https://github.com/relevance/clojure-conj&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You can find Ola&amp;rsquo;s slides &lt;a href=&#34;http://db.tt/lTFsOKpZ&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;fun-data-structures&#34;&gt;Fun Data Structures&lt;/h3&gt;&#xA;&lt;p&gt;This is certainly a very interesting topic. The highlight here is the approach Clojure takes to handling immutable data structures efficiently: persistent data structures through structural sharing - maybe a good short talk for the next meetup?&lt;/p&gt;</description>
    </item>
    <item>
      <title>announcing the sydney clojure user group</title>
      <link>http://leonardoborges.com/writings/2012/01/20/announcing-the-sydney-clojure-user-group/</link>
      <pubDate>Fri, 20 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/01/20/announcing-the-sydney-clojure-user-group/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; We now have a [Meetup.com page][9]. Head over there to learn about our next meetups as well as to RSVP to them. We&amp;rsquo;ll discontinue usage of the wiki for registering attendees, in favor of the new site. Everything else on this post however still holds.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.leonardoborges.com/writings/2011/10/12/report-clojure-meetup-1/&#34;&gt;If you&amp;rsquo;ve been following my blog&lt;/a&gt;, you&amp;rsquo;ll have noticed I started running internal Clojure meetups/hack nights at ThoughtWorks here in Sydney a while ago. While being closed, we&amp;rsquo;ve already had one international speaker - [Ola Bini][7] - come and share his experience as an attendee at [Clojure/conj][8]. I promise I&amp;rsquo;ll blog about it soon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>So long 2011: Year highlights</title>
      <link>http://leonardoborges.com/writings/2012/01/01/so-long-2011-year-highlights/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2012/01/01/so-long-2011-year-highlights/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s that time of the year to look back at what you&amp;rsquo;ve done and either be happy about it or&amp;hellip; well not. :)&lt;/p&gt;&#xA;&lt;p&gt;To me anyway 2011 was a great year but I won&amp;rsquo;t bore you with the details so I&amp;rsquo;ll just jump straight into a couple of highlights!&lt;/p&gt;&#xA;&lt;p&gt;The biggest one of course was the project we developed to help the &lt;a href=&#34;http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/&#34;&gt;Queensland flood victims back in January&lt;/a&gt; - which brings me to the next topic:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://leonardoborges.com/writings/2011/12/07/help-keep-rottingnames-on-the-appstore/</link>
      <pubDate>Wed, 07 Dec 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/12/07/help-keep-rottingnames-on-the-appstore/</guid>
      <description>&lt;p&gt;A year ago I decided to try my hand on iPhone software development and created a very simple application to experience the whole lifecycle of putting a complete project on the Apple AppStore - &lt;a href=&#34;http://www.leonardoborges.com/writings/2011/03/19/rottingnames-for-iphone-available-for-free/&#34;&gt;I wrote about it a while back&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The result was &lt;a href=&#34;http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8&#34;&gt;RottingNames&lt;/a&gt;, a heavy metal band name generator.&lt;/p&gt;&#xA;&lt;p&gt;Since then, I haven&amp;rsquo;t developed anything else for the iPhone - mostly because my interest lies elsewhere now - but I did notice a small yet steady amount of downloads for this cool little app.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RubyConf Brazil 2011</title>
      <link>http://leonardoborges.com/writings/2011/11/10/rubyconf-brazil-2011/</link>
      <pubDate>Thu, 10 Nov 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/11/10/rubyconf-brazil-2011/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;http://leonardoborges.com/images/rubyconfBR2011-speakers.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I was in SÃ£o Paulo last week - the 3rd and 4th of November - for &lt;a href=&#34;http://rubyconf.com.br&#34;&gt;RubyConf Brazil&lt;/a&gt;. For those who don&amp;rsquo;t know, RubyConf Brazil is the evolution of Rails Summit Latin America, where &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/10/18/my-slides-from-rails-summit-09/&#34;&gt;I had the privilege to speak in 2009&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This year though, all bets were off. &lt;a href=&#34;http://akitaonrails.com&#34;&gt;Fabio Akita&lt;/a&gt; and &lt;a href=&#34;http://www.locaweb.com/&#34;&gt;Locaweb&lt;/a&gt; put together a great event, with over 700 attendees and about 30 speakers split in two streams and two awesome days.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Report: Clojure Meetup - 1</title>
      <link>http://leonardoborges.com/writings/2011/10/12/report-clojure-meetup-1/</link>
      <pubDate>Wed, 12 Oct 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/10/12/report-clojure-meetup-1/</guid>
      <description>&lt;p&gt;Last Tuesday we held ThoughtWorks&#39; Australia first Clojure meetup here in Sydney. It was a lot of fun so I thought I&#39;d share a few words about it.&lt;/p&gt;&#xA;&lt;p&gt;The format was rather simple. First, we had a brief introduction to the language syntax by breaking down a couple of snippets and understanding how each bit worked. For instance, this is one of those snippets:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;;word count&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(reduce &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;%1&lt;/span&gt; %2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              (assoc %1 %2 (inc (&lt;span style=&#34;color:#a6e22e&#34;&gt;%1&lt;/span&gt; %2)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              (assoc %1 %2 &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;clojure.string/split&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clojure 101 - this is is gonna be be great great great&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\s&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The cool thing here is that a simple example like this can show quite a few things about Clojure&#39;s syntax:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hiring good people is really simple</title>
      <link>http://leonardoborges.com/writings/2011/07/30/hiring-good-people-is-really-simple/</link>
      <pubDate>Sat, 30 Jul 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/07/30/hiring-good-people-is-really-simple/</guid>
      <description>&lt;p&gt;&#xA;  It really is. There&#39;s no magic involved. &#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  Again and again I come across articles from people complaining about the current interview practices. They complain it doesn&#39;t give you enough depth into the candidate&#39;s ability, personality etc. That it measures the wrong qualities. Or that it just doesn&#39;t work and bad people keep coming through the pipeline.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  Well, instead of complaining how about you change it? I&#39;m talking about hiring software engineers here so the first rule you should keep in mind is that you need to get them to write code.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Tale Of Concurrency: Partitioning Data Between Processes</title>
      <link>http://leonardoborges.com/writings/2011/06/19/a-tale-of-concurrency-partitioning-data-between-processes/</link>
      <pubDate>Sun, 19 Jun 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/06/19/a-tale-of-concurrency-partitioning-data-between-processes/</guid>
      <description>&lt;p&gt;So I had just finished writing this feature. I was confident it&amp;rsquo;d work - after all I had a good level of tests around it.&#xA;It sounded like yet another successful deployment.&lt;/p&gt;&#xA;&lt;p&gt;One week in and something starts breaking. It was hard to track down but at the end I realised it was caused by having concurrent processes running in parallel.&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s what happened in a recent production release at our current client. It was a very interesting problem to track&#xA;down and solve and I&amp;rsquo;ll do my best to explain and walk you through it here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Few Useful Git Commands</title>
      <link>http://leonardoborges.com/writings/2011/05/29/a-few-useful-git-commands/</link>
      <pubDate>Sun, 29 May 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/05/29/a-few-useful-git-commands/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been working fulltime with &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; for a while now and I&amp;rsquo;ve noticed a pattern of commands that emerge every so often, but not often enough that would make me remember them.&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s why I decided to post them here so I know where to look in the future. And of course they can turn out to be useful to someone else too.&lt;/p&gt;&#xA;&lt;p&gt;So without further ado, here they are:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#undo last commit&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git reset HEAD^&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#show files in a given commit&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git show --pretty&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;format:&amp;#34;&lt;/span&gt; --name-only rev_number&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#remove untracked files and directories&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -f -d&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#track remote branch&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch --track branch_name origin/master&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# given you created a new local branch &amp;#39;branch_name&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# pushes &amp;#39;branch_name&amp;#39; to &amp;#39;origin/branch_name&amp;#39;, creating the remote branch for you&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin branch_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#delete remote branch&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin :remote_branch_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ll keep this list up to date and add more useful stuff as need arises. Enjoy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Goodbye Wordpress, Hello nanoc!</title>
      <link>http://leonardoborges.com/writings/2011/05/08/good-bye-wordpress-hello-nanoc/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/05/08/good-bye-wordpress-hello-nanoc/</guid>
      <description>&lt;p&gt;&#xA;  I just finished migrating my blog from wordpress to &lt;a href=&#34;http://nanoc.stoneship.org/&#34; target=&#34;_blank&#34;&gt;nanoc&lt;/a&gt;&#xA;  using a &lt;a href=&#34;https://github.com/leonardoborges/nanoc3_blog&#34; target=&#34;_blank&#34;&gt;customized version&lt;/a&gt; of &lt;a href=&#34;https://github.com/mgutz/nanoc3_blog/&#34; target=&#34;_blank&#34;&gt;nanoc3_blog&lt;/a&gt;&#xA;  and it feels nice.&#xA;  &lt;br&gt;&#xA;  I grew tired of keeping up with Wordpress&#39; updates and this migration also means that I can finally get rid of php on&#xA;  my vps.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  However, do let me know if there is anything weird around here. The whole customization done on nanoc3_blog was&#xA;  related to the wordpress migration.&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;br&gt;&#xA;  I wanted to make sure all url&#39;s stayed the same so as to avoid broken links into the blog. Feel free to browse the&#xA;  &lt;a href=&#34;https://github.com/leonardoborges/nanoc3_blog&#34; target=&#34;_blank&#34;&gt;repository&lt;/a&gt; and see if the changes can be helpful to you.&#xA;  &lt;br&gt;&#xA;  It also includes a modified version of a wordpress import script that was responsible for keeping the links correct, among other things.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>one year of thoughtworks a retrospective</title>
      <link>http://leonardoborges.com/writings/2011/04/25/one-year-of-thoughtworks-a-retrospective/</link>
      <pubDate>Mon, 25 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/04/25/one-year-of-thoughtworks-a-retrospective/</guid>
      <description>&lt;p&gt;&#xA;It seems like it was yesterday that I wrote about my next big challenge: &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/&#34; target=&#34;_blank&#34;&gt;Moving to Australia to join ThoughtWorks&lt;/a&gt;. Since then a year has passed and I thought I&#39;d share a little bit about what it&#39;s been like so far.&lt;br&gt;&lt;br&gt;The first thing you notice when joining ThoughtWorks is that you&#39;re surrounded by smart, opinionated people. It was once common for me to be the one fighting for automated testing, TDD, Ruby and overall finding new and better ways of doing what we do - but imagine how different it is to join a team that takes that for granted. This gives you a very high standard within the team that frees your mind to try and achieve bigger things. It&#39;s a great feeling.&lt;br&gt;&lt;br&gt;&lt;a href=&#34;http://www.thoughtworks.com&#34; target=&#34;_blank&#34;&gt;ThoughtWorks&lt;/a&gt;&#39;Â culture is inspiring. We&#39;re a small and very active community - there&#39;s always something going on in our offices after hours: Tech nights, local groups&#39; meetups, training, people randomly hacking on stuff and even bandÂ rehearsals! The point is that you can get involved in several ways and the best part is that &lt;a href=&#34;http://www.thoughtworks.com&#34; target=&#34;_blank&#34;&gt;ThoughtWorks&lt;/a&gt; supports all that: be it providing pizzas and beers, flying us to internationalÂ conferences, buying books and whatnot in order to help us do our best! I could go on but you get the point.&lt;br&gt;&lt;br&gt;In return, we get to work on hard stuff. Not only technically challenging but personally challenging as well. As consultants we can be thought of as agents of change: When we go to a client, we&#39;re not only concerned with building the coolest projects with the best tools out there - of course that&#39;s a big part of what we do - but we&#39;re expected to change the way they think, work and do business.&lt;br&gt;&lt;br&gt;Since I joined I worked with 2 clients - and 2 different projects - that varied wildly between them. That is in part what makes working at ThoughtWorks so interesting to me. You get to change domains, technologies and teams more often than not, which nurtures aÂ stimulatingÂ environment.&lt;br&gt;&lt;br&gt;The first project for instance was a standard Java web app where we had the usual players such as &lt;a title=&#34;Spring&#34; href=&#34;http://www.springsource.org/&#34; target=&#34;_blank&#34;&gt;Spring&lt;/a&gt;, &lt;a title=&#34;Hibernate&#34; href=&#34;http://www.hibernate.org/&#34; target=&#34;_blank&#34;&gt;Hibernate&lt;/a&gt;, &lt;a title=&#34;Freemarker&#34; href=&#34;http://freemarker.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;Freemarker&lt;/a&gt;, etc...&lt;br&gt;&lt;br&gt;My current project, on the other hand, is very much like a start-up: We have a &lt;a title=&#34;Amazon EC2&#34; href=&#34;http://aws.amazon.com/ec2/&#34; target=&#34;_blank&#34;&gt;EC2&lt;/a&gt; box that plays our &lt;a title=&#34;Continuous Integration&#34; href=&#34;http://en.wikipedia.org/wiki/Continuous_integration&#34; target=&#34;_blank&#34;&gt;CI&lt;/a&gt; role, all code is hosted on &lt;a title=&#34;Github&#34; href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;,Â we&#39;re using &lt;a title=&#34;Ruby on Rails&#34; href=&#34;http://www.rubyonrails.org/&#34; target=&#34;_blank&#34;&gt;Ruby on Rails&lt;/a&gt; and deploying the whole thing to &lt;a href=&#34;http://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt; + &lt;a title=&#34;Amazon RDS&#34; href=&#34;http://aws.amazon.com/rds/&#34; target=&#34;_blank&#34;&gt;RDS&lt;/a&gt;.&lt;br&gt;&lt;br&gt;To top it off I also had the chance to make a real difference in the Queensland Flood Relief Appeal in 2010, when we built a &lt;a title=&#34;Clouds against the floods&#34; href=&#34;http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/&#34; target=&#34;_blank&#34;&gt;donation app to help the flood victims&lt;/a&gt; - that was definitely the highlight of the year, and something I&#39;m particularly proud of.&lt;br&gt;&lt;br&gt;What next? I&#39;m eager to find out what my second year here has to offer. Bring it on!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>look ma no hands tweeting with your voice</title>
      <link>http://leonardoborges.com/writings/2011/04/09/look-ma-no-hands-tweeting-with-your-voice/</link>
      <pubDate>Sat, 09 Apr 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/04/09/look-ma-no-hands-tweeting-with-your-voice/</guid>
      <description>&lt;p&gt;&#xA;This is just another one of those boring weekends where I felt the need to hack on something.&lt;br&gt;&lt;br&gt;If you follow Google Chrome&#39;s &lt;a title=&#34;Chrome&#39;s blog&#34; href=&#34;http://chrome.blogspot.com/&#34; target=&#34;_blank&#34;&gt;blog&lt;/a&gt; you&#39;re probably aware of this little nifty feature they started to implement in their latest builds: &lt;a href=&#34;http://chrome.blogspot.com/2011/03/talking-to-your-computer-with-html5.html&#34; target=&#34;_blank&#34;&gt;HTML5 voice recognition&lt;/a&gt;.&lt;br&gt;&lt;br&gt;And that&#39;s when it struck me: &#34;Hey, what if I use that and tweet with my voice instead of typing?&#34;&lt;br&gt;&lt;br&gt;The result of this hacking session is &lt;a href=&#34;http://loudparrot.heroku.com/&#34;&gt;LoudParrot&lt;/a&gt;, a sample Rails app that shows how to do just that. You &lt;strong&gt;will&lt;/strong&gt; need a fairly recent build of Google Chrome -beta - which you can download &lt;a href=&#34;http://www.google.com/intl/en/landing/chrome/beta/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;You can get the source on &lt;a href=&#34;https://github.com/leonardoborges/loud-parrot&#34;&gt;GitHub&lt;/a&gt;.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>simplejquery daterange picker</title>
      <link>http://leonardoborges.com/writings/2011/03/31/simplejquery-daterange-picker/</link>
      <pubDate>Thu, 31 Mar 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/03/31/simplejquery-daterange-picker/</guid>
      <description>&lt;p&gt;&#xA;As in many web apps out there, this week I needed a date range picker. I shopped around and while I did find a couple of good options they were (a) too clunky and (b) didn&#39;t prevent you from selecting invalid ranges. The latter being the one I was really interested in.&lt;br&gt;&lt;br&gt;So I coded up something simple that worked and looked nice and decided to share around. It&#39;s the &lt;a title=&#34;jquery-daterange-picker&#34; href=&#34;http://github.com/leonardoborges/jquery-daterange-picker&#34;&gt;jquery-daterange-picker&lt;/a&gt;. Its only dependencies are &lt;a title=&#34;jQuery&#34; href=&#34;http://jquery.com/&#34;&gt;jQuery&lt;/a&gt; and &lt;a title=&#34;jQueryUI datepicker &#34; href=&#34;http://docs.jquery.com/UI/Datepicker&#34;&gt;jQueryUI&#39;s datepicker&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Got &lt;a title=&#34;jquery-daterange-picker&#34; href=&#34;http://github.com/leonardoborges/jquery-daterange-picker&#34;&gt;get it&lt;/a&gt;, &lt;a title=&#34;jquery-daterange-picker&#34; href=&#34;http://github.com/leonardoborges/jquery-daterange-picker&#34;&gt;fork it&lt;/a&gt;, &lt;a title=&#34;jquery-daterange-picker&#34; href=&#34;http://github.com/leonardoborges/jquery-daterange-picker&#34;&gt;contribute to it&lt;/a&gt; or &lt;a title=&#34;Examples&#34; href=&#34;http://leonardoborges.github.com/jquery-daterange-picker/demo/index.html&#34;&gt;check out some examples&lt;/a&gt;.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rottingnames for iphone available for free</title>
      <link>http://leonardoborges.com/writings/2011/03/19/rottingnames-for-iphone-available-for-free/</link>
      <pubDate>Sat, 19 Mar 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/03/19/rottingnames-for-iphone-available-for-free/</guid>
      <description>&lt;p&gt;&#xA;Following the staggering success of the online version of &lt;a href=&#34;http://rottingnames.heroku.com&#34;&gt;RottingNames&lt;/a&gt; - where by success I mean the handful of metal heads constantly using the app :) - I released the &lt;a href=&#34;http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8&#34;&gt;iPhone version for free &lt;/a&gt;. You can now generate crazy and fun names anywhere! Go &lt;a href=&#34;http://itunes.apple.com/au/app/rottingnames/id413043377?mt=8&#34;&gt;get it&lt;/a&gt;!&lt;br&gt;&lt;br&gt;I&#39;ve been meaning to post this for Â a while but I was waiting to have some free time and add a few new features to the app, which I just realised won&#39;t happen any time soon given the priorities I have at the moment. But by all means feel free to drop a line if you&#39;re dying about a missing feature.&lt;br&gt;&lt;br&gt;Now go have fun ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ide review rubymine</title>
      <link>http://leonardoborges.com/writings/2011/02/16/ide-review-rubymine/</link>
      <pubDate>Wed, 16 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/02/16/ide-review-rubymine/</guid>
      <description>&lt;p&gt;&#xA;Since I started working with Ruby about 4 years ago, I&#39;ve used quite a few text editors and ide&#39;s: &lt;a href=&#34;http://www.aptana.com/products/radrails&#34;&gt;RadRails&lt;/a&gt;, &lt;a href=&#34;http://projects.gnome.org/gedit/&#34; target=&#34;_blank&#34;&gt;gedit&lt;/a&gt; + &lt;a href=&#34;https://github.com/lexrupy/gmate&#34; target=&#34;_blank&#34;&gt;plugins&lt;/a&gt;, &lt;a href=&#34;http://macromates.com/&#34; target=&#34;_blank&#34;&gt;TextMate&lt;/a&gt; and &lt;a href=&#34;http://www.vim.org/&#34; target=&#34;_blank&#34;&gt;Vim&lt;/a&gt;.&lt;br&gt;&lt;br&gt;TextMate is the one I&#39;ve used the most and it&#39;s been ok for a long time. Until you realize you need half a dozen bundles to make it really useful for ruby development. Obviously the same goes for Vim and gedit.&lt;br&gt;&lt;br&gt;Oh, and forget about refactoring. In these tools refactoring equals regex global replace. So if you need it, well, forget it.&lt;br&gt;&lt;br&gt;That&#39;s when I decided to give &lt;strong&gt;&lt;a href=&#34;http://www.jetbrains.com/ruby/&#34; target=&#34;_blank&#34;&gt;RubyMine&lt;/a&gt;&lt;/strong&gt; a fair go. I&#39;ve been using it heavily for a while now and I must say I love it!&lt;br&gt;&lt;br&gt;What pissed me off about RadRails when I first tried it was the speed. It was too slow, something people take for granted when running java based IDE&#39;s.&lt;br&gt;&lt;br&gt;However this is not true for RubyMine. You DO take a hit on startup, nothing major, but once it&#39;s done, it&#39;s a breeze.&lt;br&gt;&lt;br&gt;I&#39;ve compiled a list of my favorite productivity shortcuts and features. Hope it&#39;ll be useful to someone else.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Productivity Shortcuts&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;hr /&gt;&lt;strong&gt;Navigation&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;Ctrl + Tab&lt;/em&gt; - File Switcher&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + T&lt;/em&gt; - Switching between implementation and test works perfectly. Even in a pure ruby project&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + F12&lt;/em&gt; - Expand/restore editor&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + Shift + N&lt;/em&gt; - Go to model/view/controller&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + F1&lt;/em&gt; - Show current file in other views such as the project tree (scroll to file)&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + N&lt;/em&gt; - Open file&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Alt + Shift + N&lt;/em&gt; - Open symbol - across files&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + F7&lt;/em&gt; - Find usages - when on a method, variable, etcâ€¦&lt;br&gt;&lt;br&gt;&lt;strong&gt;Running/Debugging&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;Ctrl + Shift + F10&lt;/em&gt; - Run current [test] file. When inside a test method, run that single method.&lt;br&gt;&lt;br&gt;&lt;em&gt;Ctrl + Shift + F9&lt;/em&gt; - Same as above, but in debug mode.&lt;br&gt;&lt;br&gt;&lt;em&gt;Shift + F10/Shift + F9&lt;/em&gt; - Run/Debug last action executed&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + R&lt;/em&gt; - Run rake task&lt;br&gt;&lt;br&gt;&lt;strong&gt;Refactoring&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Alt + N&lt;/em&gt; - Inline variable/ method&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Alt + M&lt;/em&gt; - Extract method&lt;br&gt;&lt;br&gt;&lt;em&gt;Shift + F6&lt;/em&gt; - Rename&lt;br&gt;&lt;br&gt;&lt;em&gt;F5&lt;/em&gt; - Copy current file as...&lt;br&gt;&lt;br&gt;&lt;strong&gt;Editing&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt; Cmd + Y&lt;/em&gt; - Delete line&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + D&lt;/em&gt; - Duplicate Line/Selection&lt;br&gt;&lt;br&gt;&lt;em&gt;Alt + Mouse&lt;/em&gt; - Column selection&lt;br&gt;&lt;br&gt;&lt;em&gt;Cmd + Shift + (Up Arrow|Down Arrow)&lt;/em&gt; - Moves de line or selected block of code up or down&lt;br&gt;&lt;br&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;hr /&gt;&lt;em&gt;Code completion&lt;/em&gt; - It&#39;s fairly accurate and pretty fast. They&#39;ve done some good yak shaving around this area.&lt;br&gt;&lt;br&gt;&lt;em&gt;Debugger&lt;/em&gt; -Â The debugging interface is an absolute beauty. Saved me a lot of time where I&#39;d have used puts statements or googled to re-learn how to use ruby-debug instead. Definitely worth checking out.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The bad stuff&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;hr /&gt;&lt;em&gt;It is not free&lt;/em&gt; - unless you are a committer to an open-source project. But it&#39;s not expensive either.&lt;br&gt;&lt;br&gt;&lt;em&gt;It is a bit slower&lt;/em&gt; - but not that much. The performance hit is insignificant compared to the added value.&lt;br&gt;&lt;br&gt;&lt;em&gt;Regex file open, TextMate style&lt;/em&gt; - What can I say? I do miss this.&lt;br&gt;&lt;br&gt;&lt;em&gt;Wrap highlighted text&lt;/em&gt; - In TextMate, if you highlight a word and press &#34;, [, {, ( or # it surrounds the word with the respective combination of quotes, brackets, etc... Another missed feature&lt;br&gt;&lt;br&gt;&lt;strong&gt;Wrapping up&lt;/strong&gt;&lt;br&gt;It&#39;s probably soon to say it but so far RubyMine has been my missing Ruby IDE. And I&#39;m very happy with it. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>clouds against the floods presentation available</title>
      <link>http://leonardoborges.com/writings/2011/02/12/clouds-against-the-floods-presentation-available/</link>
      <pubDate>Sat, 12 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/02/12/clouds-against-the-floods-presentation-available/</guid>
      <description>&lt;p&gt;&#xA;Last Tuesday I gave a short presentation on the whole &lt;a title=&#34;Clouds against the Floods&#34; href=&#34;http://www.leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/&#34; target=&#34;_blank&#34;&gt;Clouds Against the Floods&lt;/a&gt; thing at the &lt;a title=&#34;Ruby on Rails Oceania Meetup&#34; href=&#34;http://rubyonrails.com.au/sydney-meetups&#34; target=&#34;_blank&#34;&gt;Ruby on Rails Oceania User Group&lt;/a&gt; here in Sydney.&lt;br&gt;&lt;br&gt;Those guys are awesome and they recorded the talk - thanks guys!&lt;br&gt;&lt;br&gt;If you&#39;d like to download the slides, they&#39;re available on &lt;a title=&#34;Slideshare profile&#34; href=&#34;http://www.slideshare.net/borgesleonardo/clouds-against-the-floods&#34; target=&#34;_blank&#34;&gt;Slideshare&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Enjoy! ;)&lt;br&gt;&lt;br&gt;&lt;object classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; width=&#34;425&#34; height=&#34;344&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34;&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;param name=&#34;allowscriptaccess&#34; value=&#34;always&#34; /&gt;&lt;param name=&#34;src&#34; value=&#34;http://www.youtube.com/v/DYDD9XiW3Gg?hl=en&amp;amp;fs=1&#34; /&gt;&lt;param name=&#34;allowfullscreen&#34; value=&#34;true&#34; /&gt;&lt;embed type=&#34;application/x-shockwave-flash&#34; width=&#34;425&#34; height=&#34;344&#34; src=&#34;http://www.youtube.com/v/DYDD9XiW3Gg?hl=en&amp;amp;fs=1&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>update to appconstants it can now be used as a gem</title>
      <link>http://leonardoborges.com/writings/2011/02/02/update-to-appconstants-it-can-now-be-used-as-a-gem/</link>
      <pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/02/02/update-to-appconstants-it-can-now-be-used-as-a-gem/</guid>
      <description>&lt;p&gt;&#xA;This is just a quick post to let you know that &lt;a title=&#34;app_constants github repo&#34; href=&#34;https://github.com/leonardoborges/app_constants&#34; target=&#34;_blank&#34;&gt;AppConstants&lt;/a&gt; can now be used as gem!&lt;br&gt;&lt;br&gt;Just add it to your Gemfile and &#39;bundle install&#39; it:&lt;br&gt;&lt;br&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#in your Gemfile&#xA;gem &amp;#34;app_constants&amp;#34;&#xA;&#xA;#in the console&#xA;$ bundle install&#xA;$ rails generate app_constants&#xA;#then follow the instructions on-screen instructions&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;It can also be used without Rails. Check out full instructions on the &lt;a title=&#34;app_constants github repo&#34; href=&#34;https://github.com/leonardoborges/app_constants&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Feedback welcome :)&lt;/p&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>clouds against the floods</title>
      <link>http://leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2011/01/16/clouds-against-the-floods/</guid>
      <description>&lt;p&gt;&#xA;I think by now everyone&#39;s heard of the hard time the guys up in Queensland, Australia are having because of the &lt;a title=&#34;Queensland Floods&#34; href=&#34;http://www.google.com/search?q=qld+floods&#34; target=&#34;_blank&#34;&gt;recent floods&lt;/a&gt;. People have lost their lives and many others have lost their homes and businesses, product of years of hard work.&lt;br&gt;&lt;br&gt;As a result of this massive disaster the Queensland Government decided to run a telethon to encourage donations to help the flood victims. The Telethon aired last Sunday, 09/01/11, on Channel 9 and lasted for 2 hours.&lt;br&gt;&lt;br&gt;The problem was the existing donations system that the Government had been using so far: it was just not thought out to handle the load we were expecting to have on Sunday.&lt;br&gt;&lt;br&gt;That&#39;s when my employer, &lt;a title=&#34;ThoughtWorks&#34; href=&#34;http://www.thoughtworks.com/&#34; target=&#34;_blank&#34;&gt;ThoughtWorks&lt;/a&gt;, kindly offered a hand to &lt;a href=&#34;http://www.qld.gov.au/smartservice/&#34; target=&#34;_blank&#34;&gt;Smart Services Queensland&lt;/a&gt; in the attempt to make sure they could receive all donations that were likely to come through the web.&lt;br&gt;&lt;br&gt;After that, on the Thursday afternoon before the event, &lt;a title=&#34;Phillip CalÃ§ado&#34; href=&#34;http://fragmental.tw/&#34; target=&#34;_blank&#34;&gt;Phillip CalÃ§ado&lt;/a&gt;, Ben Barnard and I set off on a mission against the clock: we had a little over 48 hours to develop, test and deploy an application that was expected to handle thousands of users. Not only that but an application that, should it fail, would prevent millions of dollars from reaching the people in need in Queensland. This was a great responsibility but we knew we could do it.&lt;br&gt;&lt;br&gt;Given the time constraints it was a bit obvious that we would use &lt;a title=&#34;Ruby on Rails&#34; href=&#34;http://rubyonrails.org/&#34; target=&#34;_blank&#34;&gt;Ruby on Rails&lt;/a&gt; for this app. Both because of the productivity it&#39;s known for and because we had the knowledge right there. With that out of the way, we had to decide how and where we would deploy this thing. We thought a little about it and came down to to 2 options: &lt;a title=&#34;Amazon EC2&#34; href=&#34;http://aws.amazon.com/ec2/&#34;&gt;Amazon EC2&lt;/a&gt; or &lt;a title=&#34;Heroku&#34; href=&#34;http://heroku.com/&#34; target=&#34;_blank&#34;&gt;Heroku&lt;/a&gt; (which is powered by Amazon EC2 under the hood). I pushed hard for Heroku and that&#39;s what we ended up going with.&lt;br&gt;&lt;br&gt;Now it was time to get down and dirty and start coding the app. In principle it should be fairly simple. It needed a form where a potential donor would fill out his/her information, giving the option to receive the tax receipt by email or regular mail - more on that later. Upon clicking submit users would be taken to the secure payment gateway website where they could input their credit card number and finish the payment, after which they would be taken back to our app with a success - or an error - message and a transaction number.&lt;br&gt;&lt;br&gt;Now this work flow has a couple of implications: First, all emails would have to be sent in the background so as to not interfere with the website performance. We were expecting to be sending thousands of them - workers anyone?&lt;br&gt;&lt;br&gt;Second, the payment gateway integration would have to be developed and tested from scratch. Up until now the Queensland Government integrated with it in a different manner that could not be reused in this case.&lt;br&gt;&lt;br&gt;And most important of all, although simple in concept, we had no idea of the load we should be preparing for. There was just no data from previous telethons. Thus we decided to prepare for the maximum we possibly could.&lt;br&gt;&lt;br&gt;As we developed the application we deployed continuously to Heroku in order to test the payment gateway integration, benchmark the app using &lt;a title=&#34;Apache AB&#34; href=&#34;http://httpd.apache.org/docs/2.0/programs/ab.html&#34; target=&#34;_blank&#34;&gt;Apache AB&lt;/a&gt;, setup cache headers - Heroku uses &lt;a title=&#34;Varnish&#34; href=&#34;http://www.varnish-cache.org/&#34; target=&#34;_blank&#34;&gt;Varnish&lt;/a&gt; - and find bottlenecks.&lt;br&gt;&lt;br&gt;Email was one of these bottlenecks and that&#39;s why we decided to handle that in the background using &lt;a title=&#34;Delayed::Job&#34; href=&#34;https://github.com/collectiveidea/delayed_job&#34; target=&#34;_blank&#34;&gt;Delayed::Jobs&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Since the first deployment, we also tweaked a couple of things at Heroku, such as migrating from their free PostgreSQL offering to a dedicated instance that we believed would both take the load and have plenty of room for all the data - as I write this post, we are already well over the 5MB limit they offer for free.&lt;br&gt;&lt;br&gt;Long story short, by Saturday evening Â the website was up and running on 5 app instances, a 6th instance running background jobs - sending emails - and a dedicated PostgreSQL database server.&lt;br&gt;&lt;br&gt;As Heroku is outside the Government network, their SMTP server was a no go on the short term so we also integrated the app with &lt;a title=&#34;SendGrid&#34; href=&#34;http://sendgrid.com/&#34; target=&#34;_blank&#34;&gt;SendGrid&lt;/a&gt;, an email delivery service that fitted perfectly our needs - although the site got so much traction that we went over our monthly quota with them. But the nice guys from SendGrid increased our limit after I opened a ticket explaining the situation!&lt;br&gt;&lt;br&gt;As for performance we used &lt;a href=&#34;http://newrelic.com/&#34;&gt;NewRelic&lt;/a&gt; to monitor the application, which Heroku also makes a breeze to integrate with.&lt;br&gt;&lt;br&gt;We all went home to rest and get ready for Sunday, the day of the Telethon, when we would be monitoring the app throughout the day. We were all excited and when the show went live, we started seeing all those beautiful access charts moving like crazy, spiking over 720 requests per minute and being solid like a rock with flat and fast response times throughout the night.&lt;br&gt;&lt;br&gt;In about two hours we had over AUD$2,000,000.00 (two million) donated through our website.&lt;br&gt;&lt;br&gt;Since then the number of transactions dropped but has stayed constant and as of today we&#39;ve received AUD$25,438,518.32Â (over 25 millions of dollars) that will be donated to the flood victims in Queensland.&lt;br&gt;&lt;br&gt;Oh, and the site is still up and going strong so move your fingers and go help: &lt;a title=&#34;Queensland Floods Telethon&#34; href=&#34;http://telethon.smartservice.qld.gov.au/&#34; target=&#34;_blank&#34;&gt;telethon.smartservice.qld.gov.au&lt;/a&gt; - there will be heaps of people grateful for your donation.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>help stop the ie money drain</title>
      <link>http://leonardoborges.com/writings/2010/09/28/help-stop-the-ie-money-drain/</link>
      <pubDate>Tue, 28 Sep 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/09/28/help-stop-the-ie-money-drain/</guid>
      <description>&lt;p&gt;&#xA;I&#39;m a big heavy metal fan. And so are most of my friends. As a result I launched &lt;a title=&#34;RottingNames&#34; href=&#34;http://rottingnames.heroku.com/&#34; target=&#34;_blank&#34;&gt;RottingNames&lt;/a&gt;, a band name generator that will generate the most hilarious, nastiest and nonsense names the metal world is yet to discover - ok, that&#39;s probably a bit of an overstatement but the idea is good.&lt;br&gt;&lt;br&gt;However, a friend pointed out the code had a bug when running under - gasp - Internet Explorer. That didn&#39;t surprise me at all and I didn&#39;t bother to fix it. It&#39;s a small app, it&#39;s for my own - a few other&#39;s - amusement but it did give me the idea about my next micro app.&lt;br&gt;&lt;br&gt;Ever wondered how much time people all around the world are wasting trying to fix nasty IE bugs? How about putting that in numbers and actually seeing how much money is going down the hole? We can&#39;t just drop support - yet. But we can help those poor souls to upgrade to something better.&lt;br&gt;&lt;br&gt;Enter &lt;a title=&#34;The IE Money Drain&#34; href=&#34;http://iemoneydrain.heroku.com/&#34;&gt;The IE Money Drain&lt;/a&gt;. Whenever you waste time working on trying to make IE behave the way it should, go there and log your hours. Share it with your clients and managers. Show them how much time and money could be saved if we were proactively helping users make the move.&lt;br&gt;&lt;br&gt;And don&#39;t forget to tell colleagues, friends, even your grandma! Share the love ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>are_you_testing_your_javascript_yet</title>
      <link>http://leonardoborges.com/writings/2010/06/14/are_you_testing_your_javascript_yet/</link>
      <pubDate>Mon, 14 Jun 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/06/14/are_you_testing_your_javascript_yet/</guid>
      <description>&lt;p&gt;&#xA;What&#39;s the difference between your application&#39;s javascript code and its java/ruby/python/whatever code?&lt;br&gt;&lt;br&gt;Think about it for a second. Done? Well, the answer is: none!&lt;br&gt;&lt;br&gt;In today&#39;s web applications your javascript code is no different from the rest of your code base but yet we treat it with disregard - and we&#39;re all to blame.&lt;br&gt;&lt;br&gt;We often see developers investing time writing all sorts of automated tests around their code base but fail to do the same for their javascript -  and yet they get surprised when their client can&#39;t click on a button on their web app that depends on that ajax call that has been manually tested once when the page was first released.&lt;br&gt;&lt;br&gt;Ask yourself this question if you&#39;re not sure if you should be testing your javascript: If it breaks, can my users still benefit from my app? - I think the answer for most web apps is obvious.&lt;br&gt;&lt;br&gt;As for tools, I can only speak of two, &lt;a href=&#34;http://code.google.com/p/js-test-driver/&#34; target=&#34;_blank&#34;&gt;JsTestDriver&lt;/a&gt; and &lt;a href=&#34;http://github.com/nkallen/screw-unit&#34; target=&#34;_blank&#34;&gt;screw-unit&lt;/a&gt;, the latter being the one we&#39;re using in my current project at &lt;a href=&#34;http://www.thoughtworks.com&#34; target=&#34;_blank&#34;&gt;ThoughtWorks&lt;/a&gt;.&lt;br&gt;&lt;br&gt;What I liked about screw-unit is that it&#39;s very easy to get it up and running. Being a Behavior-Driven Testing Framework it&#39;s not surprising it has a syntax similar to &lt;a href=&#34;http://rspec.info/&#34; target=&#34;_blank&#34;&gt;Rspec&lt;/a&gt; -which I prefer over JsTestDriver&#39;s similarity to &lt;a href=&#34;http://www.junit.org/&#34; target=&#34;_blank&#34;&gt;JUnit&#39;s&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790871.js?file=gistfile1.js&#34;&gt;&lt;/script&gt; This is how a test written with screw-unit could look like:  &lt;script src=&#34;https://gist.github.com/790873.js?file=gistfile1.js&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Not too bad for a javascript test suite huh?&lt;br&gt;&lt;br&gt;So the next time you write a javascript line of code, how about writing a test for it? Consider using screw-unit as your tool but if you have been writing tests using a different framework and you&#39;re happy with it, share your experience.&lt;br&gt;I&#39;m always keen to learn better ways of doing what I do.&lt;br&gt;&lt;br&gt;Cheers!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>small update to appconstants</title>
      <link>http://leonardoborges.com/writings/2010/04/24/small-update-to-appconstants/</link>
      <pubDate>Sat, 24 Apr 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/04/24/small-update-to-appconstants/</guid>
      <description>&lt;p&gt;&#xA;It&#39;s been now over a week since we moved to Sydney and everything is just great. We&#39;re still house hunting but I got a feeling we&#39;ll have a home soon. :)&lt;br&gt;&lt;br&gt;In the meantime, this morning I got a feature request on github to allow &lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34; target=&#34;_blank&#34;&gt;AppConstants&lt;/a&gt; to interpret YAML files with embedded code like this:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790877.js?file=gistfile1.yml&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;I haven&#39;t needed it myself but thought it would be a nice addition so my &lt;a href=&#34;http://github.com/leonardoborges/app_constants/commit/7c116c8cf9307942f7d8682779510e623156fd08&#34;&gt;latest commit&lt;/a&gt; does exactly that. Let me know if you find any issues.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>goodbye europe a two year retrospective</title>
      <link>http://leonardoborges.com/writings/2010/04/10/goodbye-europe-a-two-year-retrospective/</link>
      <pubDate>Sat, 10 Apr 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/04/10/goodbye-europe-a-two-year-retrospective/</guid>
      <description>&lt;p&gt;&#xA;Now several months after I announced my &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/&#34; target=&#34;_blank&#34;&gt;odyssey&lt;/a&gt; to obtain my Australian work visa, the time has finally come!&lt;br&gt;&lt;br&gt;I&#39;ll be flying to Sydney next week, April 15th, and as you can probably guess, I&#39;m excited as hell! :) This starts an important new page both in my life and my career, but that&#39;s not what this post is about. It&#39;s about sharing the experience of living for over two years in Europe.&lt;br&gt;&lt;br&gt;First off, I traveled. A whole lot. Both for work and leisure. I&#39;ve been to 23 cities in 11 countries, which you can check on my &lt;a href=&#34;http://www.tripadvisor.com/MemberProfile?uid=F36E8157798EAF76A8684BC6FDB95DBD&amp;amp;c=pt&#34; target=&#34;_blank&#34;&gt;map&lt;/a&gt;. Getting to explore all these different cultures was definitely rewarding and fun, to say the least. But I have my favorites, including Prague, London, Dublin and Bruges...&lt;br&gt;&lt;br&gt;While in Madrid, I worked for &lt;a href=&#34;http://www.miraiespana.com/&#34; target=&#34;_blank&#34;&gt;Mirai EspaÃ±a&lt;/a&gt;, the company that provided me with great professional experiences. I had the opportunity to work with a &lt;a href=&#34;http://twitter.com/pratiknaik&#34; target=&#34;_blank&#34;&gt;few&lt;/a&gt; &lt;a href=&#34;http://twitter.com/zukunftsalick&#34; target=&#34;_blank&#34;&gt;very&lt;/a&gt; &lt;a href=&#34;http://twitter.com/philly_mac&#34;&gt;smart&lt;/a&gt; &lt;a href=&#34;http://twitter.com/fxn&#34; target=&#34;_blank&#34;&gt;people&lt;/a&gt; that, in a way or another, contributed to improve my skills as a software engineer.Â  Not to mention the several conferences I attended, including QCon in London, RailsConf in Berlin and serveral &lt;a href=&#34;http://www.leonardoborges.com/writings/category/conferences/&#34; target=&#34;_blank&#34;&gt;others&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Being a rock/metal fan I am in the ideal place to see just about every band I always wanted to. Concerts in Europe are high quality, frequent and affordable and as such, I&#39;ve attended a whole bunch of them:&lt;br&gt;&lt;br&gt;- Metallica&lt;br&gt;- Megadeth&lt;br&gt;- Soilwork&lt;br&gt;- Machine Head&lt;br&gt;- Offspring&lt;br&gt;- Cavalera Conspiracy&lt;br&gt;- Within Temptation&lt;br&gt;- The Haunted&lt;br&gt;- At the gates&lt;br&gt;- Judas Priest&lt;br&gt;- Testament&lt;br&gt;- Nine Inch Nails&lt;br&gt;- AC/DC&lt;br&gt;- Rammstein&lt;br&gt;- Grave&lt;br&gt;- Krisiun&lt;br&gt;- Nile&lt;br&gt;&lt;br&gt;On a more personal note Madrid is also the place where I met Enif, my beloved girlfriend. We are both very excited about this new experience and, of course, we&#39;re moving together to Sydney, with plans of getting married next year! :D&lt;br&gt;&lt;br&gt;As you can see, Europe has been kind to me and I will certainly miss the experiences, cities, cultures and people I&#39;ve met. But I&#39;m only making room for more and more interesting things that will certainly happen on the land down under. Let&#39;s conquer it all!&lt;br&gt;&lt;br&gt;Hopefully my next post will be written by the beach, in my new home in Australia.&lt;br&gt;&lt;br&gt;Cheers, mate! :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>fallingdreams my very own tetris clone</title>
      <link>http://leonardoborges.com/writings/2010/04/09/fallingdreams-my-very-own-tetris-clone/</link>
      <pubDate>Fri, 09 Apr 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/04/09/fallingdreams-my-very-own-tetris-clone/</guid>
      <description>&lt;p&gt;&#xA;This will come as no surprise to my closest friends, but I am a long time game development admirer.  Although I&#39;ve never done anything professionally I did spend some time in the past studying this amazingly interesting field - it&#39;s my dark hobby. As hardware evolves and gamers demand more and more reality from their consoles, the game development industry is one of the few that basically didn&#39;t suffer with the latest economic crisis.&lt;br&gt;&lt;br&gt;3D games are getting more and more sophisticated to the point that it&#39;s very hard for a single person, or even a small team, to develop something worthwhile - think of all the people you need to develop a game such as &lt;a title=&#34;God of War III on Wikipedia&#34; href=&#34;http://en.wikipedia.org/wiki/God_of_War_III&#34; target=&#34;_blank&#34;&gt;God of War III&lt;/a&gt;: screenwriters, artists, musicians, sound engineers, 3D artists, animators, programmers, level designers, combat designers, actors, voiceovers...&lt;br&gt;&lt;br&gt;So I just wanted to have the experience of writing a full game, end-to-end, and that&#39;s where FallingDreams comes in. To be able to do that in a short amount of time, it had to be something simple and that&#39;s why I chose &lt;a title=&#34;Tetris on Wikipedia&#34; href=&#34;http://en.wikipedia.org/wiki/Tetris&#34;&gt;Tetris&lt;/a&gt;. Although simple, it does share most of the steps common to modern games development. It was a very interesting project to work at and you can grab the result &lt;a title=&#34;FallingDreams binary&#34; href=&#34;http://www.leonardoborges.com/writings/wp-content/uploads/2010/04/fallingdreams.jar&#34;&gt;here&lt;/a&gt;. The source code is also available on my github account, &lt;a title=&#34;FallingDreams on GitHub&#34; href=&#34;http://github.com/leonardoborges/FallingDreams&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;a title=&#34;FallingDreams on GitHub&#34; href=&#34;http://github.com/leonardoborges/FallingDreams&#34; target=&#34;_blank&#34;&gt;FallingDreams&lt;/a&gt; is written in Java (JDK 6) and as such it should work fine on Windows, Linux and Mac OS. I tried to be as loyal as possible to the original Tetris rules, but you might find one thing or two that don&#39;t work as one&#39;d exepct.&lt;br&gt;&lt;br&gt;Enjoy! ;)&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This was my first &#39;full game&#39; and is not intended to be production ready. The code has definitely got room for improvement and it served as my playground where I experimented different design techniques, both game and general software related. And it doesn&#39;t have a single line of tests - crucify me :P &lt;/em&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;As I said, it&#39;s not supposed to be considered bug free but I&#39;m sure people interested in games development can benefit from the source files. Feel free to fork it as well! It would be cool to see what people would do with it :)&lt;/em&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>upgrading appconstants to rails 3</title>
      <link>http://leonardoborges.com/writings/2010/02/28/upgrading-appconstants-to-rails-3/</link>
      <pubDate>Sun, 28 Feb 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/02/28/upgrading-appconstants-to-rails-3/</guid>
      <description>&lt;p&gt;&#xA;Back in January I &lt;a href=&#34;http://www.leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/&#34; target=&#34;_blank&#34;&gt;announced&lt;/a&gt; a small but useful plugin called &lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34;&gt;AppConstants&lt;/a&gt;, that basically provides a central place where you can store environment specific constants. And since I started using Rails 3 in the past week, I thought I&#39;d make it Rails 3 compatible.&lt;br&gt;&lt;br&gt;The code is really simple and - as I expected - the upgrade process was quite straight forward.&lt;br&gt;&lt;br&gt;I&#39;m not gonna write a guide here on how to upgrade your plugins to Rails 3 - there is plenty about that around the web - but instead, just show the steps I went through to upgrade mine. Similar plugins might have a similar upgrade path.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Generators&lt;/strong&gt;&lt;br&gt;&lt;br&gt;My plugin makes use of a simple generator that copies its default constants file and initializer to &lt;em&gt;Rails.root/config&lt;/em&gt; and &lt;em&gt;Rails.root/config/initializers&lt;/em&gt;, respectively. In Rails 2.x it was located under &lt;em&gt;Rails.root/vendor/plugins/app_constants/generators/app_constants&lt;/em&gt; and it was defined like so:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790878.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;In Rails 3, the generators had to be moved to &lt;em&gt;Rails.root/vendor/plugins/app_constants/lib/generators&lt;/em&gt;. Notice the root directory app_constants under generators has been removed as well. And the code was changed to this:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790879.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;We had three simple changes here:&lt;br&gt;&lt;br&gt;- &lt;em&gt;The generator now extends from &lt;em&gt;&lt;strong&gt;Rails::Generators::Base&lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;: This class uses the Thor infrastructure to handle generators. - more info &lt;a href=&#34;http://blog.plataformatec.com.br/2009/07/creating-your-own-generators-with-thor/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;- &lt;em&gt;I had to implement the &lt;strong&gt;source_root&lt;/strong&gt; class method&lt;/em&gt;, which basically tells your generator where to find your template files.&lt;br&gt;&lt;br&gt;- &lt;em&gt;The &lt;em&gt;&lt;strong&gt;manifest&lt;/strong&gt;&lt;/em&gt; method is now called &lt;em&gt;&lt;strong&gt;copy_config_files&lt;/strong&gt;&lt;/em&gt; - or &lt;strong&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/strong&gt;&lt;/em&gt; you want. &lt;br&gt;&lt;br&gt;The way this works is that, once you invoke the generator, Thor will sequentially call all instance methods in your generator class - or the only instance method in the example above. If your generator does a lot, it will allow for a better organization of your tasks.&lt;br&gt;&lt;br&gt;And that&#39;s it! I did change a couple of other things but that had to be changed anyway and are not related to the migration.&lt;br&gt;&lt;br&gt;For Rails 2.3.x users, you&#39;ll find a 2.3.x branch on github that should work for you.&lt;br&gt;&lt;br&gt;Cheers&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>learning objective c a ruby analogy</title>
      <link>http://leonardoborges.com/writings/2010/02/25/learning-objective-c-a-ruby-analogy/</link>
      <pubDate>Thu, 25 Feb 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/02/25/learning-objective-c-a-ruby-analogy/</guid>
      <description>&lt;p&gt;&#xA;Learning new programming languages is fun. And if it&#39;s your 2nd, 3rd...Nth programming language you will eventually look for features you already know and love.&lt;br&gt;&lt;br&gt;Coming from Ruby - but after having done my fair amount of Java for many years, among other things - I end up looking for features like &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/07/22/procs-lambdas-blocks-whats-the-difference/&#34; target=&#34;_blank&#34;&gt;blocks&lt;/a&gt;, &lt;a href=&#34;http://rubylearning.com/satishtalim/ruby_open_classes.html&#34; target=&#34;_blank&#34;&gt;open classes&lt;/a&gt; and syntax sugar like &lt;a href=&#34;http://ruby-doc.org/core/classes/Module.html#M001681&#34; target=&#34;_blank&#34;&gt;automatic generation of attribute accessors.&lt;/a&gt; These are hard to let go of.&lt;br&gt;&lt;br&gt;Having decided to learn &lt;a href=&#34;http://developer.apple.com/Mac/library/documentation/Cocoa/Conceptual/ObjectiveC/index.html&#34; target=&#34;_blank&#34;&gt;Objective-C&lt;/a&gt; recently, I was delighted to find out that all of these are available - for better or for worse - and wanted to share this analogy with its Ruby counterparts.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Attribute accessors&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;In ruby, this class definition&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790881.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;implements for you the getters and setters of the instance variable &lt;strong&gt;name&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;&lt;br&gt;In Objective-C, the combination of the @property and @synthesize directives provides you with roughly the same result:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790882.js?file=gistfile1.m&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Now the compiler is responsible for writing those getters/setters for you.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Open classes &amp; blocks&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Blocks in ruby are the structures that allow you to - among other things - iterate over arrays like this:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790883.js?file=gistfile1.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Objective-C doesn&#39;t have an &#39;each&#39; method in its root array class (NSArray) but since it does support blocks and open classes, you could just write it yourself:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790884.js?file=gistfile1.m&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Yes, I know the syntax isn&#39;t appealing, but using it in your program is a bit better:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/790886.js?file=gistfile1.m&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Given the syntactic differences, the code above is very similar to its ruby counterpart. Iterating over an array is just one of the many things blocks are useful for. Others might include dealing with files, network sockets etc...&lt;br&gt;&lt;br&gt;Blocks are powerful structures and are not created everyday, but it&#39;s nice to know that you can resort to them when the time comes. ;)&lt;br&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>hacking rubys syntax</title>
      <link>http://leonardoborges.com/writings/2010/02/03/hacking-rubys-syntax/</link>
      <pubDate>Wed, 03 Feb 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/02/03/hacking-rubys-syntax/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;What?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;In Ruby you have basically two ways of defining private methods:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791025.js?file=test.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;I see a small problem with both approaches. In the first one, and the most obvious, is that you need to duplicate the method name as well as add an extra method call - private - just to change its visibility.&lt;br&gt;&lt;br&gt;The second approach avoids this but adds the risk of accidentally putting a method that is intended to be public under the private section of the source file, which can render an annoying debugging session.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Why?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Personally, I like to have a &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/09/18/refactoring-for-readability/&#34; target=&#34;_blank&#34;&gt;smooth reading flow in my source files&lt;/a&gt;. That means that if the public method_a makes use of the private method_b, I want method_b defined right below its caller, which is possible - but verbose - using the private method call:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791026.js?file=test.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;But can be somewhat harder to accomplish if you decide to split your source file in sections:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791028.js?file=test.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;I wanted to be able to define a private method with a single reserved keyword...&lt;br&gt;&lt;br&gt;&lt;strong&gt;How?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;What if I could define a private method using this new syntax:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791029.js?file=test.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;It turns out I can.&lt;br&gt;&lt;br&gt;Notice the &lt;strong&gt;def_p&lt;/strong&gt; keyword? This is a new keyword I created by changing ruby&#39;s parser and that behaves mostly like the &lt;strong&gt;def&lt;/strong&gt; keyword, except that it defines a private method instead.&lt;br&gt;&lt;br&gt;If you wanna read the code that allows this behavior and try it yourself, &lt;a href=&#34;http://www.leonardoborges.com/writings/wp-content/uploads/2010/02/def_p_extension.diff&#34;&gt;download the patch I wrote&lt;/a&gt; and apply it to the ruby source code - I patched version &lt;strong&gt;1.9.1-p376&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;After applying the patch, just build ruby as usual:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791031.js?file=gistfile1.eclass&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;And then try running this script:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791033.js?file=test.rb&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;You should see the following output:&lt;br&gt;&lt;br&gt;&lt;script src=&#34;https://gist.github.com/791034.js?file=gistfile1.eclass&#34;&gt;&lt;/script&gt;&lt;br&gt;&lt;br&gt;Happy hacking :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>my take on rails environment specific constants</title>
      <link>http://leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/</link>
      <pubDate>Sat, 23 Jan 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/01/23/my-take-on-rails-environment-specific-constants/</guid>
      <description>&lt;p&gt;&#xA;Itâ€™s funny how every Rails application I - and possibly you - work on ends up needing some sort of per-environment global constants.&lt;br&gt;&lt;br&gt;Examples may include the application url - It might be used in account activation emails and thus should be different between the development and production environments.&lt;br&gt;&lt;br&gt;Or perhaps your application depends on external services that, depending on the environment, are available in different URIs.&lt;br&gt;&lt;br&gt;There are a couple solutions out there but my needs were simple and straightforward, thus I developed a small rails plugin that is the simplest thing that could possibly work: &lt;strong&gt;&lt;a href=&#34;http://github.com/leonardoborges/app_constants&#34;&gt;AppConstants&lt;/a&gt;&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;It&#39;s been useful for my current project and I hope it can be useful to someone else too ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>monit thinking sphinx and rvm</title>
      <link>http://leonardoborges.com/writings/2010/01/13/monit-thinking-sphinx-and-rvm/</link>
      <pubDate>Wed, 13 Jan 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/01/13/monit-thinking-sphinx-and-rvm/</guid>
      <description>&lt;p&gt;&#xA;In one of my Rails projects I&#39;m using &lt;a href=&#34;http://www.sphinxsearch.com/&#34; target=&#34;_blank&#34;&gt;Sphinx&lt;/a&gt; to provide full-text search capabilities. To integrate both worlds I chose &lt;a href=&#34;http://freelancing-god.github.com/ts/en/&#34; target=&#34;_blank&#34;&gt;Thinking Sphinx&lt;/a&gt;, which is just great and so far has met all of my expectations.&lt;br&gt;&lt;br&gt;Also, &lt;a href=&#34;http://www.leonardoborges.com/writings/2010/01/02/managing-multiple-ruby-versions/&#34; target=&#34;_blank&#34;&gt;as I previously mentioned&lt;/a&gt;, I&#39;m using &lt;a href=&#34;http://rvm.beginrescueend.com/&#34;&gt;RVM&lt;/a&gt; to manage my ruby installations on both my development and production machines and this setup is what motivated this post.&lt;br&gt;&lt;br&gt;I use &lt;a href=&#34;http://mmonit.com/monit/&#34; target=&#34;_blank&#34;&gt;Monit&lt;/a&gt; to monitor the services running on my production server - nginx, mysql, php - and as of the first deploy of this application, it only made sense to also monitor Sphinx.&lt;br&gt;&lt;br&gt;In order to create an initialization script, I would need at least a way to start and stop sphinx from the command line, which, using Thinking Sphinx, can be done using these rake tasks:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ rake thinking_sphinx:stop&lt;br&gt;$ rake thinking_sphinx:start&lt;br&gt;&lt;/pre&gt;&lt;br&gt;It&#39;s worth mentioning now that I don&#39;t run sphinx as root. I run it with the same user my rails application uses. For the purpose of this post, let&#39;s call it &lt;em&gt;deploy&lt;/em&gt;.&lt;br&gt;&lt;br&gt;When I tried using my script I got errors such as these:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;Missing the Rails 2.3.5 gem. Please `gem install -v=2.3.5 rails`, update your RAILS_GEM_VERSION setting in config/environment.rb for the Rails version you do have installed, or comment out RAILS_GEM_VERSION to use the latest version installed.&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;After some digging around I found that the GEM_HOME environment variable for my deploy user wasn&#39;t being set correctly - something to do with rvm, but not quite sure - and to fix this, well, I just had to set it, leaving the final working version of my script somewhat like this - simplified :&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#! /bin/sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### BEGIN INIT INFO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### END INIT INFO&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd /your/rails/app/root; export GEM_HOME=/path/to/your/gems; RAILS_ENV=production;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  start&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting sphinx: &amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                su - deploy -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$set_path&lt;span style=&#34;color:#e6db74&#34;&gt; rake ts:start&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /var/log/sphinx.log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  stop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stopping sphinx: &amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                su - deploy -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$set_path&lt;span style=&#34;color:#e6db74&#34;&gt; rake ts:stop&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /var/log/sphinx.log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            N&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/init.d/sphinx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Usage: &lt;/span&gt;$N&lt;span style=&#34;color:#e6db74&#34;&gt; {start|stop}&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are 2 things happening here. First, regardless of the user I&amp;rsquo;m running this init script as, I drop privileges in order to execute the rake task with my deploy user. Second, I set the GEM_HOME environment variable to stop getting the &amp;lsquo;gem not found&amp;rsquo; errors.&lt;br&gt;&lt;br&gt;After that, monit was able not only to monitor my sphinx instance, but also (re)start/stop it with the correct user.&lt;br&gt;&lt;br&gt;I&amp;rsquo;m no Linux wizard so if you wanna suggest improvements to this script, feel free to do so!&lt;/p&gt;</description>
    </item>
    <item>
      <title>managing multiple ruby versions</title>
      <link>http://leonardoborges.com/writings/2010/01/02/managing-multiple-ruby-versions/</link>
      <pubDate>Sat, 02 Jan 2010 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2010/01/02/managing-multiple-ruby-versions/</guid>
      <description>&lt;p&gt;&#xA;Today I read a nice &lt;a href=&#34;http://akitaonrails.com/2010/01/01/limpando-meu-ambiente-de-desenvolvimento&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt; - in Portuguese - by &lt;a href=&#34;http://akitaonrails.com/&#34; target=&#34;_blank&#34;&gt;FÃ¡bio Akita&lt;/a&gt; on how to manage multiple ruby versions on your machine. I&#39;ve tried it once with some tool I can&#39;t even remember the name but failed miserably.&lt;br&gt;&lt;br&gt;But this time things look very different. The tool here is the &lt;a href=&#34;http://rvm.beginrescueend.com&#34; target=&#34;_blank&#34;&gt;rvm&lt;/a&gt; - short for Ruby Version manager - and it works just great.&lt;br&gt;&lt;br&gt;Let&#39;s cut to the chase and imagine that you, like me, want to run/develop/test your code on both ruby 1.8.7 and ruby 1.9.1. These steps would get you up and running in a few minutes:&lt;br&gt;&lt;br&gt;&lt;strong&gt;Install rvm:&lt;/strong&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ gem sources -a http://gemcutter.org/&lt;br&gt;$ gem install rvm&lt;br&gt;$ rvm-install&lt;br&gt;$ echo &#34;if [[ ! -z $HOME/.rvm ]] ; then source $HOME/.rvm ; fi&#34; &gt;&gt; ~/.bash_profile&lt;br&gt;$ source ~/.rvm/scripts/rvm&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;Install the ruby interpreters you want to use:&lt;/strong&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ rvm  install ruby-1.8.7-p160&lt;br&gt;$ rvm  install ruby-1.9.1&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Now it&#39;s important to notice that at this point you have separate gem installations for each of the interpreters you&#39;ve installed in the previous step. That said, just go ahead and switch between your interpreters and use your command line scripts - ruby, gem, etc... - as usual.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Switching between interpreters:&lt;/strong&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ rvm ruby-1.8.7-p160  #switch to the specified version &lt;br&gt;$ ruby -v&lt;br&gt;ruby 1.8.7 (2009-04-08 patchlevel 160) [i686-darwin9.8.0]&lt;br&gt;$ gem install rails  #note I&#39;m not using sudo since the new gem paths point to the user&#39;s home directory &lt;br&gt;&lt;br&gt;$ rvm ruby-1.9.1  #switch to the specified version &lt;br&gt;$ ruby -v&lt;br&gt;ruby 1.9.1p376 (2009-12-07 revision 26041) [i386-darwin9.8.0]&lt;br&gt;$ gem install rails  #note I&#39;m not using sudo since the new gem paths point to the user&#39;s home directory&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;And that&#39;s it, just go on and install rails, merb, sinatra or whatever rocks your boat!&lt;br&gt;rvm will work with MRI/YARV, JRuby, Ruby EE and Rubinius. Enjoy and don&#39;t forget to check &lt;a href=&#34;http://rvm.beginrescueend.com&#34; target=&#34;_blank&#34;&gt;rvm&lt;/a&gt;&#39;s website for the complete documentation! :) &#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rupy 2009 poznan</title>
      <link>http://leonardoborges.com/writings/2009/11/04/rupy-2009-poznan/</link>
      <pubDate>Wed, 04 Nov 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/11/04/rupy-2009-poznan/</guid>
      <description>&lt;p&gt;&#xA;Next week the &lt;a href=&#34;http://rupy.eu/&#34;&gt;RuPy Conference 2009&lt;/a&gt; will be held in Poznan, Poland and I was planning to talk there.&lt;br&gt;&lt;br&gt;My talk had been approved and everything was looking good - I was gonna talk about JRuby in the Enterprise - until &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/&#34;&gt;my move to ThoughtWorks&lt;/a&gt; became a reality less than a month ago.&lt;br&gt;&lt;br&gt;This move led to a lack of support and time from my current company. I was counting on it to go there but since I&#39;ll be leaving soon, that wouldn&#39;t be possible.&lt;br&gt;&lt;br&gt;Since then I&#39;ve been in touch with Adam Parchimowicz - part of RuPy&#39;s organization team - and we tried to find alternatives to this. I wanted to thank him for all the effort he put into trying to make this happen. The terms we agreed on were good enough but this change of priorities kicked in too close to the event.&lt;br&gt;&lt;br&gt;Long story short, I&#39;d like to apologize for not being able to give my talk at RuPy this year.&lt;br&gt;&lt;br&gt;Apart from that, I gave a very similar talk at the &lt;a href=&#34;http://www.railssummit.com.br/&#34;&gt;Rails Summit Latin America&lt;/a&gt; this year in Brazil and you can find the slides and sources for it in my &lt;a href=&#34;http://www.leonardoborges.com/writings/presentations/&#34;&gt;Presentations&lt;/a&gt; page. ( Video coming soon )&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>my slides from rails summit 09</title>
      <link>http://leonardoborges.com/writings/2009/10/18/my-slides-from-rails-summit-09/</link>
      <pubDate>Sun, 18 Oct 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/10/18/my-slides-from-rails-summit-09/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#39;http://leonardoborges.com/assets/images/rs2009.jpg&#39;&gt;{% img /assets/images/rs2009.jpg %}&lt;/a&gt;&lt;br&gt;Rails Summit finished a few days ago and I have only one word to describe it: &lt;strong&gt;Awesome&lt;/strong&gt;!&lt;br&gt;&lt;br&gt;I met some really cool people, discussed a whole bunch of technical subjects and managed not to get so nervous in my first presentation ever - I&#39;m not counting internal presentations I&#39;ve done for my team...&lt;br&gt;&lt;br&gt;My slides and source files can be found &lt;a href=&#34;http://github.com/leonardoborges/railssummit09&#34;&gt;here&lt;/a&gt;. Feel free to contact me with questions if you got any.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>soon off to conquer lands afar</title>
      <link>http://leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/</link>
      <pubDate>Thu, 08 Oct 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/10/08/soon-off-to-conquer-lands-afar/</guid>
      <description>&lt;p&gt;&#xA;Once more my life is taking a huge turn.&lt;br&gt;&lt;br&gt;I&#39;ve been pretty quiet for the past month and honestly don&#39;t know how I managed to hold in my excitement. I&#39;ve just accepted an offer from &lt;a href=&#34;http://www.thoughtworks.com.au/&#34; target=&#34;_blank&#34;&gt;ThoughtWorks&lt;/a&gt; to be based at their australian offices, either in Sydney or Melbourne, depending  on where my 1st project will be.&lt;br&gt;&lt;br&gt;For those of you who don&#39;t know, ThoughtWorks is a global IT consultancy that is really well known in the software development community. It&#39;s been advocating agile methodologies and test-driven development for several years now and seems to work really hard to attract and keep &lt;a title=&#34;Martin Fowler&#34; href=&#34;http://www.martinfowler.com&#34; target=&#34;_blank&#34;&gt;many&lt;/a&gt; &lt;a title=&#34;Rebecca Parsons&#34; href=&#34;http://www.thoughtworks.com/who-we-are/leadership-profiles/rebecca-parsons.html&#34; target=&#34;_blank&#34;&gt;bright&lt;/a&gt; &lt;a title=&#34;Neal Ford&#34; href=&#34;http://www.nealford.com/&#34; target=&#34;_blank&#34;&gt;people&lt;/a&gt; &lt;a title=&#34;Ola Bini&#34; href=&#34;http://olabini.com/&#34; target=&#34;_blank&#34;&gt;working&lt;/a&gt; &lt;a title=&#34;All ThoughtWorkers&#34; href=&#34;http://www.thoughtworks.com/who-we-are/our-people/profiles.html&#34; target=&#34;_blank&#34;&gt;there&lt;/a&gt;.&lt;br&gt;&lt;br&gt;As a result, ThoughtWorks inspires companies and professionals around the world by delivering high quality projects and massively supporting/contributing to &lt;a title=&#34;Projects created/contributed to by ThoughtWorks&#34; href=&#34;http://opensource.thoughtworks.com&#34; target=&#34;_blank&#34;&gt;open source projects&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Needless to say, I am really excited to be joining a company with such an amazing culture and so many smart people.&lt;br&gt;&lt;br&gt;The hiring process was long, tough and tiring - but yet enjoyable. It took 5 interviews, 1 code review and 1 pairing session, a process through which I talked to 8 thoughtworkers. They take pride on their hiring process and now I understand why.&lt;br&gt;&lt;br&gt;Now I&#39;m just going through the bureaucratic side of things: gathering documents, certificates, translations - all in order to apply for my VISA, which can take up to 3 months to get ready. In the meantime, you can still find me here in Madrid, where I&#39;ll be celebrating with a few &#39;caÃ±as&#39;. Feel free to join me! ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>a few more thoughts on final classes</title>
      <link>http://leonardoborges.com/writings/2009/10/07/a-few-more-thoughts-on-final-classes/</link>
      <pubDate>Wed, 07 Oct 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/10/07/a-few-more-thoughts-on-final-classes/</guid>
      <description>&lt;p&gt;&#xA;I &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/03/17/final-classes-are-evil/&#34; target=&#34;_blank&#34;&gt;said final classes are evil&lt;/a&gt; and that post got some attention with interesting comments. Maybe because of the title and the tone I wrote it, a few comments didn&#39;t get my real intention and perhaps I should have been more explicit about it. Go ahead and &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/03/17/final-classes-are-evil/&#34; target=&#34;_blank&#34;&gt;read it&lt;/a&gt;. I&#39;ll wait. :)&lt;br&gt;&lt;br&gt;Anyway, I thought I&#39;d expand a little more on that subject, explaining my motivation to write that post and going through the topics I think were raised by my dear readers.&lt;br&gt;&lt;br&gt;First off, final classes &lt;strong&gt;are evil for testing&lt;/strong&gt;. And that&#39;s what it was all about in my previous post.&lt;br&gt;&lt;br&gt;If you depend on a final class, your code will be harder to test. Unless the final class provides an interface that captures its intent - or you wrap that dependency.&lt;br&gt;&lt;br&gt;But this affirmation has some implications that were pointed out by a few comments, some of which I agree with - others, not so much. So let&#39;s start!&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Immutability &lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&#34;background-color: #ffffff;&#34;&gt;Someone said &#34;Why make a class final ? To make it immutable&#34;. This is not entirely true. Only by marking it final you do not ensure immutability. There is no point in doing that if you provide mutators - e.g. setters. - and don&#39;t declare your members private and final.&lt;/span&gt;&lt;br&gt;&lt;br&gt;I think it&#39;s important to make this clear and understand that the immutability part you achieve by marking a class final is the one of preventing inheritance. Subclasses could possibly contain malicious/careless code and change the internal state of the class.&lt;br&gt;&lt;br&gt;&lt;span style=&#34;background-color: #ffffff;&#34;&gt;But there is another way of preventing subclassing without marking the parent final: declare its constructor private and provide a &lt;a href=&#34;http://www.javapractices.com/topic/TopicAction.do?Id=21&#34; target=&#34;_blank&#34;&gt;static factory&lt;/a&gt;.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Designing for extensibility&lt;/strong&gt;&lt;br&gt;&lt;br&gt;This is hard. It basically means that if you don&#39;t mark a class final, you should document it for inheritance.&lt;br&gt;&lt;br&gt;And this is why inheritance is, in general, a bad OO practice. By documenting the class you basically break encapsulation since you tell the world about your internals.&lt;br&gt;&lt;br&gt;Therefore, the recommendation is to mark a class final if you&#39;re not sure if it&#39;s safe to subclass it - or if you just don&#39;t wanna bother writing documentation and thinking too much about your &#34;client&#34; subclasses.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Coding against interfaces&lt;/strong&gt;&lt;br&gt;&lt;br&gt;This one is simple but yet often forgotten. Do not code to concrete classes. Always choose interfaces where possible.&lt;br&gt;It roughly means to do this:&lt;br&gt;&lt;pre lang=&#34;java&#34;&gt;  List args = new ArrayList();&lt;/pre&gt;&lt;br&gt;instead of this:&lt;br&gt;&lt;pre lang=&#34;java&#34;&gt;  ArrayList args = new ArrayList();&lt;/pre&gt;&lt;br&gt;By doing so you have the flexibility to not care about the implementation you&#39;re working with, as long as it obeys the interface. That way, the implementations can beÂ swappedÂ at any time without breaking any client&#39;s code.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- The problem with testing&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;/strong&gt;All items listed here so far are widely regarded as best practices and the bullet I raised about hard testing usually happens when you &#34;violate&#34; some of them.&lt;br&gt;&lt;br&gt;Specifically, if you decide not to design a class for inheritance and mark it as final, it&#39;s wise - in my opinion - to try and capture the class&#39;s intent through an interface.&lt;br&gt;&lt;br&gt;That way you can safely mark your class final and users of your class can easily use the interface to extend it - by favoring &lt;a href=&#34;http://www.artima.com/lejava/articles/designprinciples4.html&#34; target=&#34;_blank&#34;&gt;composition over inheritance&lt;/a&gt; - or by providing it to mocking frameworks for easy testing.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Conclusion&lt;/strong&gt;&lt;br&gt;&lt;br&gt;I don&#39;t really think there is a rule of thumb here. Java&#39;s standard library shows many examples of both approaches and some of them are now considered bad practices but yet are there for backward compatibility. Nevertheless, these are points to consider when designing your classes.&lt;br&gt;&lt;br&gt;As pointed out by Josua Bloch in his awesome book &lt;a href=&#34;http://www.shelfari.com/books/purchase?EditionId=1523265&amp;amp;AssociateId=leonaborge-20&amp;amp;WidgetId=111594&#34; target=&#34;_blank&#34;&gt;Effective Java&lt;/a&gt;, &#34;If a concrete class does not implement a standard interface, then you may inconvenience some programmers by prohibiting inheritance&#34;.&lt;br&gt;&lt;br&gt;As usual, comments are more than welcome :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>refactoring for readability</title>
      <link>http://leonardoborges.com/writings/2009/09/18/refactoring-for-readability/</link>
      <pubDate>Fri, 18 Sep 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/09/18/refactoring-for-readability/</guid>
      <description>&lt;p&gt;&#xA;Yesterday I&#39;ve done something I should do more often: Revisit some code written a while ago for our current project and make it better.&lt;br&gt;&lt;br&gt;Let&#39;s face it. We all write crappy code the 1st time. The difference is in what we do about it afterwards.&lt;br&gt;We might decide it&#39;s good enough and keep moving, or we could (and should!) stop and refactor it!&lt;br&gt;&lt;br&gt;The code I revisited worked as a refactoring exercise and it&#39;s initial version is shown below:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Jphoto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#a few other methods ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;post_photo&lt;/span&gt;(file_data, hotel_id, send_rss, options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   file_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Time&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_s(&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open(file_name, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;puts(file_data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;photo&amp;#39;&lt;/span&gt;,file_name),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hotel&amp;#39;&lt;/span&gt;, hotel_id),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;source&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PhotoUploadTest&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   extract_extra_params!(params, options)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Easy&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;service_uri_base&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/photoupld&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;multipart_form_post &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;http_post(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;params)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;response_code &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     error_msg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;File upload failed with code: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;response_code&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;Rails&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;logger&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info error_msg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;raise&lt;/span&gt; error_msg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;File&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delete(file_name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   hotel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Hotel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_by_id(hotel_id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   hotel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cache&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;destroy_all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   send_upload_rss(hotel, original_upload_url(c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body_str) , options) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; send_rss&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;send_upload_rss&lt;/span&gt;(hotel, photo_url, options)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;manage_images_link&lt;/span&gt;(hotel_id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;extract_extra_params!&lt;/span&gt;(params, options)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   params &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;, options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:status&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:status&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   params &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;upload_source&amp;#39;&lt;/span&gt;, options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:upload_source&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:upload_source&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   params &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uploader_ip&amp;#39;&lt;/span&gt;, options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:uploader_ip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:uploader_ip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   params &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;PostField&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uploader_email&amp;#39;&lt;/span&gt;, options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:uploader_email&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; options&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:uploader_email&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;Look at the post_photo method. It has problems in so many levels that it&amp;rsquo;s hard to start. &lt;br&gt;Methods should do &amp;ldquo;one thing&amp;rdquo; and that method obviously does much more than that, mixing different levels of abstraction.&lt;br&gt;&lt;br&gt;But let&amp;rsquo;s start with the easy parts first, keeping in mind that I was aiming for readability.&lt;br&gt;&lt;br&gt;Lines 7 to 10 seem to be there just to make the reader&amp;rsquo;s life harder. It&amp;rsquo;s creating a temporary file through some custom logic instead of using the tools provided by the language. Unnecessary and only pollutes our eyes. My first measure was to use ruby&amp;rsquo;s TempFile class for this. Better, but we still have a long way.&lt;br&gt;&lt;br&gt;Right at line 12 it creates some sort of default parameters list, after which it extracts some extra options. I don&amp;rsquo;t know what that method does but it&amp;rsquo;s clearly using output arguments, which we should avoid at all costs, as they lead to confusion. This is a big smell as well, and another refactoring step added to my list.&lt;br&gt;&lt;br&gt;On line 21 starts the code that handles what to do when we get a response_code other than 200 from our request. Apart from the fact that this code doesn&amp;rsquo;t feel right here, we just happen to know that in HTTP, 200 means success, but that might not be clear to someone looking at the code for the 1st time.&lt;br&gt;&lt;br&gt;Then the code goes on to delete the temp file, clear the hotel&amp;rsquo;s cache and send the rss if the rss&amp;rsquo; flag is true.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Let there be refactoring&amp;hellip;.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Geez, how many lines have I used to explain what the code does? Since I don&amp;rsquo;t wanna bore you to death, here is my refactored version of this method, trying to avoid as much as I can the problems I highlighted previously:&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails summit 2009 im speaking</title>
      <link>http://leonardoborges.com/writings/2009/09/03/rails-summit-2009-im-speaking/</link>
      <pubDate>Thu, 03 Sep 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/09/03/rails-summit-2009-im-speaking/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://www.railssummit.com.br?utm_campaign=Railssummit&amp;amp;utm_source=banner_parceiros&amp;amp;utm_medium=banner&amp;amp;utm_content=en_souPalestrante_210x60&#34;&gt;&lt;img src=&#34;http://railssummit.com.br/images/banners/en_souPalestrante_210x60.jpg&#34; alt=&#34;Rails Summit 2009&#34; /&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;I&#39;ll be speaking at this year&#39;s &lt;a href=&#34;http://railssummit.com.br/en/pages/home&#34; target=&#34;_blank&#34;&gt;Rails Summit Latin America&lt;/a&gt; in Sao Paulo, Brazil. It will be a good opportunity to meet some &lt;a href=&#34;http://railssummit.com.br/en/speakers&#34;&gt;amazing people&lt;/a&gt; and visit friends back home! :)&lt;br&gt;&lt;br&gt;Overall I&#39;ll be spending 12 days in Brazil, with 2 of them dedicated to the conference. The other 10 I&#39;ll be in Rio de Janeiro visiting my family and friends. I strongly advise you to spend some time in Rio too, if at all possible. It&#39;s an amazing city and you can contact me if you have any questions.&lt;br&gt;&lt;br&gt;Back to the conference, my session is called &lt;strong&gt;JRuby in the enterprise world: Using Rails with legacy code&lt;/strong&gt;, and will be given in the form of a tutorial. I will walk you through some problems we had while making this kind of integration at my company, focusing mostly on dependency management.&lt;br&gt;&lt;br&gt;At the end I hope you&#39;ll have a good understanding of what JRuby is capable of in a legacy environment.&lt;br&gt;&lt;br&gt;If you&#39;re planning to attend and would like to hear anything specific about JRuby, please let me know, I can try and squeeze in.&lt;br&gt;&lt;br&gt;C u there!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails rumble 09</title>
      <link>http://leonardoborges.com/writings/2009/08/25/rails-rumble-09/</link>
      <pubDate>Tue, 25 Aug 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/08/25/rails-rumble-09/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;Update:&lt;/strong&gt; The service is now down while we move it from the VPS provided by Rails Rumble to our own. I&#39;ll let you know once it&#39;s up.&lt;br&gt;&lt;br&gt;Last weekend &lt;a href=&#34;http://www.ivercore.com/&#34; target=&#34;_blank&#34;&gt;Philip&lt;/a&gt;, &lt;a href=&#34;http://www.pedropimentel.com/&#34; target=&#34;_blank&#34;&gt;Pedro&lt;/a&gt; and myself got together for this year&#39;s &lt;a href=&#34;http://railsrumble.com/&#34; target=&#34;_blank&#34;&gt;Rails Rumble&lt;/a&gt;.&lt;br&gt;&lt;br&gt;We haven&#39;t had really decided what to do until a few days before the competition, but I had this really simple idea and decided to go with it. Seems people liked it, given a few positive comments we received.&lt;br&gt;&lt;br&gt;So, after 48 hours - which were not used to work full-time in the application - &lt;a href=&#34;http://birdwatcher.r09.railsrumble.com/&#34;&gt;The Bird Watcher&lt;/a&gt; was born.&lt;br&gt;&lt;br&gt;&lt;a href=&#34;http://birdwatcher.r09.railsrumble.com/&#34;&gt;The Bird Watcher&lt;/a&gt; is a simple way to show the world what&#39;s going on on Twitter for any topic you define.Â  Go ahead and take a look at the website to see a live example.&lt;br&gt;&lt;br&gt;We&#39;re planning to keep the service up after the competition is over and we have some nice features lined up to go live on the next release.&lt;br&gt;&lt;br&gt;In short, it was an interesting weekend and showed me that this team works really well together.&lt;br&gt;&lt;br&gt;Cheers&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jvm language preferences poll results</title>
      <link>http://leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/</link>
      <pubDate>Fri, 31 Jul 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/07/31/jvm-language-preferences-poll-results/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;- Overall results&lt;/strong&gt;&lt;br&gt;&lt;br&gt;First off, I&#39;d like to thank everyone who voted on this poll.&lt;br&gt;With a total of 236 votes, here is the summary of the first two questions:&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Are you currently working with or researching about language alternatives for the JVM? - e.g. JRuby, Scala, Groovy&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&#39;http://leonardoborges.com/assets/images/scala_improvements.png&#39;&gt;{% img /assets/images/scala_improvements.png %}&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;br&gt;Tooling. The majority of comment urge for better tooling and IDE support. That simple.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Others&lt;/strong&gt;&lt;br&gt;&lt;br&gt;People who chose others mentioned &lt;a href=&#34;http://clojure.org/&#34; target=&#34;_blank&#34;&gt;Clojure&lt;/a&gt;, &lt;a href=&#34;http://www.fandev.org/&#34; target=&#34;_blank&#34;&gt;Fan&lt;/a&gt; and &lt;a href=&#34;http://www.jython.org/&#34;&gt;Jython&lt;/a&gt;, with a clear advantage for Clojure.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Disclaimer&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;This poll has no scientific foundations whatsoever and its sole purpose is to summarize the feelings and personal choices of the people who answered it. If you would like the original spreadsheet with the answers, you can find it &lt;a href=&#34;http://spreadsheets.google.com/ccc?key=0AuABB6DyTXV2dHEtZnNwSDhCb2RVOThFcUNaSUhpbEE&amp;amp;hl=en&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and do your own analyzis.&lt;br&gt;&lt;/strong&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>procs lambdas blocks whats the difference</title>
      <link>http://leonardoborges.com/writings/2009/07/22/procs-lambdas-blocks-whats-the-difference/</link>
      <pubDate>Wed, 22 Jul 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/07/22/procs-lambdas-blocks-whats-the-difference/</guid>
      <description>&lt;p&gt;&#xA;Do you know? &lt;br&gt;I didn&#39;t. And started to get annoyed by using these terms interchangeably and not really knowing the difference.&lt;br&gt;&lt;br&gt;There are a few. And they are subtle. I don&#39;t think most of us would ever have problems with it but it&#39;s the kind of information you&#39;ll be glad to know when having those weird behaviors in your code on a Friday at 6:01 pm, just before pushing to production. :)&lt;br&gt;&lt;br&gt;I guess blocks are the most widely used term in the ruby community and there is little mistake on when to use it:&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;[1,2,3].each do |x|&lt;br&gt;  puts x*2&lt;br&gt;end&lt;/pre&gt;&lt;br&gt;The code between &lt;strong&gt;do&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt; is a &lt;strong&gt;&lt;em&gt;block&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;What&#39;s important to keep in mind is that Procs behave like blocks whereas lambdas behave like methods. To understand what that means, I highlighted a couple of examples:&lt;br&gt;&lt;br&gt;&lt;strong&gt;- The return keyword&lt;/strong&gt;&lt;br&gt;&lt;br&gt;I mentioned Procs behave just like blocks and as such, the return keyword abide to the same rules. This means, for instance, that the latest puts statement on the following code snippet, will never run:&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;def my_proc(x)&lt;br&gt;  p = Proc.new { puts x*2; return }&lt;br&gt;  p.call&lt;br&gt;  puts &#34;After calling proc&#34; #This never gets called&lt;br&gt;end&lt;br&gt;my_proc(10)&lt;br&gt;&gt;&gt;20&lt;/pre&gt;&lt;br&gt;For blocks - and procs-, return means &#34;return from the calling method&#34;, my_proc in this case. That&#39;s why you don&#39;t get to see the output of the puts statement.&lt;br&gt;&lt;br&gt;On the other hand, in the lambda&#39;s example, we get the opposite behavior:&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;def my_lambda(x)&lt;br&gt;  p = lambda { puts x*2; return }&lt;br&gt;  p.call&lt;br&gt;  puts &#34;After calling proc&#34; #This time, we reach this point&lt;br&gt;end&lt;br&gt;my_lambda(10)&lt;br&gt;&gt;&gt;20&lt;br&gt;&gt;&gt;After calling proc&lt;/pre&gt;&lt;br&gt;Here, return says &#34;return from the enclosing iterator&#34;, which, in this case, just returns from the block and continnues the execution of the my_lambda method.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- Argument assignment&lt;/strong&gt;&lt;br&gt;&lt;br&gt;On to this second difference, procs and lambdas get more interesting when you can call them with arguments. And that&#39;s when another subtle difference between them comes in.&lt;br&gt;&lt;br&gt;I&#39;ll start again with a proc:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;&lt;br&gt;  p = Proc.new { |x,y| puts x, y}&lt;br&gt;  p.call&lt;br&gt;  &gt;&gt;nil&lt;br&gt;  &gt;&gt;nil &lt;br&gt;&lt;br&gt;  p.call(1)&lt;br&gt;  &gt;&gt;1&lt;br&gt;  &gt;&gt;nil&lt;br&gt;&lt;br&gt;  p.call(1,2)&lt;br&gt;  &gt;&gt;1&lt;br&gt;  &gt;&gt;2&lt;br&gt;&lt;br&gt;  p.call(1,2,3)&lt;br&gt;  &gt;&gt;1&lt;br&gt;  &gt;&gt;2&lt;br&gt;&lt;br&gt;  p.call([1,2])&lt;br&gt;  &gt;&gt;1&lt;br&gt;  &gt;&gt;2&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;See how procs are flexible? They basically won&#39;t complain if you do not provide parameters, provide extra parameters or even send an array as an argument where, as seen in the code above, it unpacks the array and assign its values to the correct variables.&lt;br&gt;&lt;br&gt;As you&#39;re probably guessing, lambdas behave like methods and are much less flexible:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;&lt;br&gt;  l = lambda { |x,y| puts x, y}&lt;br&gt;  l.call&lt;br&gt;  &gt;&gt;ArgumentError: wrong number of arguments (0 for 2)&lt;br&gt;&lt;br&gt;  l.call(1)&lt;br&gt;  &gt;&gt;ArgumentError: wrong number of arguments (1 for 2)&lt;br&gt;&lt;br&gt;  l.call(1,2)&lt;br&gt;  &gt;&gt;1&lt;br&gt;  &gt;&gt;2&lt;br&gt;&lt;br&gt;  l.call(1,2,3)&lt;br&gt;  &gt;&gt;ArgumentError: wrong number of arguments (3 for 2)&lt;br&gt;&lt;br&gt;  l.call([1,2])&lt;br&gt;  &gt;&gt;ArgumentError: wrong number of arguments (1 for 2)&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p/&gt;&lt;p/&gt;&lt;br&gt;&lt;strong&gt;Ruby 1.9 tip&lt;/strong&gt;&lt;br&gt;Despite its name, Kernel.proc returns a lambda in Ruby 1.8. This has been fixed in Ruby 1.9. You actually get a Proc back.&lt;br&gt;&lt;br&gt;- Reference&lt;br&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/0596516177?ie=UTF8&amp;tag=leonaborge-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596516177&#34;&gt;The Ruby Programming Language&lt;/a&gt;&lt;img src=&#34;http://www.assoc-amazon.com/e/ir?t=leonaborge-20&amp;l=as2&amp;o=1&amp;a=0596516177&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt; - A must have for any Ruby developer.&lt;br&gt; &lt;br&gt;&lt;script type=&#34;text/javascript&#34; src=&#34;http://www.assoc-amazon.com/s/link-enhancer?tag=leonaborge-20&amp;o=1&#34;&gt;&lt;br&gt;&lt;/script&gt;&lt;br&gt;&lt;noscript&gt;&lt;br&gt;    &lt;img src=&#34;http://www.assoc-amazon.com/s/noscript?tag=leonaborge-20&#34; alt=&#34;&#34; /&gt;&lt;br&gt;&lt;/noscript&gt;&lt;br&gt;&lt;br&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jruby on rails and legacy java apps managing dependencies</title>
      <link>http://leonardoborges.com/writings/2009/07/01/jruby-on-rails-and-legacy-java-apps-managing-dependencies/</link>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/07/01/jruby-on-rails-and-legacy-java-apps-managing-dependencies/</guid>
      <description>&lt;p&gt;&#xA;The motivation for this post came from a couple of messages I&#39;ve seen on the jruby&#39;s google group and because I think it&#39;s pretty cool to share how we tackled this problem.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- A little bit of context&lt;/strong&gt;&lt;br&gt;&lt;br&gt;We, as a vast amount of people out there, have legacy Java code. A lot. In our case this legacy is pretty much crucial to our business. We can&#39;t just trash it and start from scratch. Bad idea.&lt;br&gt;&lt;br&gt;On the other hand we do have new features to be built on top of it. But we wanted an easier way to develop this new stuff and decided for a JRuby on Rails solution, using it as a front-end to our existing services.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- What we decided to do&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Our final rails project would make use of a specially created jar file containing our Java application. This Jar would also contain a public interface of the services we&#39;d have to interact with from rails.&lt;br&gt;&lt;br&gt;As any Java application, ours depend on a number of external jar files that correspond to the various framewoks we usually have in place. e.g.: Hibernate, Spring, apache-commons ...&lt;br&gt;&lt;br&gt;Which means we need to make our app&#39;s jar and all it&#39;s dependencies available in the JRuby classpath in order to use it.&lt;br&gt;&lt;br&gt;Given we&#39;re using warbler to package our application as a war file, we just need to place all jars needed into our rails app&#39;s lib folder. Warbler then takes care of copying any jar files located in there into the war.&lt;br&gt;&lt;br&gt;&lt;strong&gt;- The problem&lt;/strong&gt;&lt;br&gt;&lt;br&gt;So we needed a smart way to include all these dependencies into the project, and copy/paste isn&#39;t an option.&lt;br&gt;&lt;br&gt;In the Java world we use &lt;a href=&#34;http://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; to manage our projects dependencies - and you should too. Because of that our approach involved turning our rails application into a Maven aware project.&lt;br&gt;&lt;br&gt;Basically we needed a &lt;a href=&#34;http://maven.apache.org/pom.html&#34;&gt;pom file&lt;/a&gt; that would declaratively list our java project as a dependency. From there on, Maven knows what the dependencies are and downloads them to your local repository.&lt;br&gt;&lt;br&gt;Which leaves us with one more task. We need to put all these dependencies into our lib folder after maven has downloaded them.&lt;br&gt;&lt;br&gt;Below you&#39;ll find the pom.xml file that we use to achieve this with inline comments explaining each bit:&lt;br&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.company&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- notice how we specify the packaging to be a war,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;          that way, maven knows where to copy the jar files --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;war&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;railsApp&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;railsApp&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.company&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;java-legacy-app&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;compile&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;railsApp&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.codehaus.mojo&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;exec-maven-plugin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- This tasks only creates a basic structure expected by maven,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                    so it can do its work --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;create-mock-web-descriptor&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;compile&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;/bin/sh&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;workingDirectory&amp;gt;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/workingDirectory&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;-c&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    mkdir -p src/main/webapp/WEB-INF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    touch    src/main/webapp/WEB-INF/web.xml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Now in the package phase we copy the jar files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                    that maven put into the fake web app to our rails&amp;#39; lib folder --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;copy-needed-jars-into-lib&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;/bin/sh&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;workingDirectory&amp;gt;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/workingDirectory&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;-c&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    rm -f lib/*.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    cp target/railsApp/WEB-INF/lib/*.jar lib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    rm -rf target/railsApp*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    rm -rf src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Here we optionally create the final war file containing our rails app using warbler,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                     doing a small cleanup of the files and folders maven created  --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;create-final-war&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;executable&amp;gt;&lt;/span&gt;/bin/sh&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;workingDirectory&amp;gt;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/workingDirectory&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;-c&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   rm -rf *.war tmp/war&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   jruby -S warble &amp;amp;amp;&amp;amp;amp; \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   mv *.war target/railsApp.war&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;exec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;Now from the command line we can just run &lt;em&gt;mvn package&lt;/em&gt; and we&amp;rsquo;re good to go.&lt;br&gt;&lt;br&gt;Maven will start to package the application as a war file. Since it&amp;rsquo;s not a Java application we create the empty web.xml file in the compile phase, to fool maven. &lt;br&gt;&lt;br&gt;&lt;br&gt;After it has copied all the dependencies into WEB-INF/lib the next packaging goals will make sure we copy them to our rails&amp;rsquo; lib folder, also creating the final war file, ready for deployment.&lt;br&gt;&lt;br&gt;&lt;br&gt;Note that once done, you can use a simple code snippet similar to this one as an initializer and load all dependencies:&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;&lt;br&gt;Dir.entries(&amp;quot;#{RAILS_ROOT}/lib&amp;quot;).sort.each do |entry|&lt;br&gt;  if entry =~ /.jar$/&lt;br&gt;    require entry&lt;br&gt;  end&lt;br&gt;end&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Then we can just use script/console, script/server and so on, as we normally would.&lt;br&gt;&lt;br&gt;Sorry for the long post, I tried to pack in as much as I could and I certainly hope it&amp;rsquo;s useful to someone. Any doubts, comments and etc&amp;hellip; just drop me a line. :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>google io thoughtworks on gae</title>
      <link>http://leonardoborges.com/writings/2009/06/22/google-io-thoughtworks-on-gae/</link>
      <pubDate>Mon, 22 Jun 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/06/22/google-io-thoughtworks-on-gae/</guid>
      <description>&lt;p&gt;&#xA;I&#39;ve just watched a &lt;a href=&#34;http://www.youtube.com/watch?v=-4fA_UciDaA&#34;&gt;video&lt;/a&gt; from &lt;a href=&#34;http://code.google.com/events/io/&#34;&gt;Google IO&lt;/a&gt; where &lt;a href=&#34;http://code.google.com/events/io/&#34;&gt;Martin Fowler&lt;/a&gt; and Rebecca Parsons went through some of the aspects that involves the development of an application for the cloud - focusing on the JVM.&lt;br&gt;&lt;br&gt;In terms of the Google App Engine, you don&#39;t have access to a relational database, thing I found out &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/&#34;&gt;when I first tried it&lt;/a&gt;.Â  Instead you get a &lt;a href=&#34;http://labs.google.com/papers/bigtable.html&#34;&gt;Big Table&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Martin put out a good analogy and you can just think of it as a nested hash map. It&#39;s certainly a shift on how we think these days, but layers of abstraction like google&#39;s DataStore and the Java Persistence API will help in the transition.&lt;br&gt;&lt;br&gt;Another interesting bit about the presentation was on how concurrency works on GAE.&lt;br&gt;&lt;br&gt;Essentially, in an standard Java application you have a single memory space where you have at least one running thread. You can create threads on the fly, which will share the same memory space, thus making it easy to share data.&lt;br&gt;&lt;br&gt;On the app engine, things work differently. What you have are separate memory spaces with a single thread on each one. Any attempt to create a new thread will result in an exception. The solution for sharing information in this case? Use the nested hash map (big table).&lt;br&gt;&lt;br&gt;Now, whereas you might not be worried about this since your application doesn&#39;t span any threads, as well pointed by Martin Fowler, it&#39;s the code you don&#39;t see that you need to be careful with. Any Java application uses a number of 3rd party libraries that might span out threads of their own, which will result in your application blowing up.&lt;br&gt;&lt;br&gt;That rang a bell. Again, back when &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/&#34;&gt;I was trying the app engine&lt;/a&gt;, one of the configuration bits shared by &lt;a href=&#34;http://olabini.com/blog/2009/04/jruby-on-rails-on-google-app-engine/&#34;&gt;Ola Bini&lt;/a&gt; looked like this:&lt;br&gt;&lt;pre&gt;   config.webxml.jruby.min.runtimes = 1&lt;br&gt;   config.webxml.jruby.max.runtimes = 1&lt;br&gt;   config.webxml.jruby.init.serial = true&lt;/pre&gt;&lt;br&gt;&lt;br&gt;I think the properties are pretty much self-explanatory but I didn&#39;t quite understand the reason for setting it back then.&lt;br&gt;&lt;br&gt;If you happen to have bigger values for the number of runtimes you want, you need to set the serial property to true, otherwise JRuby will span several threads to create the runtimes.&lt;br&gt;&lt;br&gt;This is a really good example of things that might fail whether you&#39;re migrating or developing a new app to deploy on the App Engine. Luckily for us, JRuby has a smart and neat way to handle this - the configuration I&#39;ve just shown, but most of the libraries out there that might rely on threads are not prepared.&lt;br&gt;&lt;br&gt;Martin and Rebecca&#39;s opinion on this is that new releases of these same libraries will start to take it into account, since a bigger adoption of the Cloud seem to be on the way.&lt;br&gt;&lt;br&gt;Make sure you watch the video. I certainly left a lot of interesting stuff out.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>helping the jruby effort debugging the source</title>
      <link>http://leonardoborges.com/writings/2009/06/14/helping-the-jruby-effort-debugging-the-source/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/06/14/helping-the-jruby-effort-debugging-the-source/</guid>
      <description>&lt;p&gt;Wanna help improve JRuby? Make sure you read &lt;a href=&#34;http://blog.headius.com/2009/05/help-jruby-by-fixing-rubyspecs.html&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt; post by Charles Nutter first. There he explains how to run Ruby specs with JRuby.&lt;/p&gt;&#xA;&lt;p&gt;Start with fixing Ruby specs is a great way to get acquainted with the code. And it&amp;rsquo;s also a important task in order to make sure JRuby is the most complete and compatible ruby implementation out there.&lt;/p&gt;&#xA;&lt;p&gt;But before you get your hands dirty, it will be a lot easier if you can actually debug JRuby&amp;rsquo;s source while fixing any specs - or bugs/features for that matter.&lt;/p&gt;</description>
    </item>
    <item>
      <title>how do you keep yourself focused</title>
      <link>http://leonardoborges.com/writings/2009/06/08/how-do-you-keep-yourself-focused/</link>
      <pubDate>Mon, 08 Jun 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/06/08/how-do-you-keep-yourself-focused/</guid>
      <description>&lt;p&gt;&#xA;This is basically a compilation of a few tools/habits that I use to keep focused and at a high level of productivity when working alone. Works great for me and I hope there are useful tips for you as well.&lt;br&gt;&lt;br&gt;&lt;dl&gt; &lt;dt&gt;&lt;strong&gt;Music&lt;/strong&gt;&lt;/dt&gt; &lt;dd&gt;This is one of my favorites. When working alone I hate having noisy people around, which happens quite often if you work in an open office space like me. - It is great for pair programming but I find it inefficient otherwise. Thus, I came up with the term &lt;strong&gt;the Heavy Metal effect&lt;/strong&gt;. Ok, just fit your favorite music genre there but the important thing is that it must act as a barrier to the outside world. It won&#39;t work if you put something new and start babbling the lyrics!&lt;/dd&gt; &lt;dt&gt;&lt;strong&gt;Password Manager&lt;/strong&gt;&lt;/dt&gt; &lt;dd&gt;In my day to day I have a number of web sites open like API documents, programming related groups, email... There are also the ones you open a few times a day like the company bug tracker, review board and etc. I find that having a password manager, in my case &lt;a href=&#34;https://lastpass.com/&#34; target=&#34;_blank&#34;&gt;LastPass&lt;/a&gt;, saves a lot of time. The big advantage of it over similar tools like 1Password is that it works on mac, linux or windows. It&#39;s just a firefox plugin.&lt;/dd&gt; &lt;dt&gt;&lt;strong&gt;Multiple Workspaces&lt;/strong&gt;&lt;/dt&gt; &lt;dd&gt;Probably the most obvious item on this list to developers but I&#39;s never too much to reinforce it. Multiple workspaces are great. And they are available in whatever platform you happen to be locked in. In my case, I split my environment in at least 3 workspaces:&lt;br&gt;-&lt;strong&gt;Development&lt;/strong&gt; - where I keep things like my IDE, Browser and Terminal&lt;br&gt;-&lt;strong&gt;Documentation&lt;/strong&gt; - where I keep API documents, tutorials and related stuff&lt;br&gt;-&lt;strong&gt;Communication&lt;/strong&gt; - where I have my email, both personal and business, twitter and etc. This allows me to easily set a time per day to do each of my stuff without having noise from things that aren&#39;t important to what I&#39;m focusing in that very moment. &lt;/dd&gt; &lt;dt&gt;&lt;strong&gt;App Launcher&lt;/strong&gt;&lt;/dt&gt; &lt;dd&gt;A must! On Mac I use &lt;a href=&#34;http://www.versiontracker.com/dyn/moreinfo/macosx/22549&#34; target=&#34;_blank&#34;&gt;QuickSilver&lt;/a&gt; and on Linux, &lt;a href=&#34;http://do.davebsd.com/release.shtml&#34; target=&#34;_blank&#34;&gt;Gnome Do&lt;/a&gt;. I won&#39;t say much here. If you don&#39;t use some sort of application launcher, do yourself a favor, stop reading and install one. You have no idea of how comfortable and time saver they are.&lt;/dd&gt; &lt;dt&gt;&lt;strong&gt;Batch tasks&lt;/strong&gt;&lt;/dt&gt; &lt;dd&gt;Maybe this wasn&#39;t the best title but I couldn&#39;t think of anything better.&lt;br&gt;As a result of having a communication workspace that I use a few times a day, I find stuff that I&#39;m interested in but don&#39;t have the time to dig at the moment. So I need a way to queue that and read later when I&#39;m home. The tools of the trade in this case are &lt;a href=&#34;http://www.twitter.com&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; + &lt;a href=&#34;http://blog.evernote.com/2009/04/14/evernote_twitter/&#34; target=&#34;_blank&#34;&gt;Evernote&lt;/a&gt;.&lt;br&gt;Evernote is roughly a to-do manager. And since they released their Twitter integration it&#39;s been dead easy to queue those things I talked about earlier. Just send a direct message to evernote and the item gets added instantly. &lt;/dd&gt; &lt;/dl&gt;Now, what about you? What works for you?&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>coding dojo 1 the fun begins</title>
      <link>http://leonardoborges.com/writings/2009/06/06/coding-dojo-1-the-fun-begins/</link>
      <pubDate>Sat, 06 Jun 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/06/06/coding-dojo-1-the-fun-begins/</guid>
      <description>&lt;p&gt;&#xA;Yesterday I organized our first &lt;a href=&#34;http://codingdojo.org&#34; target=&#34;_blank&#34;&gt;CodingDojo&lt;/a&gt; here at the company and I&#39;m glad to say it was a great success!&lt;br&gt;The problem chosen was the &lt;a href=&#34;http://codekata.pragprog.com/2007/01/kata_two_karate.html&#34; target=&#34;_blank&#34;&gt;Karate Chop&lt;/a&gt;, from Dave Thomas&#39; &lt;a href=&#34;http://codekata.pragprog.com/&#34; target=&#34;_blank&#34;&gt;Code Kata&lt;/a&gt;.&lt;br&gt;&lt;br&gt;As it was also my first time organizing a Dojo, we took some time to get things straight, explain everyone the rules and start coding. Nothing that would compromise the experience, though.&lt;br&gt;&lt;br&gt;The rules were basically the ones of a &lt;a href=&#34;http://codingdojo.org/cgi-bin/wiki.pl?back=RandoriKata&#34; target=&#34;_blank&#34;&gt;RandoriKata&lt;/a&gt; and as a mechanism for switching pairs we chose the &lt;a href=&#34;http://codingdojo.org/cgi-bin/wiki.pl?back=TimeBox&#34; target=&#34;_blank&#34;&gt;TimeBox&lt;/a&gt; with a limit of 5 minutes.&lt;br&gt;&lt;br&gt;We came up with 3 different solutions in about 1h 30min. The 1st one looking like crap! :)&lt;br&gt;&lt;br&gt;Which was actually interesting because the general feeling before we started was that it would be boring, or too easy since &#34;everyone&#34; knows what a binary chop/search is.&lt;br&gt;Wrong!!! It all changes when you have a time limit and a bunch of people behind you doing funny noises! It&#39;s a pressure different from your day to day job. A healthy one in my opinion.&lt;br&gt;&lt;br&gt;Hearing the feedback afterwards was rewarding. Everyone seemed to have had a lot of fun and can&#39;t wait for the next one.&lt;br&gt;&lt;br&gt;I guess the most important lesson we got from it was to be quiet and not bother the current pair when we do not agree with their idea - not even if we do. This one is very important as it both shows respect and allows you to learn from how your colleagues think.&lt;br&gt;&lt;br&gt;Next thursday we&#39;ll keep going with this one and hopefully finish and pick up the next problem! :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>railswaycon jruby internals by ola bini</title>
      <link>http://leonardoborges.com/writings/2009/05/29/railswaycon-jruby-internals-by-ola-bini/</link>
      <pubDate>Fri, 29 May 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/05/29/railswaycon-jruby-internals-by-ola-bini/</guid>
      <description>&lt;p&gt;&#xA;As always I expected a good talk from Ola and once more he delivered it. But this one was different. It might have been even boring to some ruby developers since we saw a fair amount of java code in this presentation. Ola gave us a tour through the main classes that make JRuby possible with a single purpose: so we can check out the code and hack ourselves. You can download his slides &lt;a href=&#34;http://olabini.com/presentations/JRubyInternals.pdf&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;If you&#39;ve been following both JRuby and Ola Bini for the past year or so, you&#39;ve noticed the trend and evolution of this alternative - and so far the most complete one - implementation of the ruby language. Specially at conferences.&lt;br&gt;&lt;br&gt;Last year at QCon London, Ola was also talking about JRuby. At Euruko &#39;08, in Prague, &lt;a href=&#34;http://blog.headius.com/&#34; target=&#34;_blank&#34;&gt;Charles Nutter&lt;/a&gt; also talked about it. RailsConf in Berlin also had its share. What all these talks had in common is that they talked about JRuby from a user/developer point of view. They were selling the solution. Convincing people to use it and presenting successful use cases.&lt;br&gt;&lt;br&gt;And as the trend goes on, JRuby is now faced as a true alternative - one that we, btw, believe here at the company as we&#39;re &lt;strong&gt;actively using it&lt;/strong&gt; - and it seems that now the call is for help. Help to make JRuby an even more complete and overall better ruby implementation. Charles&#39; &lt;a href=&#34;http://blog.headius.com/2009/05/help-jruby-by-fixing-rubyspecs.html&#34;&gt;call for help&lt;/a&gt; was a great step. As he states, it&#39;s a good way to get your feet wet. I answered the call and am hacking JRuby myself, having already submitted a couple of patches. Perhaps this was the reason for which I enjoyed the talk the  most. I was already familiar with some of the structure and classes in JRuby.&lt;br&gt;&lt;br&gt;There were 2 more talks about JRuby: &lt;strong&gt;The Pleasure and Pain of Migrating to jRuby&lt;/strong&gt;, by &lt;a href=&#34;http://twitter.com/stevenbristol&#34; target=&#34;_blank&#34;&gt;Steven Bristol&lt;/a&gt; and &lt;strong&gt;Integrating Enterprise Java with JRuby and Rails&lt;/strong&gt;, &lt;a href=&#34;http://twitter.com/malagant&#34; target=&#34;_blank&#34;&gt;Michael Johann&lt;/a&gt;. Unfortunately only the first one was a real case experience, where Steven walked through the problems he faced integrating JRuby with an existing java project. Interesting insights.&lt;br&gt;&lt;br&gt;Michael Johann basically presented a short tutorial on how to integrate rails with EJB3 which, albeit interesting, failed to address issues faced on real life projects, like dependency management. Issues which we have already addressed in a very cool way here and I plan to share it soon. Still deciding how though...&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails readable test names run individual tests from the console</title>
      <link>http://leonardoborges.com/writings/2009/05/16/rails-readable-test-names-run-individual-tests-from-the-console/</link>
      <pubDate>Sat, 16 May 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/05/16/rails-readable-test-names-run-individual-tests-from-the-console/</guid>
      <description>&lt;p&gt;&#xA;As you probably know, since rails 2.1 you can write test methods in the following format:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;ruby&#34;&gt;&lt;br&gt;test &#34;hotel should return its permalink&#34; do&lt;br&gt;  #your test code here&lt;br&gt;end&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Which is great, as the test name becomes much more clear. But you can&#39;t simply run this test easily from the command line. You&#39;d have to run something like:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ ruby your_test_file.rb -n test_hotel_should_return_its_permalink&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;It annoys me. And it&#39;s not practical either to make the test fail just so you can get the test&#39;s real name.&lt;br&gt;I wanted to be able to just copy and paste the readable name in the console and have Test::Unit do the conversion and run it for me, like this:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ ruby your_test_file.rb -n &#34;hotel should return its permalink&#34;&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;So I created &lt;a href=&#34;http://github.com/leonardoborges/readable_test_names_runner/tree/master&#34; target=&#34;_blank&#34;&gt;readable_test_names_runner&lt;/a&gt;. It&#39;s a tiny rails plugin that adds this feature for you.&lt;br&gt;&lt;br&gt;Enjoy.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rcov jruby and rcov_plugin</title>
      <link>http://leonardoborges.com/writings/2009/05/05/rcov-jruby-and-rcov_plugin/</link>
      <pubDate>Tue, 05 May 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/05/05/rcov-jruby-and-rcov_plugin/</guid>
      <description>&lt;p&gt;&#xA;The &lt;a href=&#34;http://github.com/commondream/rcov_plugin/tree/master&#34; target=&#34;_blank&#34;&gt;rcov_plugin&lt;/a&gt; project is a rails plugin for &lt;a href=&#34;http://eigenclass.org/hiki.rb?rcov&#34; target=&#34;_blank&#34;&gt;rcov&lt;/a&gt; that adds some useful rake tasks to your application.Â  And since I&#39;m currently working in a JRuby project it made sense to use this plugin.&lt;br&gt;&lt;br&gt;The thing is, among other stuff, an rcov report from a JRuby project includes some files that shouldn&#39;t be there at all, plus you also need to change the way you call rcov as such. Thus, I thought I&#39;d contribute these changes to the plugin and my pull request was approved this morning - just install the latest version and you should be good to go.&lt;br&gt;&lt;br&gt;It was useful for us here, hope it might be useful for you too.&lt;br&gt;&lt;br&gt;Enjoy :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>git cheat shee</title>
      <link>http://leonardoborges.com/writings/2009/04/22/git-cheat-shee/</link>
      <pubDate>Wed, 22 Apr 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/04/22/git-cheat-shee/</guid>
      <description>&lt;p&gt;&#xA;For those who don&#39;t know &lt;a href=&#34;http://git-scm.com/&#34; target=&#34;_blank&#34;&gt;Git&lt;/a&gt; is a version control system developed  by &lt;a href=&#34;http://en.wikipedia.org/wiki/Linus_Torvalds&#34; target=&#34;_blank&#34;&gt;Linus Torvalds&lt;/a&gt;. It&#39;s main difference from other tools like SVN and CVS is the fact that it&#39;s distributed.&lt;br&gt;&lt;br&gt;Recently I gave a workshop about Git here at the company where I walked through the most common cases I usually see when working in a team and thought about posting a summary of the commands used in the workshop.&lt;br&gt;&lt;br&gt;It turns out that just this morning I found &lt;a href=&#34;http://ktown.kde.org/~zrusin/git/git-cheat-sheet-medium.png&#34;&gt;this - a.k.a the rest of my post&lt;/a&gt;. It&#39;s a really nice and concise Git Cheat Sheet that covers most of what I talked aboutÂ  in the workshop. So I highly recommend you bookmark it. It will certainly be useful.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jruby on rails and google app engine</title>
      <link>http://leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/</link>
      <pubDate>Fri, 10 Apr 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/04/10/jruby-on-rails-and-google-app-engine/</guid>
      <description>&lt;p&gt;&#xA;As many of you know the new language supported at &lt;a href=&#34;http://code.google.com/appengine/&#34; target=&#34;_blank&#34;&gt;GAE&lt;/a&gt; now is Java, as officially announced on their &lt;a href=&#34;http://googleappengine.blogspot.com/2009/04/seriously-this-time-new-language-on-app.html&#34; target=&#34;_blank&#34;&gt;blog&lt;/a&gt;. As a Ruby/Rails developer you might not be interested on it but here is a reason you should be: &lt;a href=&#34;http://jruby.codehaus.org/&#34; target=&#34;_blank&#34;&gt;JRuby&lt;/a&gt;.&lt;br&gt;&lt;br&gt;It was only a matter of time until we saw some people deploying JRuby on Rails apps on GAE, like Ola Bini&#39;s &lt;a href=&#34;http://olabini.com/blog/2009/04/jruby-on-rails-on-google-app-engine/&#34; target=&#34;_blank&#34;&gt;mini blog app&lt;/a&gt;. Guess that was the first one really, as he was beta testing the service in secret. Google App Engine imposes a few catches to any java application deployed there and any JRuby app wouldn&#39;t be different. For instance, your Java API access is limited to &lt;a href=&#34;http://code.google.com/appengine/docs/java/jrewhitelist.html&#34; target=&#34;_blank&#34;&gt;these classes - called JRE Class whitelist&lt;/a&gt;.&lt;br&gt;&lt;br&gt;As you can see on his blog, you don&#39;t need active record and in fact shouldn&#39;t even be loading that on your app.&lt;br&gt;&lt;br&gt;I felt compelled to try it and the timing was perfect. I am currently developing a JRuby on Rails app at the company I work for and it was a perfect fit, since we are not using ActiveRecord. The reason is that we get the data we need from other sources, such as web services and even text files.&lt;br&gt;&lt;br&gt;Ola Bini&#39;s tips were crucial here. He provides a small script you can use to prepare the jars you&#39;re sending to your app. Another important piece was the &lt;a href=&#34;http://code.google.com/appengine/downloads.html#Google_App_Engine_SDK_for_Java&#34; target=&#34;_blank&#34;&gt;Google App Engine SDK for Java&lt;/a&gt;. It ships with a server that emulates GAE&#39;s behaviour locally so you&#39;re less likely to have problems once you deploy it.&lt;br&gt;&lt;br&gt;I did have a problem though with the number of files uploaded to my appspot. It&#39;s currently limited to 1000 - a thousand - and a Rails app can easily exceed this limit. So before deploying, remove anything that is not crucial: activerecord - you should&#39;ve done it already - , all tests directories - including the ones inside gems your app needs in order to work, fixtures and etc.&lt;br&gt;&lt;br&gt;After that it was rewarding seeing a custom JRuby On Rails application working perfectly on GAE. And as much as I&#39;d like to, I can&#39;t really share the URL since it&#39;s a private app but I encourage people to try it. I believe GAE will ultimately help the community improve JRuby even more.&lt;br&gt;&lt;br&gt;And as a last tip, this time thanks to &lt;a href=&#34;http://akitaonrails.com/&#34; target=&#34;_blank&#34;&gt;Fabio Akita&lt;/a&gt;, is &lt;a href=&#34;http://gist.github.com/91684&#34; target=&#34;_blank&#34;&gt;this snippet&lt;/a&gt;. You should redirect your log so you can debug your app form GAE&#39;s dashboard.&lt;br&gt;&lt;br&gt;Have fun!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>long stand up meetings</title>
      <link>http://leonardoborges.com/writings/2009/04/06/long-stand-up-meetings/</link>
      <pubDate>Mon, 06 Apr 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/04/06/long-stand-up-meetings/</guid>
      <description>&lt;p&gt;&#xA;It&#39;s been more than a year since I started my new endeavor here in Spain, moving from Brazil and starting a whole new life - both personal and professional. Time for a little retrospective.&lt;br&gt;&lt;br&gt;More precisely, a retrospective about the agile practices here at the company.&lt;br&gt;&lt;br&gt;When I first started out back in January &#39;08 the company thought they were agile. NOT! They did adopt some XP practices but just to give you an idea, I&#39;m gonna focus on just one: stand-up meetings.&lt;br&gt;&lt;br&gt;My first stand-up meeting was a shock! We were a team of 6 developers and 2 sys admins and the meeting lasted for 40 -yes, forty - minutes!&lt;br&gt;&lt;br&gt;The reason? Several, but the most obvious one was that in their stand up meeting they were actually, well, sit. That was my first suggestion which some people were actually reluctant about. But we survived.&lt;br&gt;&lt;br&gt;Since then we improved a lot our stand-up meetings being able to usually cut it down to 10 minutes. But we can get better.&lt;br&gt;&lt;br&gt;Another problem we usually have is the &#34;i-want-my-finger-in-everything&#34; syndrome. I guess you&#39;re all familiar with that. It&#39;s the developer who wants to know everything in its minimum detail and interrupts everyone in the stand-up meeting to ask questions or make clarifications that could, both, be done afterwards. And that&#39;s a problem we still have every now and then.&lt;br&gt;&lt;br&gt;But we are much better now and to get here we basically successfully tried:&lt;br&gt;&lt;br&gt;- Standing up ( duh?! - believe me, this was harder than you might think)&lt;br&gt;&lt;br&gt;- Trying to bind people&#39;s thoughts on what they&#39;ve done the day before and what they are going to do that day. Anything else should be left for after the meeting - it&#39;s probably not everyone else&#39;s concern. Focus.&lt;br&gt;&lt;br&gt;- Limiting the amount of time allowed for each developer - currently we have a generous 2 minute limit.&lt;br&gt;&lt;br&gt;- Using a token -any object light enough to be hold while you&#39;re talking. People are only allowed to talk when they get hold of it. This was a nice idea brought by my colleague &lt;a href=&#34;http://www.ivercore.com/&#34;&gt;Philip MacIver&lt;/a&gt;.&lt;br&gt;&lt;br&gt;But we still have issues. People still jump in somebody else&#39;s turn and get the token basically as if just by getting it they can talk. And because of that we still suffer from the  &#34;i-want-my-finger-in-everything&#34; syndrome.&lt;br&gt;&lt;br&gt;So after telling this little story about how stand-up meetings evolved here, I&#39;d like to hear from you guys what do you do to keep your meetings short and to the point. I&#39;m really willing to hear suggestions and success stories.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>final classes are evil</title>
      <link>http://leonardoborges.com/writings/2009/03/17/final-classes-are-evil/</link>
      <pubDate>Tue, 17 Mar 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/03/17/final-classes-are-evil/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;Update:&lt;/strong&gt; Go ahead and read this post in its entirety - including the comments. Then, read my other &lt;a href=&#34;http://www.leonardoborges.com/writings/2009/10/07/a-few-more-thoughts-on-final-classes/&#34;&gt;post where I expand the subject a little more&lt;/a&gt;. &lt;br&gt;&lt;br&gt;--&lt;br&gt;&lt;br&gt;Every now and then I still do some Java coding. And I actually like it. I spent several years of my career developing primarily in Java and am very keen about the language.&lt;br&gt;&lt;br&gt;I&#39;ve been a fierce defender of it these days, specially with the wave of popularity of other languages such as Ruby and Groovy. But I must say that for the 1st time - actually the 2nd - I got pissed off at Java.&lt;br&gt;&lt;br&gt;The reason? Final classes!&lt;br&gt;&lt;br&gt;How arrogant of someone to say: &#34;And from now on you shall not subclass my classes!&#34;&lt;br&gt;&lt;br&gt;Er.... Why?!?! I&#39;m yet to find a good reason in favor of it. But I can share 2 that made me be completely against it. - I never actually liked it but it just didn&#39;t bother me that much in the past.&lt;br&gt;&lt;br&gt;The first one happened while I was adding PostgreSQL XML support to &lt;a href=&#34;http://hibernate.org/&#34;&gt;Hibernate&lt;/a&gt;. The basic idea is that the XML data type should behave mostly as a string, with the exception of the saving and loading operations.&lt;br&gt;&lt;br&gt;The thing is, the String data type in Hibernate is declared final. So you cannot share behavior unless you copy and paste it. How smart.&lt;br&gt;&lt;br&gt;And the second is in the testing area. We all love testing. And we all love mocking external dependencies so we can test our code in isolation and fast. Well, I hope your code doesn&#39;t depend on the &lt;a href=&#34;http://java.sun.com/j2se/1.5.0/docs/api/java/net/URL.html&#34;&gt;URL&lt;/a&gt; class then.&lt;br&gt;&lt;br&gt;It is declared final so you just can&#39;t mock it. Mocking frameworks like &lt;a href=&#34;http://www.easymock.org/&#34;&gt;easyMock&lt;/a&gt; use subclassing to create your dependencies mock objects and obviously it doesn&#39;t work here.&lt;br&gt;&lt;br&gt;Yeah yeah, of course you can refactor your code so it depends on an interface/class that wraps your URL class and then you can switch implementations. But just how stupid is that? Programming to interfaces makes sense, but not everywhere. Specially not when you&#39;re using a low level class like this one.&lt;br&gt;&lt;br&gt;So please, software developers, architects and the like, design your systems for extensibility and stop being presumptuous.&lt;br&gt;&lt;br&gt;P.S.: There is a testing framework called &lt;a href=&#34;https://jmockit.dev.java.net/&#34;&gt;jMockit&lt;/a&gt; which uses instrumentation (Java 5+) to redefine methods in runtime so you can mock final classes. It works, but should we really be playing that much with the java class loader just so we can &#34;easily&#34; test our code?&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>qcon london 09</title>
      <link>http://leonardoborges.com/writings/2009/03/09/qcon-london-09/</link>
      <pubDate>Mon, 09 Mar 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/03/09/qcon-london-09/</guid>
      <description>&lt;p&gt;&#xA;Tomorrow I&#39;ll be once more heading London for this year&#39;s &lt;a title=&#34;QCon London 2009&#34; href=&#34;http://qconlondon.com/&#34;&gt;QCon&lt;/a&gt;.&lt;br&gt;&lt;br&gt;As usual, the schedule looks amazing and I&#39;ll try to keep you all posted about what&#39;s going on there.&lt;br&gt;&lt;br&gt;Oh and if any of you guys is going and wanna meet up for a geek talk and a couple of beers, just send me a message.&lt;br&gt;&lt;br&gt;Cheers! :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>eclipse tip debugging non wtp projects</title>
      <link>http://leonardoborges.com/writings/2009/02/01/eclipse-tip-debugging-non-wtp-projects/</link>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2009/02/01/eclipse-tip-debugging-non-wtp-projects/</guid>
      <description>&lt;p&gt;&#xA;This is a very useful tip I shared a while ago at the office and turned out to be extremely useful.&lt;br&gt;&lt;br&gt;If you work with java and use eclipse as an IDE you know that eclipse has something called WTP, which stands for Web Tools Platform. It&#39;s a set of tools and API&#39;s to aid in the development of web and JEE projects.&lt;br&gt;&lt;br&gt;That means that if you have a WTP project in your workspace, you can deploy, run and debug it straight from the IDE. But what happens if your project is not of a WTP nature?&lt;br&gt;&lt;br&gt;Back at the office we have a coupe of really old Java project. WTP didn&#39;t exist back then but we do use Eclipse as our IDE of choice.&lt;br&gt;&lt;br&gt;So, how do we debug a deployed project that we don&#39;t actually deploy from the IDE? As long as you have the source, it is quite simple:</description>
    </item>
    <item>
      <title>somewhere in between</title>
      <link>http://leonardoborges.com/writings/2008/12/29/somewhere-in-between/</link>
      <pubDate>Mon, 29 Dec 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/12/29/somewhere-in-between/</guid>
      <description>&lt;p&gt;&#xA;So here I am! Alive and kicking!!!&lt;br&gt;&lt;br&gt;Just got back from vacation. Brazil was awesome and so was xmas in Norway! Lots of food in both places! Need a diet! :p Warming up for new year&#39;s now.&lt;br&gt;&lt;br&gt;But the reason for this post is the last comment on my &lt;a href=&#34;http://www.leonardoborges.com/writings/2007/12/21/rails-20-scaffold/#comments&#34;&gt;Rails 2.0 scaffold post&lt;/a&gt;, quoted here:&lt;br&gt;&lt;br&gt;Hi Leonardo,&lt;br&gt;&lt;blockquote&gt;&lt;em&gt;I am extremely grateful for your info altruism. I thought maybe I could show my gratitude with a small donation but I donÃ¢â‚¬â„¢t see anywhere on your site to do so.&lt;br&gt;YouÃ¢â‚¬â„¢ve saved me hours and possibly what little sanity that I claim to have left. Is there a place to do so on your site that IÃ¢â‚¬â„¢m missing? If not just tell me where and IÃ¢â‚¬â„¢ll send my gesture to any cause that you wish. Thanks very much again, some day I hope to be able to be of service to a needy newbie as you have been to me. Happy New Years!!&lt;/em&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;I was surprised that someone wanted to make a donation and, since I never thought about it, I wasn&#39;t prepared. &lt;br&gt;&lt;br&gt;I was talking with the author of the comment, Eric Goodman, and I suggested he could donate to a noble cause. He ageed and just sent me the confirmation that a donation was made to &lt;a href=&#34;http://www.cancer.org&#34;&gt;The American Cancer Society&lt;/a&gt;. &lt;br&gt;&lt;br&gt;So here I leave my thank you to Eric and encourage other people that read my blog to do the same in case they feel compelled to contribute in some way. Other societies around the world are gonna be very grateful.&lt;br&gt;&lt;br&gt;Happy new years!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>apologizing in advance p</title>
      <link>http://leonardoborges.com/writings/2008/12/03/apologizing-in-advance-p/</link>
      <pubDate>Wed, 03 Dec 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/12/03/apologizing-in-advance-p/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;UPDATE&lt;/strong&gt;: By next friday I meant this friday, december 5th. Tks Pillip! :P&lt;br&gt;&lt;br&gt;This will be a really quiet month on my blog.&lt;br&gt;&lt;br&gt;The reason? Next friday I&#39;m going to Brazil for vacation and right after, in the end of december, I&#39;m going to extend my trip a bit and spend xmas in Norway.&lt;br&gt;&lt;br&gt;Just hope to come back alive from Brazil! My friends are promising a real blast!!!!! :D&lt;br&gt;&lt;br&gt;C u all soon!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails performance scripts profiler benchmarker</title>
      <link>http://leonardoborges.com/writings/2008/11/20/rails-performance-scripts-profiler-benchmarker/</link>
      <pubDate>Thu, 20 Nov 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/11/20/rails-performance-scripts-profiler-benchmarker/</guid>
      <description>&lt;p&gt;&#xA;There are several ways you can measure your rails application&#39;s performance. The techniques range from filling your code with &#34;puts&#34; statements - :p - to fancy ones like &lt;a href=&#34;http://www.newrelic.com/&#34;&gt;NewRelic&lt;/a&gt; - which is quite nice, I must say.&lt;br&gt;&lt;br&gt;But what many people don&#39;t know is that rails ships with a handful of scripts to help you out. One of which is called &lt;strong&gt;profiler&lt;/strong&gt;, located under your application&#39;s &lt;strong&gt;scripts/performance&lt;/strong&gt; directory.&lt;br&gt;&lt;br&gt;By default it uses the standard ruby profiler but if you want more speed - and additional reporting options - , consider installing the &lt;a href=&#34;http://ruby-prof.rubyforge.org/&#34;&gt;ruby-prof&lt;/a&gt; gem.&lt;br&gt;&lt;br&gt;So if you execute it without params, you&#39;ll get a clue of how it works:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ script/performance/profiler&lt;br&gt;Usage: ./script/performance/profiler &#39;Person.expensive_method(10)&#39; [times] [flat|graph|graph_html]&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Pretty self explanatory, right?&lt;br&gt;&lt;br&gt;As a sample code, I have in my rails app a dumb model with a really dumb method I wanna profile:&lt;br&gt;&lt;br&gt;&#xA;&lt;div class=&#34;code&#34;&gt;&#xA;  &lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;&#xA;  class Article&#xA;    def self.find_all_with_delay&#xA;      sleep 10&#xA;      self.find(:all)&#xA;    end&#xA;  end&#xA;  &lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&lt;br&gt;&lt;br&gt;Clearly this method doesn&#39;t perform well and is a bottle neck in our super application! But let&#39;s see what rails&#39; profiler tells us:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34; line=&#34;1&#34;&gt;&lt;br&gt;$ script/performance/profiler &#39;Article.find_all_with_delay&#39; 1 graph &gt; text_graph.perf&lt;br&gt;Loading Rails...&lt;br&gt;Using the ruby-prof extension.&lt;br&gt;Thread ID: 109440&lt;br&gt;Total Time: 10.147995&lt;br&gt;&lt;br&gt;  %total   %self     total      self      wait     child            calls   Name&lt;br&gt;--------------------------------------------------------------------------------&lt;br&gt; 100.00%   0.00%     10.15      0.00      0.00     10.15                1     Global#[No method] (/Users/leo/projects/test/vendor/rails/railties/lib/commands/performance/profiler.rb:24}  /Users/leo/projects/test/vendor/rails/railties/lib/commands/performance/profiler.rb:24&lt;br&gt;                     10.15      0.00      0.00     10.15              1/1     Object#profile_me&lt;br&gt;--------------------------------------------------------------------------------&lt;br&gt;                     10.15      0.00      0.00     10.15              1/1     Global#[No method]&lt;br&gt; 100.00%   0.00%     10.15      0.00      0.00     10.15                1     Object#profile_me ((eval):1}  (eval):1&lt;br&gt;                      0.00      0.00      0.00      0.00              1/1     Class#const_missing&lt;br&gt;                     10.15      0.00      0.00     10.15              1/1     &lt;Class::Article(id: integer, name: string, content: string, created_at: datetime, &lt;/p&gt;</description>
    </item>
    <item>
      <title>merb turns 10 and started driving me crazy</title>
      <link>http://leonardoborges.com/writings/2008/11/18/merb-turns-10-and-started-driving-me-crazy/</link>
      <pubDate>Tue, 18 Nov 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/11/18/merb-turns-10-and-started-driving-me-crazy/</guid>
      <description>&lt;p&gt;&#xA;As you may already know, &lt;a href=&#34;http://www.merbivore.com/&#34;&gt;Merb&lt;/a&gt; turned 1.0 a while ago and I decided to resume my studies to learn the framework.&lt;br&gt;&lt;br&gt;So I just built a new app with a few resources and fired the migration scripts:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ rake db:automigrate&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;And this is what I got:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;Loading init file from /Users/leo/projects/merb/my-first-app/config/init.rb&lt;br&gt;Loading /Users/leo/projects/merb/my-first-app/config/environments/development.rb&lt;br&gt; ~ Connecting to database...&lt;br&gt;/opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:137:in `initialize&#39;: wrong number of arguments (8 for 1) (ArgumentError)&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:137:in `new&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:137:in `normalize_uri&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/abstract_adapter.rb:44:in `initialize&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core/adapters/data_objects_adapter.rb:159:in `initialize&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core.rb:157:in `new&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/dm-core-0.9.6/lib/dm-core.rb:157:in `setup&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb_datamapper-1.0/lib/merb/orms/data_mapper/connection.rb:44:in `setup_connections&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb_datamapper-1.0/lib/merb/orms/data_mapper/connection.rb:27:in `connect&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb_datamapper-1.0/lib/merb_datamapper.rb:17:in `run&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core/bootloader.rb:99:in `run&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core/server.rb:172:in `bootup&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core/server.rb:42:in `start&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/lib/merb-core.rb:169:in `start&#39;&lt;br&gt;&#x9;from /opt/local/lib/ruby/gems/1.8/gems/merb-core-1.0/bin/merb:11&lt;br&gt;&#x9;from /opt/local/bin/merb:19:in `load&#39;&lt;br&gt;&#x9;from /opt/local/bin/merb:19&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Lovely, isn&#39;t it?  &lt;br&gt;After a fair amount of googling around it turns out that there seems to be a problem with the URI parser &lt;a href=&#34;http://www.merbivore.com/&#34;&gt;Merb&lt;/a&gt; uses underneath, called &lt;a href=&#34;http://addressable.rubyforge.org/&#34;&gt;Addressable&lt;/a&gt;.&lt;br&gt;&lt;br&gt;As of the installation of Merb 1.0, the installed version of this library was 2.0.0.&lt;br&gt;The solution? Install a older Addressable version:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;$ sudo gem uninstall addressable&lt;br&gt;&lt;br&gt;You have requested to uninstall the gem:&lt;br&gt;&#x9;addressable-2.0.0&lt;br&gt;dm-core-0.9.6 depends on [addressable (&gt;= 1.0.4)]&lt;br&gt;data_objects-0.9.6 depends on [addressable (&gt;= 1.0.3)]&lt;br&gt;If you remove this gems, one or more dependencies will not be met.&lt;br&gt;Continue with Uninstall? [Yn]  Y&lt;br&gt;Successfully uninstalled addressable-2.0.0&lt;br&gt;&lt;br&gt;$ sudo gem install addressable -v 1.0.4&lt;br&gt;Successfully installed addressable-1.0.4&lt;br&gt;1 gem installed&lt;br&gt;Installing ri documentation for addressable-1.0.4...&lt;br&gt;Installing RDoc documentation for addressable-1.0.4...&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;I haven&#39;t figured out the reason for this issue, so please do share if you know. I&#39;ll be glad to update the post. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>understanding ruby threads</title>
      <link>http://leonardoborges.com/writings/2008/10/28/understanding-ruby-threads/</link>
      <pubDate>Tue, 28 Oct 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/10/28/understanding-ruby-threads/</guid>
      <description>&lt;p&gt;&#xA;This post is just to clarify some confusion I&#39;ve noticed reading some posts around the web. There is some misunderstanding of the differences between Ruby 1.8 and Ruby 1.9 regarding threads. And the difference between them and JRuby.&lt;br&gt;&lt;br&gt;So I decided to write this small summary:&lt;br&gt;&lt;br&gt;&lt;strong&gt;Ruby 1.8&lt;/strong&gt; - Supports only &lt;a href=&#34;http://en.wikipedia.org/wiki/Green_threads&#34;&gt;Green Threads&lt;/a&gt;&lt;br&gt;&lt;br&gt;This means that the ruby interpreter has its own scheduler. No matter how many threads you create in your ruby program, there will be only one native thread on your OS. Therefore, your program cannot take advantage of multiple core environments.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Ruby 1.9&lt;/strong&gt; - Supports native threads (GIL)&lt;br&gt;&lt;br&gt;Ruby 1.9 adopted &lt;a href=&#34;http://www.atdot.net/yarv/&#34;&gt;YARV&lt;/a&gt; as the new VM implementation, which supports native threads. This means that now your ruby programs can take advantage of multiple core environments, but no truly parallel execution is achieved.&lt;br&gt;&lt;br&gt;The catch is GIL - Global Interpreter Lock - and it means that each ruby thread runs on its own native thread, but only one of them can be executed at a time.&lt;br&gt;&lt;br&gt;&lt;strong&gt;JRuby&lt;/strong&gt; - Ruby 1.8 compatible&lt;br&gt;&lt;br&gt;I think this is the easy part. JRuby runs on the Java VM, which supports native threads and parallel execution.&lt;br&gt;&lt;br&gt;On this environment, ruby threads are java threads.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The future&lt;/strong&gt;&lt;br&gt;&lt;br&gt;There doesn&#39;t seem to be any decision about what&#39;s gonna happen on the next versions of Ruby. At least to the extent of my research. But this is today&#39;s snapshot of Ruby threads and I hope it&#39;ll be useful to some folks.&lt;br&gt;&lt;br&gt;c u around&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>dont use rexml i mean it</title>
      <link>http://leonardoborges.com/writings/2008/10/08/dont-use-rexml-i-mean-it/</link>
      <pubDate>Wed, 08 Oct 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/10/08/dont-use-rexml-i-mean-it/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://www.germane-software.com/software/rexml/&#34;&gt;REXML&lt;/a&gt; is the standard XML processing library for Ruby. It&#39;s on Ruby&#39;s core and is terribly &lt;strong&gt;slow&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;Yeah, I know it&#39;s pretty simple to use, got a nice interface and, again, it&#39;s just there. And it is a good library, for most things. But if you, as me, came to a point that processing XML is taking 50% of the time to render a rails action, it&#39;s time to change.&lt;br&gt;&lt;br&gt;My tip? Use &lt;a href=&#34;http://libxml.rubyforge.org/&#34;&gt;libxml&lt;/a&gt; instead. The numbers on their home page speak for themselves. Try it yourself, you won&#39;t be disappointed. And I&#39;m really happy with the performance increase on our app.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>were hiring</title>
      <link>http://leonardoborges.com/writings/2008/09/26/were-hiring/</link>
      <pubDate>Fri, 26 Sep 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/09/26/were-hiring/</guid>
      <description>&lt;p&gt;&#xA;Here at &lt;a href=&#34;http://miraiespana.com/&#34;&gt;Mirai&lt;/a&gt; we&#39;re looking for passionate software engineers.&lt;br&gt;&lt;br&gt;And if it&#39;s not clear, by passionate I mean people who actually enjoy their job, aren&#39;t afraid of trying new things, likes to research/study, is up to date to what&#39;s happening around them and is a true team player.&lt;br&gt;&lt;br&gt;Interested? Hold on, click &lt;a href=&#34;http://jobs.hotelsearch.com/&#34;&gt;here&lt;/a&gt; to find out more about the offer, as well as instructions on how to apply.&lt;br&gt;&lt;br&gt;Doubts?  Send them to jobs@hotelsearch.com&lt;br&gt;&lt;br&gt;ps. If you&#39;ve been following my blog, you probably have already got a feeling of the sort of stuff that we do here...&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>railsconf europe 2008 impressions and highlights</title>
      <link>http://leonardoborges.com/writings/2008/09/09/railsconf-europe-2008-impressions-and-highlights/</link>
      <pubDate>Tue, 09 Sep 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/09/09/railsconf-europe-2008-impressions-and-highlights/</guid>
      <description>&lt;p&gt;&#xA;I&#39;m back in Madrid again after the RailsConf and I think it&#39;s time to say something about it. :)&lt;br&gt;&lt;br&gt;First off, the infrastructure provided by the conference was really great. The rooms, WiFi connection, food...Ã‚Â  Really well organized.&lt;br&gt;&lt;br&gt;Now to the sessions, highlights:&lt;br&gt;&lt;br&gt;&lt;strong&gt;Tutorials (Tuesday)&lt;/strong&gt;&lt;br&gt;- &lt;a href=&#34;http://nealford.com/downloads/Ford-Farley_Meta_programming_ruby-tutorial.pdf&#34;&gt;Meta-programming Ruby for fun and profit&lt;/a&gt; (Neal Ford, Patrick Farley)&lt;br&gt;The old and good techniques that made Ruby so powerful. Here Neal and Patrick walked us through the main tricks to meta programming like open classes - and conditionally open them - , dynamically define methods, sending messages to objects and how Ruby can help test your Java code in a much easier way.&lt;br&gt;&lt;br&gt;I&#39;ve put the link to the slides but honestly I don&#39;t think they&#39;re too much useful without the talking.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Sessions (Wednessday)&lt;/strong&gt;&lt;br&gt;- EC2, MapReduce and Distributed processing (&lt;a href=&#34;http://railspikes.com&#34;&gt;Jonathan Dahl&lt;/a&gt;)&lt;br&gt;Jonathan explained the theory behind &lt;a href=&#34;http://en.wikipedia.org/wiki/Mapreduce&#34;&gt;MapReduce&lt;/a&gt; using very simple ruby examples, providing the basics on how to distribute and paralelize tasks accross multiple machines.&lt;br&gt;&lt;br&gt;He also introduced &lt;a href=&#34;http://hadoop.apache.org/core/&#34;&gt;Hadoop&lt;/a&gt;, a platform built in Java that &#34;lets one easily write and run     applications that process vast amounts of data&#34;. What I liked the most was the simplicity he explained this subject. As of today, his presentation is not available online. Stay tuned as I&#39;m gonna update this post with the links, as soon as they&#39;re available.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Sessions (Thursday)&lt;/strong&gt;&lt;br&gt;- &lt;a href=&#34;http://nealford.com/downloads/conferences/canonical/Neal_Ford-Debugging_and_Testing_the_Web_Tier.zip&#34;&gt;Debugging &amp;amp; Testing the Web Tier&lt;/a&gt; (&lt;a href=&#34;http://nealford.com&#34;&gt;Neal Ford&lt;/a&gt;)&lt;br&gt;If you&#39;ve been concerned about testing your app&#39;s web tier lately, this presentation would probably not show you anything new. Neal talks about the need to debug and test javascript behaviour accross multiple browsers, using tools like &lt;a href=&#34;http://getfirebug.com/&#34;&gt;Firebug&lt;/a&gt;, &lt;a href=&#34;http://www.jsunit.net/&#34;&gt;JSUnit&lt;/a&gt; and &lt;a href=&#34;http://selenium.openqa.org/&#34;&gt;Selenium&lt;/a&gt;. If you have no idea about what these tools are, please stop now and go evaluate them!&lt;br&gt;&lt;br&gt;We are pretty concerned about testing on my actual job, but selenium tests can be a pain sometimes - a.k.a extremely slow. And what ends up happening is that they are forgotten. Developers only run the test suite if it&#39;s not painful and it&#39;s lightning fast. Here&#39;s is where the highlight for this session comes: &lt;a href=&#34;http://www.thefrontside.net/crosscheck&#34;&gt;CrossCheck&lt;/a&gt;.&lt;br&gt;&lt;br&gt;The idea is to be able to test your javascript code accross multiple browsers without the need to launch them. In fact, you don&#39;t even need a browser installed. The negative point is that it&#39;s kinda fallen behind because now you can only test older versions of browsers. But since the project is getting a lot of traction, I&#39;m pretty sure this will be solved soon.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;&lt;br&gt;My overall impression of the other sessions I attended is that some speakers just didn&#39;t have time to properly prepare themselves, what made me think this years&#39;s RailsConf wasn&#39;t all that I expected.&lt;br&gt;&lt;br&gt;But I also met interesting people and after all one of the key points in a conference is networking. :)&lt;br&gt;&lt;br&gt;Definitely worth it though. And that&#39;s why I took the time to provide this highlights.&lt;br&gt;&lt;br&gt;c u soon&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>railsconf europe 2008 heading to berlin</title>
      <link>http://leonardoborges.com/writings/2008/08/30/railsconf-europe-2008-heading-to-berlin/</link>
      <pubDate>Sat, 30 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/30/railsconf-europe-2008-heading-to-berlin/</guid>
      <description>&lt;p&gt;&#xA;The title says it already.&lt;br&gt;&lt;br&gt;On monday I&#39;ll be going to Berlin to attend this yearÃ‚Â´s &lt;a href=&#34;http://en.oreilly.com/railseurope2008/public/content/home&#34;&gt;RailsConf&lt;/a&gt;.&lt;br&gt;&lt;br&gt;This will be my first one and of course my expectations are pretty high!&lt;br&gt;&lt;br&gt;As usual, after the conference I&#39;ll try and give a summary of what happened there, providing as much content as I can.&lt;br&gt;&lt;br&gt;Anyone else&#39;s going??? :)&lt;br&gt;&lt;br&gt;C u there!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac os x getting mysql and rails to work</title>
      <link>http://leonardoborges.com/writings/2008/08/28/mac-os-x-getting-mysql-and-rails-to-work/</link>
      <pubDate>Thu, 28 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/28/mac-os-x-getting-mysql-and-rails-to-work/</guid>
      <description>&lt;p&gt;&#xA;So I couldn&#39;t resist and bought myself a MacBook Pro! It&#39;s my first week with my new toy and I&#39;m really enjoying it.&lt;br&gt;&lt;br&gt;But I need to do something useful with it so I started to prepare it to be my new development platform, starting with Ruby/Rails + MySQL: Here is where the fun begins!&lt;br&gt;&lt;br&gt;After I installed both Rails and MySQL, I fired up a terminal an typed:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;sudo gem install mysql&lt;/pre&gt;&lt;br&gt;...and here is what u get&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;ERROR: Failed to build gem native extension.&lt;/pre&gt;&lt;br&gt;If you google this error you will find a couple solutions and this is the one that worked for me:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;ARCHFLAGS=&#34;-Os -arch x86_64 -fno-common&#34;&lt;br&gt;sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql&lt;br&gt;--with-mysql-config=/usr/local/mysql/bin/mysql_config&lt;/pre&gt;&lt;br&gt;Now, confident enough, I created a sample rails app and tried to create the development database:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;leo$ rake db:create (in /Users/leo/projects/test)&lt;br&gt;dyld: lazy symbol binding failed: Symbol not found: _mysql_init&lt;/pre&gt;&lt;br&gt;Doesn&#39;t look happy yet huh? This took me a while to figure out but it turned out to be fairly simple.&lt;br&gt;I have no idea why but after I installed the gem I had the file mysql.bundle in two different places:&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;/Library/Ruby/Gems/1.8/gems/mysql-2.7/lib/mysql.bundle&lt;br&gt;/Library/Ruby/Gems/1.8/gems/mysql-2.7/mysql.bundle&lt;/pre&gt;&lt;br&gt;The solution was to remove the first copy of the file. Now everything is working fine at this end!&lt;br&gt;I really hope this is useful to someone!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails vulnerability on rexml</title>
      <link>http://leonardoborges.com/writings/2008/08/24/rails-vulnerability-on-rexml/</link>
      <pubDate>Sun, 24 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/24/rails-vulnerability-on-rexml/</guid>
      <description>&lt;p&gt;&#xA;REXML, the XML library uses by many ruby apps, including rails, has a vulnerability that requires an immediate patch on whatever rails version you&#39;re using.&lt;br&gt;&lt;br&gt;Details and instructions on the official rails weblog, &lt;a href=&#34;http://weblog.rubyonrails.org/2008/8/23/dos-vulnerabilities-in-rexml&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;But basically, this is what you need to do:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;bash&#34;&gt;&lt;br&gt;gem install rexml-expansion-fix&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Then, require rexml-expansion-fix in your rails&#39;s app environment.rb file.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>yes we do eat</title>
      <link>http://leonardoborges.com/writings/2008/08/15/yes-we-do-eat/</link>
      <pubDate>Fri, 15 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/15/yes-we-do-eat/</guid>
      <description>&lt;p&gt;&#xA;Besides the fact that I am a software developer, I do eat. I even enjoy doing so. Specially when I&#39;m traveling.&lt;br&gt;That&#39;s why i decided to put up a new weblog only for this kind of stuff - it&#39;s called &lt;a href=&#34;http://travel.leonardoborges.com&#34;&gt;Travel tips - food &amp; stuff&lt;/a&gt;. Basically for friends and whoever else might be interested.&lt;br&gt;&lt;br&gt;There I plan to share some nice restaurants I&#39;ve been to. At least to start with.&lt;br&gt;&lt;br&gt;Hope u like it!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>why i like ruby 1 alias_method</title>
      <link>http://leonardoborges.com/writings/2008/08/07/why-i-like-ruby-1-alias_method/</link>
      <pubDate>Thu, 07 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/07/why-i-like-ruby-1-alias_method/</guid>
      <description>&lt;p&gt;&#xA;So you found yourself in the need to override a method but still count on it&#39;s old behaviour?&lt;br&gt;&lt;br&gt;No problem! Override it with your new code, call &lt;strong&gt;super&lt;/strong&gt; and.... Uh oh!! Suddenly this turned into a problem... Let me give some more context.&lt;br&gt;&lt;br&gt;I was testing &lt;a href=&#34;http://ferret.davebalmain.com/trac/wiki&#34;&gt;Ferret&lt;/a&gt; (and the &lt;a href=&#34;http://projects.jkraemer.net/acts_as_ferret/&#34;&gt;acts_as_ferret&lt;/a&gt; plugin) in a project to provide full text search capabilities to our models. One of the things the plugin does is to add a new method to ActiveRecord, called &lt;em&gt;find_with_ferret&lt;/em&gt;. That way, every model can use it. Great!&lt;br&gt;&lt;br&gt;So I thought that would make sense for me to remove all &lt;a href=&#34;http://en.wikipedia.org/wiki/Diacritics&#34;&gt;diatrictics&lt;/a&gt; from the input text before letting ferret do its job. You know, like removing &lt;a href=&#34;http://en.wikipedia.org/wiki/Umlaut_%28diacritic%29&#34;&gt;umlauts&lt;/a&gt; and all that.&lt;br&gt;&lt;br&gt;I could do that by overriding this method with code to remove the undesired chars and then call its older version to finally do the search - something like calling super, but not quite. And I didn&#39;t want my models to inherit from anything else than ActiveRecord::Base. That wouldn&#39;t make any sense.&lt;br&gt;&lt;br&gt;&lt;a href=&#34;http://www.ruby-doc.org/core/classes/Module.html#M000395&#34;&gt;alias_method&lt;/a&gt; to the rescue!&lt;br&gt;&lt;br&gt;You know that to redefine a method in an existing class you can open it up and rewrite it. But since you don&#39;t wanna loose the behaviour provided by the original method, this is how you can achieve this:&lt;br&gt;&lt;br&gt;&lt;pre lang=&#34;ruby&#34; line=&#34;1&#34;&gt;&lt;br&gt;module ActiveRecord&lt;br&gt;  class Base&lt;br&gt;    alias_method :find_with_ferret_original, :find_with_ferret&lt;br&gt;&lt;br&gt;    def find_with_ferret(q, options = {}, find_options = {})&lt;br&gt;      remove_diatrictics!(q)&lt;br&gt;      find_with_ferret_original(q, options, find_options)&lt;br&gt;    end&lt;br&gt;  end&lt;br&gt;end&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;And you&#39;re good to go. On line 3 you&#39;re just giving the original method an alias, making a copy of it.&lt;br&gt;&lt;br&gt;Then you redefine it the way you like and on line 6 you call the old version to make sure u still got the same behaviour.  &lt;br&gt;Now all my models can benefit of this change without requiring them to call another method nor inherit from another class.&lt;br&gt;&lt;br&gt;Cool, huh? :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>the biggest rails event in latin america</title>
      <link>http://leonardoborges.com/writings/2008/08/04/the-biggest-rails-event-in-latin-america/</link>
      <pubDate>Mon, 04 Aug 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/08/04/the-biggest-rails-event-in-latin-america/</guid>
      <description>&lt;p&gt;&#xA;Behold latin american railers!&lt;br&gt;&lt;br&gt;This year we will have the &lt;a href=&#34;http://www.locaweb.com.br/railssummit/&#34;&gt;Rails Summit Latin America&lt;/a&gt; on October, 15th and 16th, in SÃƒÂ£o Paulo, Brazil.&lt;br&gt;&lt;br&gt;It&#39;s by far the biggest Rails event we&#39;ve ever had, including many of the speakers that were present at &lt;a href=&#34;http://en.oreilly.com/rails2008/public/content/home&#34;&gt;RailsConf&lt;/a&gt;.&lt;br&gt;&lt;br&gt;&lt;a href=&#34;http://akitaonrails.com/&#34;&gt;FÃƒÂ¡bio Akita&lt;/a&gt; is also one of the speakers and provides more details on his &lt;a href=&#34;http://akitaonrails.com/2008/8/1/largada-para-o-maior-evento-de-rails-da-am-rica-latina&#34;&gt;blog&lt;/a&gt;.&lt;br&gt;&lt;br&gt;If you&#39;re a assumed rails geek don&#39;t miss the opportunity to hear from the big names and to know a beautiful country like Brazil.&lt;br&gt;&lt;br&gt;Oh, btw, if you&#39;re brazilian, like me, you have no excuse to miss this party!&lt;br&gt;&lt;br&gt;Enjoy!!!&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;br&gt;&lt;a href=&#34;http://www.locaweb.com.br/railssummit&#34;&gt;&lt;br&gt;&lt;img src=&#34;http://www.akitaonrails.com/assets/2008/8/1/468x60.gif&#34; alt=&#34;Rails Summit Latin America&#34; title=&#34;Rails Summit Latin America&#34; border=&#34;0&#34; width=&#34;468&#34; height=&#34;60&#34;/&gt;&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>new provider</title>
      <link>http://leonardoborges.com/writings/2008/07/26/new-provider/</link>
      <pubDate>Sat, 26 Jul 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/07/26/new-provider/</guid>
      <description>&lt;p&gt;&#xA;I decided to change my blog&#39;s hosting provider and this is the first post using the new service.&lt;br&gt;&lt;br&gt;Please if you see any abnormal behaviour around here don&#39;t hesitate to contact me either at leonardoborges@leonardoborges.com or leonardoborges.rj@gmail.com&lt;br&gt;&lt;br&gt;Thanks!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mock objects</title>
      <link>http://leonardoborges.com/writings/2008/07/07/mock-objects/</link>
      <pubDate>Mon, 07 Jul 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/07/07/mock-objects/</guid>
      <description>&lt;p&gt;&#xA;When testing it&#39;s pretty common to see the need for mocking a certain object, say, a Data Access Ojbect. This way you don&#39;t need to depend on a database and you can focus on the actual logic implemented by the method being tested.&lt;br&gt;&lt;br&gt;For that you have several alternatives like creating the Mock class by hand or - and this is the more common - use one of the various mocking libraries out there.&lt;br&gt;&lt;br&gt;They all look the same but the past couple of days I&#39;ve come accross to a new - at least for me - mocking library for Java. It&#39;s called &lt;a href=&#34;http://code.google.com/p/mockito/&#34;&gt;Mockito&lt;/a&gt;. As the creators state, technically, Mockito is a fork of &lt;a href=&#34;http://www.easymock.org/&#34;&gt;EasyMock&lt;/a&gt;.&lt;br&gt;&lt;br&gt;I have used EasyMock already but I do think Mockito has its advantages. I find it clear and a bit less verbose to write.&lt;br&gt;&lt;br&gt;From one of the stubbing examples on their website:&lt;br&gt;&lt;pre lang=&#34;java&#34;&gt;&lt;br&gt;//You can mock concrete classes, not only interfaces&lt;br&gt;LinkedList mockedList = mock(LinkedList.class);&lt;br&gt;&lt;br&gt;//stubbing - before execution&lt;br&gt;stub(mockedList.get(0)).toReturn(&#34;first&#34;);&lt;br&gt;&lt;br&gt;//following prints &#34;first&#34;&lt;br&gt;System.out.println(mockedList.get(0));&lt;br&gt;&lt;br&gt;//following prints &#34;null&#34; because get(999) was not stubbed&lt;br&gt;System.out.println(mockedList.get(999));&lt;br&gt;&lt;/pre&gt;&lt;br&gt;Looking forward to using it in production! ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>passenger mod_rails and problems with custom apache installation</title>
      <link>http://leonardoborges.com/writings/2008/06/07/passenger-mod_rails-and-problems-with-custom-apache-installation/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/06/07/passenger-mod_rails-and-problems-with-custom-apache-installation/</guid>
      <description>&lt;p&gt;&#xA;This week we started to test &lt;a href=&#34;http://www.modrails.com/&#34;&gt;mod_rails&lt;/a&gt; in a couple of projects where I work on. One in production.&lt;br&gt;&lt;br&gt;Of course it&#39;s too early for any conclusions, but I just wanted to share a couple of problems you might find when the installer tries to compile the Apache module.&lt;br&gt;&lt;br&gt;In our case, and I believe it is the case of many servers out there, we have a custom Apache installation, what makes the installer not find it and/or not find the Apache Portable Runtime (APR) sometimes.&lt;br&gt;&lt;br&gt;The first one is easy and is documented &lt;a href=&#34;http://www.modrails.com/documentation/Users%20guide.html#specifying_correct_apache_in&#34;&gt;here&lt;/a&gt;. You just seed to export the following environment variable, pointing to your apache installation:&lt;br&gt;&lt;pre&gt;&lt;tt&gt;&lt;tt&gt;export APXS2=/opt/apache2/bin/apxs&lt;br&gt;&lt;/tt&gt;&lt;/tt&gt;&lt;/pre&gt;&lt;br&gt;The second one is a bit tricky but it happened only when I tried to install passenger in another server that had CentOS. In this case, you will also need the following environment variable, pointing to your Apache APR config:&lt;br&gt;&lt;pre&gt;export APR_CONFIG=/usr/local/apache2/bin/&lt;span class=&#34;nfakPe&#34;&gt;apr&lt;/span&gt;-1-config&lt;/pre&gt;&lt;br&gt;It took me a fair amount of time googling around to find this answer, so I hope it&#39;ll be useful for someone. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>presentation spring framework</title>
      <link>http://leonardoborges.com/writings/2008/06/07/presentation-spring-framework/</link>
      <pubDate>Sat, 07 Jun 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/06/07/presentation-spring-framework/</guid>
      <description>&lt;p&gt;&#xA;Last friday I&#39;ve done a small presentation about Dependency Injection and how it can improve the testing environment of a project. You can find it in the &lt;a href=&#34;http://leonardoborges.com/writings/presentations&#34;&gt;presentations&lt;/a&gt; page.&lt;br&gt;&lt;br&gt;Hope you like it.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>euruko 2008 materials available</title>
      <link>http://leonardoborges.com/writings/2008/05/14/euruko-2008-materials-available/</link>
      <pubDate>Wed, 14 May 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/05/14/euruko-2008-materials-available/</guid>
      <description>&lt;p&gt;&#xA;As some of you know &lt;a href=&#34;http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/&#34;&gt;I went&lt;/a&gt; to the &lt;a href=&#34;http://www.euruko2008.org&#34;&gt;European Ruby Conf in Prague&lt;/a&gt;, this year.&lt;br&gt;&lt;br&gt;The event was awesome and it&#39;s good to know they finally made available the majority of the slides, &lt;a href=&#34;http://www.euruko2008.org/pages/2-program&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;They also published &lt;a href=&#34;http://www.avc-cvut.cz/avc.php?id=6830&amp;amp;language=en_US&#34;&gt;Matz&#39;s keynote&lt;/a&gt;, and more videos from the conference are being edited right now, so stay tuned to their home page!&lt;br&gt;&lt;br&gt;Enjoy!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>a couple of things from here</title>
      <link>http://leonardoborges.com/writings/2008/05/10/a-couple-of-things-from-here/</link>
      <pubDate>Sat, 10 May 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/05/10/a-couple-of-things-from-here/</guid>
      <description>&lt;p&gt;&#xA;It&#39;s been some time since my last post but here I am! Where? In Spain, of course! Having a great time, I must say.&lt;br&gt;&lt;br&gt;I arrived last week in Madrid and the past 2 weeks before that I spent basically packing my stuff. There is still some paperwork going on but everything is flowing well.&lt;br&gt;&lt;br&gt;Besides this little feedback, I was reading this week&#39;s issue of the excellent series &lt;a href=&#34;http://antoniocangiano.com/2008/05/05/this-week-in-ruby-may-5-2008/&#34;&gt;This Week In Ruby&lt;/a&gt;, from my friend &lt;a href=&#34;http://antoniocangiano.com/&#34;&gt;Antonio Cangiano&lt;/a&gt;. I found something quite interesting, a plugin called &lt;a href=&#34;http://hobocentral.net/hobofields/&#34;&gt;HoboFields&lt;/a&gt;.&lt;br&gt;&lt;br&gt;One of the things that bothers me in rails is the fact that by looking at your model classes, you can&#39;t tell the fields you have there. Sure, you can look at the migration script. Yeah, you can also load the development environment and inspect the object. It&#39;s a pain in the @zz! But this is the way ActiveRecord works...&lt;br&gt;&lt;br&gt;Other ORM solutions like &lt;a href=&#34;http://datamapper.org/&#34;&gt;DataMapper&lt;/a&gt;, allows you to define the fields directly in the class. It&#39;s a much cleaner and clear way to maintain your models. And you get to know what properties you have just by looking at your classes.&lt;br&gt;&lt;br&gt;That&#39;s exactly what HoboFields adds to ActiveRecord.&lt;br&gt;&lt;br&gt;You define your properties and its types straight into your model class, and the plugin creates the migration scripts for you. Coming from a java world my self, I find it rather interesting, useful and it also reminds me of the way &lt;a href=&#34;http://hibernate.org&#34;&gt;Hibernate&lt;/a&gt; works. You define your mappings with anotations in your class and hibernate just generate the schemas from there.&lt;br&gt;&lt;br&gt;It&#39;s worth a try.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>passengermod_rails released</title>
      <link>http://leonardoborges.com/writings/2008/04/14/passengermod_rails-released/</link>
      <pubDate>Mon, 14 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/14/passengermod_rails-released/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://www.modrails.com/&#34;&gt;Passenger(mod_rails)&lt;/a&gt; has been released.&lt;br&gt;&lt;br&gt;The idea is to ease the pain on rails applications deployment. I tested myself and in less than five minutes I had my application working behind Apache!&lt;br&gt;&lt;br&gt;I&#39;m not going to say much here besides the fact that it seems like a really good option for rails deployment and &lt;a href=&#34;http://www.modrails.com/testimonials.html&#34;&gt;people&lt;/a&gt; have been talking about it already, including &lt;a href=&#34;http://www.loudthinking.com/&#34;&gt;DHH&lt;/a&gt;.&lt;br&gt;&lt;br&gt;But I do recommend a read on the &lt;a href=&#34;http://www.modrails.com/documentation/Architectural%20overview.html&#34;&gt;architecture overview&lt;/a&gt; document. Be sure to read it all, specially the part on &lt;a href=&#34;http://www.modrails.com/documentation/Architectural%20overview.html#concurrent_requests&#34;&gt;handling concurrent requests&lt;/a&gt;.&lt;br&gt;&lt;br&gt;To install, &#34;it doesn&#39;t get easier than&#34; &lt;a href=&#34;http://www.modrails.com/install.html&#34;&gt;that&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Good job guys.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>time to reveal</title>
      <link>http://leonardoborges.com/writings/2008/04/08/time-to-reveal/</link>
      <pubDate>Tue, 08 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/08/time-to-reveal/</guid>
      <description>&lt;p&gt;&#xA;Some of you may know. Some of you may not. Some of you may find weird. And most of you probably have no idea of what I&#39;m talking about but the thing is: &lt;strong&gt;This is a year of big changes for me&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;I&#39;ve been hired by &lt;a href=&#34;http://www.miraiespana.com/&#34;&gt;Mirai&lt;/a&gt;, a Spanish company located in Madrid, to work as a Software Engineer. Yes, &lt;strong&gt;it does&lt;/strong&gt; mean I&#39;ll be moving there. Sooner than later.&lt;br&gt;&lt;br&gt;Last Friday I&#39;ve received the great news that my work permit has been approved so I can now request my visa in my hometown and move to Madrid, what will probably happen by the end of this month or the beginning of May.&lt;br&gt;&lt;br&gt;This post probably explain something to some people. And the bottom line is that this whole story means a great step on my career and for those of you that have been following my posts, that&#39;s probably clear.&lt;br&gt;&lt;br&gt;Because of that I was able to meet wonderful people , learn a bunch of new stuff and be present in important events such as &lt;a href=&#34;http://jaoo.dk/london-2008/conference/&#34;&gt;QCon 2008&lt;/a&gt; in London and &lt;a href=&#34;http://www.euruko2008.org/&#34;&gt;Euruko 2008&lt;/a&gt; in Prague.&lt;br&gt;&lt;br&gt;That&#39;s it for now. I&#39;ll keep you posted about my new endeavor.&lt;br&gt;&lt;br&gt;I&#39;m really excited about this chance and I invite you all for a beer or two either in RioÃ‚Â  or Madrid - Just let me know your preference... :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>jruby db2 xquery bug</title>
      <link>http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</link>
      <pubDate>Mon, 07 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/07/jruby-db2-xquery-bug/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;Update&lt;/strong&gt;: Follow up link to this issue on JRuby&#39;s Jira, &lt;a href=&#34;http://jira.codehaus.org/browse/JRUBY-2430&#34;&gt;here&lt;/a&gt;&lt;br&gt;&lt;br&gt;As I told in my last &lt;a href=&#34;http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/&#34;&gt;post&lt;/a&gt;, it was time to give JRuby a serious try. So I took one of our rails projects at work and decided to migrate it to JRuby and see what happens.&lt;br&gt;&lt;br&gt;We heavily use the XML capabilities of DB2 and this was a huge problem. Every query would work just fine through the activerecord-jdbc-adapter - part of the &lt;a href=&#34;http://rubyforge.org/projects/jruby-extras&#34;&gt;JRuby Extras&lt;/a&gt; . But every &lt;strong&gt;X&lt;/strong&gt;query would gracefully &lt;strong&gt;fail&lt;/strong&gt;!&lt;br&gt;&lt;br&gt;After some debugging I got stuck and decided to get JRuby and activerecord-jdbc-adapter&#39;s source to see what was happening.&lt;br&gt;&lt;br&gt;As I could see, it has a bug -in my opinion - at the java part of the code. The jdbc-adapter is a bridge to allow Active Record to talk with databases through native JDBC drivers, so it&#39;s normal that we do have a java part here. At this point, what the code does is to inspect the sql statement sent from ruby and decide if it&#39;s a select, update or insert.&lt;br&gt;&lt;br&gt;I fixed the problem and submitted a &lt;a href=&#34;http://rubyforge.org/tracker/index.php?func=detail&amp;amp;aid=19340&amp;amp;group_id=2014&amp;amp;atid=7859&#34;&gt;patch&lt;/a&gt; to rubyforge. I&#39;m not sure if it&#39;s the best solution or not, but now I got the xQueries working just fine.&lt;br&gt;&lt;br&gt;I&#39;d love to hear from people with similar environments whether this patch works for you or not. I&#39;m sure I didn&#39;t try every possibility.&lt;br&gt;&lt;br&gt;If you wanna try it, just drop me a message (e-mail in the &lt;a href=&#34;http://leonardoborges.com/writings/about/&#34;&gt;About&lt;/a&gt; page) and I can send the pre-compiled jar file - for activerecord-jdbc-0.8&lt;br&gt;&lt;br&gt;You can also just check out the code and compile yourself. ;)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>qcon 2008 slides available</title>
      <link>http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/</link>
      <pubDate>Fri, 04 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/04/qcon-2008-slides-available/</guid>
      <description>&lt;p&gt;&#xA;Most of last QCon&#39;s presentations are available for download &lt;a href=&#34;http://jaoo.dk/london-2008/schedule&#34;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Highlights to Ola Bini&#39;s on &lt;a href=&#34;http://jaoo.dk/london-2008/file?path=/qcon-london-2008/slides/OlaBini_JRuby_Power_on_the_JVM.pdf&#34;&gt;JRuby(pdf)&lt;/a&gt; and Randy Shoup&#39;s on  &lt;a href=&#34;http://jaoo.dk/london-2008/file?path=/qcon-london-2008/slides/RandyShoup_eBaysArchitecturalPrinciples.pdf&#34;&gt;eBay&#39;s architectural principles(pdf)&lt;/a&gt;.&lt;br&gt;&lt;br&gt;And while we&#39;re talking about JRuby, it&#39;s impressive how it&#39;s becoming a recurrent and big subject. Fast. It had its own small space at big event like QCon and in the last Euruko in Prague, we had a presentation by the JRuby Core Developers &lt;a href=&#34;http://headius.blogspot.com/&#34;&gt;Charles Nutter&lt;/a&gt; and &lt;a href=&#34;http://www.bloglines.com/blog/ThomasEEnebo&#34;&gt;Thomas Enebo&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Big companies are sponsoring JRuby&#39;s development indirectly or directly, like &lt;a href=&#34;http://www.sun.com&#34;&gt;Sun&lt;/a&gt;. And other big companies are endorsing its production ready state, like &lt;a href=&#34;http://www.oracle.com&#34;&gt;Oracle&lt;/a&gt;, which has a publicly available website developed with JRuby On Rails.&lt;br&gt;&lt;br&gt;It&#39;s past the time to give it a serious try...&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>why i like ruby or ruby the language of the lazy programmer</title>
      <link>http://leonardoborges.com/writings/2008/04/01/why-i-like-ruby-or-ruby-the-language-of-the-lazy-programmer/</link>
      <pubDate>Tue, 01 Apr 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/04/01/why-i-like-ruby-or-ruby-the-language-of-the-lazy-programmer/</guid>
      <description>&lt;p&gt;&#xA;This is quite funny. A friend, Perl addicted, is now learning Ruby. He really enjoys the language but made a interesting observation: Ruby is a language for lazy programmers!&lt;br&gt;&lt;br&gt;Well, I have to agree... You know, I love saving keystrokes and achieving more by writing less. And this is so true with Ruby.&lt;br&gt;&lt;br&gt;Let me give a really simple example, comparing with java - don&#39;t get me wrong... I love java, specially the platform, but it fits well here since I&#39;ve always been a Java guy.&lt;br&gt;&lt;br&gt;Imagine you have a Phone class with the attributes number and type, which can indicate whether the phone is a land line or a mobile phone. Then you got an array filled with phone classes and you want to narrow it by creating a new array only with mobile phones.&lt;br&gt;&lt;br&gt;In Java, such a class could look very much like this:&lt;br&gt;&lt;pre&gt;&lt;br&gt;public class Phone {&lt;br&gt;  private String number;&lt;br&gt;  private String type;&lt;/code&gt;&lt;br&gt;&lt;br&gt;  public String getNumber() {&lt;br&gt;    return number;&lt;br&gt;  }&lt;br&gt;  public void setNumber(String number) {&lt;br&gt;    this.number = number;&lt;br&gt;  }&lt;br&gt;  public String getType() {&lt;br&gt;    return type;&lt;br&gt;  }&lt;br&gt;  public void setType(String type) {&lt;br&gt;    this.type = type;&lt;br&gt;  }&lt;br&gt;}&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Quite simple, isn&#39;t it? But we are telling the compiler many things we actually shouldn&#39;t need to. This class is a java bean and as such, among other things, it needs a pair of getters and setters for each of its attributes.&lt;br&gt;&lt;br&gt;Now, on with our example, the same class, in ruby, looks like this:&lt;br&gt;&lt;br&gt;&lt;pre&gt;&lt;br&gt;class Phone&lt;br&gt;  attr_accessor :number, :type&lt;br&gt;end&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Yeah, I know the feeling. This class has exactly what we need: the two attributes with its own pairs of getters and setters each. But we didn&#39;t need to inform it in the verbose way Java has teached us. Cleaner, period.&lt;br&gt;&lt;br&gt;Now to the code that actually returns the new array containing only mobile numbers. In java, we can do it in two different ways.&lt;br&gt;Using an ArrayList:&lt;br&gt;&lt;br&gt;&lt;pre&gt;&lt;br&gt;//Create two phone objects, one land line and one mobile&lt;br&gt;...&lt;br&gt;// Add them to an array&lt;br&gt;ArrayList&lt;phone&gt; phones = new ArrayList&lt;phone&gt;();&lt;br&gt;phones.add(land);&lt;br&gt;phones.add(mobile);&lt;br&gt;&lt;br&gt;//Return an array only with mobile numbers:&lt;br&gt;private static ArrayList&lt;phone&gt; selectMobilePhones(ArrayList&lt;phone&gt; phones) {&lt;br&gt;&lt;br&gt;  ArrayList&amp;lt;Phone&amp;gt; mobiles = new ArrayList&amp;lt;Phone&amp;gt;();&lt;br&gt;&lt;br&gt;  for (Phone phone : phones) {&lt;br&gt;    if (phone.getType().equals(&#34;mobile&#34;)) {&lt;br&gt;      mobiles.add(phone);&lt;br&gt;    }&lt;br&gt;  }&lt;br&gt;  return mobiles;&lt;br&gt;}&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;Or using ordinary arrays:&lt;br&gt;&lt;br&gt;&lt;pre&gt;&lt;br&gt;// Assume the same phone objects here&lt;br&gt;...&lt;br&gt;//Add them to the array&lt;br&gt;Phone[] phones = new Phone[]{land, mobile};&lt;br&gt;&lt;br&gt;//Return an array only with mobile numbers:&lt;br&gt;Phone[] mobiles = new Phone[a.length];&lt;br&gt;&lt;br&gt;for (int i = 0; i &amp;lt; a.length; i++) {&lt;br&gt;&lt;br&gt;  if (a[i].getType().equals(&#34;mobile&#34;)) {&lt;br&gt;    mobiles[i] = a[i];&lt;br&gt;  }&lt;br&gt;}&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;And you&#39;re good to go. Actually this code with an ArrayList here only looks good thanks to generics. But this is another matter. Let&#39;s take a look at the ruby code that accomplishes de same task:&lt;br&gt;&lt;br&gt;&lt;pre&gt;&lt;br&gt;//Create two phone objects, one land line and one mobile&lt;br&gt;...&lt;br&gt;//Add them to an array&lt;br&gt;phones = [land, mobile]&lt;/code&gt;&lt;br&gt;&lt;br&gt;//Return an array only with mobile numbers:&lt;br&gt;mobiles = phones.select { |phone|&lt;br&gt;   phone.type == &#34;mobile&#34;&lt;br&gt;}&lt;br&gt;&lt;/pre&gt;&lt;br&gt;&lt;br&gt;See the difference? Java is a great language but too verbose at times. This is a really simple example but if you take the same principle to a bigger app... yeah, you see where I&#39;m going.&lt;br&gt;&lt;br&gt;The bottom line... Ruby may be the language of the lazy programmer, as my friend pointed out. But I don&#39;t mind being called lazy as long as I can type less and be more productive. Do you? :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>euruko 2008 european rubyconf prague</title>
      <link>http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/</link>
      <pubDate>Tue, 25 Mar 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/03/25/euruko-2008-european-rubyconf-prague/</guid>
      <description>&lt;p&gt;&#xA;On friday I&#39;ll be heading Prague for the &lt;a href=&#34;http://www.euruko2008.org/&#34;&gt;European RubyConf&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Anyone is going? :)&lt;br&gt;&lt;br&gt;Almost 300 attendees already registered for the event. And a few very interesting people will be speaking there like &lt;a href=&#34;http://en.wikipedia.org/wiki/Yukihiro_Matsumoto&#34;&gt;Matz&lt;/a&gt; and &lt;a href=&#34;http://www.loudthinking.com/&#34;&gt;DHH&lt;/a&gt; (this one, through skype).&lt;br&gt;&lt;br&gt;Besides that, the organization staff is scheduling 2 parties, friday and saturday, for the attendees.&lt;br&gt;&lt;br&gt;Networking comes to mind, doesn&#39;t it? I think it will be a great opportunity to meet interesting and bright people.&lt;br&gt;&lt;br&gt;So, see u in Prague!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>qcon 2008 domain specific languages</title>
      <link>http://leonardoborges.com/writings/2008/03/10/qcon-2008-domain-specific-languages/</link>
      <pubDate>Mon, 10 Mar 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/03/10/qcon-2008-domain-specific-languages/</guid>
      <description>&lt;p&gt;&#xA;Today was the first day of the conference and it started with a tutorial about DSL&#39;s with &lt;a href=&#34;http://www.martinfowler.com&#34;&gt;Martin Fowler&lt;/a&gt;, &lt;a href=&#34;http://www.nealford.com/&#34;&gt;Neal Ford&lt;/a&gt; and Rebecca Parsons. We also had as attendants &lt;a href=&#34;http://ola-bini.blogspot.com/&#34;&gt;Ola Bini&lt;/a&gt;, core developer of JRuby, and others. My expectations were pretty high and the presentation didn&#39;t let me down. I&#39;ll try to put here toghether my impressions and some notes I took while I was there.&lt;br&gt;&lt;br&gt;Marting Fowler started discussing what DSL&#39;s are and giving some examples that many of us use in our day to day Job. Like the XML configuration files in the Java world. It is a kind of DSL, it has it&#39;s own keywords and syntax in order to express some information that will be used , for instance, to configure an underlying framework.&lt;br&gt;&lt;br&gt;The problem with XML is that it becomes hard to see the overall behavior behind it. It&#39;s not very fluent to understand the purpose of an XML file just by looking at it for the first time. There is too much &#34;noise&#34;. Things that get into the way of the readability. - &lt;a href=&#34;http://www.yaml.org/&#34;&gt;YAML&lt;/a&gt; files are an much more readable alternatives to XML.&lt;br&gt;&lt;br&gt;The same happens with a standard framework api code.  Let&#39;s take for instance a sample API configuration code written in Java to tackle the domain of hotel reservations. A framework like this could have the following implementation:&lt;br&gt;&lt;br&gt;&lt;code&gt;&lt;br&gt;HotelService hotelService = new HotelService();&lt;br&gt;PersonService personService = new HotelService();&lt;/code&gt;&lt;br&gt;&lt;br&gt;Hotel hotel = hotelService.findById(1);&lt;br&gt;Person guest = personService.findById(10) ;&lt;br&gt;&lt;br&gt;Reservation reservation = new Reservation() ;&lt;br&gt;reservation.setFrom(&#34;2008-03-10&#34;) ;&lt;br&gt;reservation.setTo(&#34;2008-03-14&#34;);&lt;br&gt;reservation.setGuests(new Person[]{guest});&lt;br&gt;&lt;br&gt;hotelService.book(hotel, reservation);&lt;br&gt;Of course implementations of this simple example may vary but we can see here some of the readability problems. One approach we could use for that is to develop a Fluent Interface to wrap this API. This was one of the techniques explored during the tutorial and the actual fluent interface could now look somewhat similar with this:&lt;br&gt;&lt;br&gt;&lt;code&gt;&lt;br&gt;new Hotel(1)&lt;br&gt;.book()&lt;br&gt;.forGuests({&lt;br&gt;person.find(10)&lt;br&gt;})&lt;br&gt;.rooms(1)&lt;br&gt;.from(&#34;2008-03-10&#34;)&lt;br&gt;.to(&#34;2008-03-10&#34;);&lt;br&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;Much more readable, huh?  One of the main benefits of using DSL&#39;s they highlighted in the tutorial is the simplicity of code you can achieve. You can actually show this code to a business person and he can understand it.  This is a kind of &lt;a href=&#34;http://www.martinfowler.com/bliki/InternalDslStyle.html&#34;&gt;internal DSL&lt;/a&gt;.&lt;br&gt;&lt;br&gt;But there is still a bit of noise in this code. The the parenthesis which are not always desirable, and the use of double quotes for dates. But, this is Java code, and Java doesn&#39;t give too much room for you on the DSL subject. Here was when the speakers changed their focus a bit to Ruby. It&#39;s dynamic nature and metaprogramming techniques provides a powerful flexibility that allows for a looser syntax.&lt;br&gt;&lt;br&gt;So in ruby the previous interface could look like this now:&lt;br&gt;&lt;br&gt;&lt;code&gt;&lt;br&gt;Hotel.find(1) .book(1.room).forGuests {&lt;br&gt;Person.find(10)&lt;br&gt;}.from(march.10.2008).to(march.10.2008)&lt;br&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;We got rid of the double quotes and the code looks more fluent, like a normal english sentence. I doubt a business guy woudn&#39;t understand what this code is doing. With this, we can get closer to the business guys, with a common vocabulary, and fill the gap between us.&lt;br&gt;&lt;br&gt;This is just one of the ways we could have written this code and is not the actual example used in the tutorial.  The syntax also really depends on how readable you wanna make your code. I&#39;ll provide those later when they release the digital format of the presentation.&lt;br&gt;&lt;br&gt;So one of the flows that the development of an internal DSL can get is to build a framework and define the DSL on top of it. But we should also keep in mind that DSL&#39;s shouldn&#39;t be general purpose programming languages. They should be created to tackle a specific kind of domain problem, so we would have a whole system made of small DSL&#39;s.&lt;br&gt;&lt;br&gt;Another interesting subject that was touched is testing. How do you test DSL&#39;s?&lt;br&gt;The suggested approach, and that I think is quite reasonable, is to have separate tests for the underlying framework and another to test the DSL and its parser you can assure you have the expected behaviour of both parts.&lt;br&gt;&lt;br&gt;This is really just a summary of my thoughts and of what happened there. I&#39;m not going into too much details right now but if you found something too abstract - and it is! ;) - feel free to ask details. I&#39;ll be more than happy to help.&lt;br&gt;&lt;br&gt;This is definetly an interesting subject and now I&#39;ll head to play more with all that. :)&lt;br&gt;&lt;br&gt;PS; This is not the whole presentation, just the best of it from my stand point. Other subjects include External DSL&#39;s which can actually involve you coding Lexers, Parsers and Compilers. It&#39;s usually not worth the hassle. And it&#39;s too complicated anyway, that&#39;s why I left it out from this post.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>qcon 2008 london</title>
      <link>http://leonardoborges.com/writings/2008/03/07/qcon-2008-london/</link>
      <pubDate>Fri, 07 Mar 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/03/07/qcon-2008-london/</guid>
      <description>&lt;p&gt;&#xA;Next week I&#39;ll be at &lt;a href=&#34;http://qcon.infoq.com/london/&#34;&gt;QCon&lt;/a&gt;, in London, so if any of you are going to the conference and would like meet up for a couple of beers and a tech talk, please don&#39;t hesitate to drop a message.&lt;br&gt;&lt;br&gt;For those of you who have never heard of QCon before, it is a really nice event to play along with some of the most popular names in the software engineering community. This year&#39;s conference features people like &lt;a href=&#34;http://www.martinfowler.com/&#34;&gt;Martin Fowler&lt;/a&gt;, &lt;a href=&#34;http://www.nealford.com/&#34;&gt;Neal Ford&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/Erich_Gamma&#34;&gt;Erich Gamma&lt;/a&gt; and much more.&lt;br&gt;&lt;br&gt;So stay tuned, the conference takes place during the whole week and I&#39;ll try and keep you posted about what&#39;s happening over there.&lt;br&gt;&lt;br&gt;C u in London!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>openid</title>
      <link>http://leonardoborges.com/writings/2008/02/18/openid/</link>
      <pubDate>Mon, 18 Feb 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/02/18/openid/</guid>
      <description>&lt;p&gt;&#xA;I think I&#39;ve been really lucky lately. In my new job I&#39;m getting to work with many interesting things and &lt;a href=&#34;http://openid.net/&#34;&gt;OpenID&lt;/a&gt; is just one of them.&lt;br&gt;&lt;br&gt;We are investing high in Ruby on Rails and we have now a few internal applications in development stages. Our manager wanted the ability to let people log in to our rails applications(for now) using their OpenID accounts.&lt;br&gt;&lt;br&gt;It was a funny task, as I knew very little about OpenID. The idea actually is really good. Instead of creating a new user account on each new service/site you&#39;d like to subscribe to, you create a single user account in a OpenID provider - like &lt;a href=&#34;https://www.myopenid.com/&#34;&gt;MyOpenID&lt;/a&gt; - and use this identity to authenticate yourself in the services/sites that support this protocol.&lt;br&gt;&lt;br&gt;What do we earn from that? Well, in my opinion, we can get a couple of benefits:&lt;br&gt;&lt;br&gt;- You don&#39;t need to memorize 723 logins and 723 passwords (if you really care about creating different passwords for all of your user accounts)&lt;br&gt;&lt;br&gt;- You don&#39;t authenticate yourself to the service you&#39;re attempting to use. This service actually asks to your provider if your identity is valid, and you authenticate yourself there. Nowhere else.&lt;br&gt;&lt;br&gt;I strongly recommend you visit the &lt;a href=&#34;http://openid.net/&#34;&gt;OpenID&lt;/a&gt; to understand more about it.&lt;br&gt;&lt;br&gt;But, back to the problem, we needed to put it working in a rails app. And that&#39;s when I found the &lt;a href=&#34;http://openidenabled.com/ruby-openid/&#34;&gt;ruby-openid&lt;/a&gt; library, provided by &lt;a href=&#34;http://openidenabled.com/&#34;&gt;OpenID Enabled&lt;/a&gt;.&lt;br&gt;&lt;br&gt;It is a complete library, really well documented that provides an abstraction layer both for consumer and server applications.&lt;br&gt;&lt;br&gt;My first step was to develop the consumer. That&#39;s what you need if you are going to provide your users with OpenID authentication in your web site. The ruby-openid library comes with several samples that really helped me out here. They were developed using &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby On Rails&lt;/a&gt; and are a really good start point.&lt;br&gt;&lt;br&gt;After this step, I was asked to evaluate the possibility of being a OpenID provider. At first I thought it would be a really complicated task, but again this ruby library had a great example of a simple provider. The drawback is that the samples were developed in an older version of Rails ( &amp;lt; 2.x ) . So I had to freeze the Rails version to 1.2.5 so I could run the provider sample code.&lt;br&gt;&lt;br&gt;I am now working on porting this code to Rails 2.x, into one of our applications and it&#39;s been flowing well so far. Just wanted to share this library for those of you trying something similar. It is really worth a look.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>dbunit and hibernate</title>
      <link>http://leonardoborges.com/writings/2008/01/17/dbunit-and-hibernate/</link>
      <pubDate>Thu, 17 Jan 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/01/17/dbunit-and-hibernate/</guid>
      <description>&lt;p&gt;&#xA;I never paid too much attention on testing database stuff. While working with java, the closest I got to something &lt;em&gt;workable &lt;/em&gt;was using the test case abstractions provided by the Spring framework. It ensures that each test method runs in its own transaction that is rolled back after the test&#39;s execution.&lt;br&gt;&lt;br&gt;Fair enough. I used the &lt;a href=&#34;http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html#setUp()&#34;&gt;setUp()&lt;/a&gt; method on my &lt;a href=&#34;http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html&#34;&gt;TestCase&lt;/a&gt; to configure some records so I could work with them, removing all of them in the &lt;a href=&#34;http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html#tearDown()&#34;&gt;tearDown()&lt;/a&gt; method. It was quite simple and worked.&lt;br&gt;&lt;br&gt;But I always felt something strange with this solution. First of all, I had to add another framework just for that. - Actually I was using spring for dependency injection, but if I wasn&#39;t, it wouldn&#39;t be a nice option. And another thing that bothered me, is that you cannot guarantee that your database is in a known state.&lt;br&gt;&lt;br&gt;After I started to work with Ruby - and Rails - I discovered the &lt;a href=&#34;http://manuals.rubyonrails.com/read/chapter/26&#34;&gt;testing fixtures&lt;/a&gt;. It is a really nice way to set up your testing data without having to worry about your database state. - If you don&#39;t know what I&#39;m talking about, follow the above link first.&lt;br&gt;&lt;br&gt;Then I received a message from a co-worker saying he was having some trouble in using &lt;a href=&#34;http://www.dbunit.org/&#34;&gt;DBUnit&lt;/a&gt; with Hibernate, and asked for some help. I&#39;ve heard of DBUnit before but never tried it myself. It was a very good opportunity to take a better look into it.&lt;br&gt;&lt;br&gt;The basic idea after all is very similar to that of the Rails Fixtures: You have some sort of external file - XML in this case - where you set up the testing data. So the framework takes care of erasing the database, inserting your test data and returning it to its original state.&lt;br&gt;&lt;br&gt;So far so good, DBUnit&#39;s default Classes works with &lt;a href=&#34;http://www.dbunit.org/apidocs/org/dbunit/JdbcBasedDBTestCase.html&#34;&gt;JDBC,&lt;/a&gt; &lt;a href=&#34;http://www.dbunit.org/apidocs/org/dbunit/DataSourceBasedDBTestCase.html&#34;&gt;DataSources&lt;/a&gt; and &lt;a href=&#34;http://www.dbunit.org/apidocs/org/dbunit/JndiBasedDBTestCase.html&#34;&gt;JNDIDatasources&lt;/a&gt;, but not with Hibernate.  The effort to put them working together is minimal and is documented in their web site.&lt;br&gt;&lt;br&gt;I decided to share how this can be done with hibernate and in the end, you would have a test case similar to this one:&lt;br&gt;&lt;br&gt;</description>
    </item>
    <item>
      <title>rails 20 xml data type and db2</title>
      <link>http://leonardoborges.com/writings/2008/01/02/rails-20-xml-data-type-and-db2/</link>
      <pubDate>Wed, 02 Jan 2008 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2008/01/02/rails-20-xml-data-type-and-db2/</guid>
      <description>&lt;p&gt;&#xA;&lt;strong&gt;[2008/04/30] Update:&lt;/strong&gt; The ibm_db gem has been updated to support the new Rails 2.0 style migration. Now you can just use t.xml and it will work. Look &lt;a href=&#34;http://rubyforge.org/forum/forum.php?forum_id=24055&#34;&gt;here&lt;/a&gt; for more info. Thanks to Mario Briggs for pointing me to the update.&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;In my new job we work with XML data natively stored on DB2. I have done some test with Rails and DB2 a few weeks ago and it&#39;s pretty interesting, specially the easiness that Rails deals with XML.&lt;br&gt;&lt;br&gt;We decided to test some new features of DB2 9.5 and I decided to test them with Rails 2.0.&lt;br&gt;&lt;br&gt;So I created a new Rails app, configured the database.yml to use the &lt;a href=&#34;http://db2onrails.com/2007/10/17/ibm_db-gem-updated-to-090/&#34;&gt;idm_db&lt;/a&gt; gem and fired:&lt;br&gt;&lt;br&gt;&lt;code&gt;$ rake db:create&lt;/code&gt;&lt;br&gt;&lt;br&gt;The output is nice but, the database isn&#39;t there! I suppose it&#39;s something with the gem that needs to be updated. But really don&#39;t know about it. It just doesn&#39;t work. But this will not hold us down. I will just create the database by hand and keep going with my tests.&lt;br&gt;&lt;br&gt;After that, I created a new model &lt;em&gt;XmlDocument,&lt;/em&gt; which has a column named &lt;em&gt;data&lt;/em&gt;, of type XML. According to the new migrations syntax, my model&#39;s migration would look something similar with this:&lt;br&gt;&lt;br&gt;&lt;code&gt;class CreateXmlDocuments &amp;lt; ActiveRecord::Migration&lt;br&gt;def self.up&lt;br&gt;create_table :xml_documents do |t|&lt;br&gt;t.xml :data&lt;br&gt;t.timestamps&lt;br&gt;end&lt;br&gt;end&lt;/code&gt;&lt;br&gt;&lt;br&gt;def self.down&lt;br&gt;drop_table :xml_documents&lt;br&gt;end&lt;br&gt;end&lt;br&gt;&lt;br&gt;Right? Ok, I fired up a terminal and lauched:&lt;br&gt;&lt;br&gt;&lt;code&gt;$ rake db:migrate&lt;/code&gt;&lt;br&gt;&lt;br&gt;The output? Here it is:&lt;br&gt;&lt;br&gt;&lt;code&gt;== 3 CreateXmlDocuments: migrating ============================================&lt;br&gt;-- create_table(:xml_documents)&lt;br&gt;rake aborted!&lt;br&gt;undefined method `xml&#39; for #&lt;br&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;Yes, a big nice exception! The new migration syntax doesn&#39;t allow you to do &lt;em&gt;t.xml&lt;/em&gt;! But please don&#39;t ask me why! :p&lt;br&gt;The solution? Well, although it&#39;s weird - imo - , it&#39;s also easy. You can mix the new and the old syntax in the same file. So our model&#39;s  migration  will now look like this:&lt;br&gt;&lt;br&gt;&lt;code&gt;class CreateXmlDocuments &amp;lt; ActiveRecord::Migration&lt;br&gt;def self.up&lt;br&gt;create_table :xml_documents do |t|&lt;br&gt;t.column  :data, :xml&lt;br&gt;t.timestamps&lt;br&gt;end&lt;br&gt;end&lt;/code&gt;&lt;br&gt;&lt;br&gt;def self.down&lt;br&gt;drop_table :xml_documents&lt;br&gt;end&lt;br&gt;end&lt;br&gt;&lt;br&gt;And that&#39;s it! We&#39;re ready to go! I didn&#39;t find anything else different so far, besides what I described here. Hope this helps!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rails 20 scaffold</title>
      <link>http://leonardoborges.com/writings/2007/12/21/rails-20-scaffold/</link>
      <pubDate>Fri, 21 Dec 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/12/21/rails-20-scaffold/</guid>
      <description>&lt;p&gt;&#xA;Following the Rails 2.0 hype, I&#39;ve been playing around with it and decided to share a first impression: Scaffolding is gone!&lt;br&gt;&lt;br&gt;But wait, before you knock your head against the wall, let me tell you something: I lied :)&lt;br&gt;&lt;br&gt;Scaffolding is not really gone. It&#39;s just changed a bit.&lt;br&gt;&lt;br&gt;How can I tell? Well, as a good developer I thought: &#34;I&#39;ll just create a scaffold with the new version and see what&#39;s different&#34;&lt;br&gt;&lt;br&gt;I fired up a terminal, created a news rails application and generated a new model:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate model Contact name:string email:string&lt;/code&gt;&lt;/strong&gt; - yes you can do this in rails 2.0, and these fields get into your model&#39;s migration!&lt;br&gt;&lt;br&gt;Now the I have a new model, it&#39;s time for a controller to manage it:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate controller Contacts&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;So your controller would look something like this huh?&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;class ContactsController &amp;lt; ApplicationController&lt;br&gt;scaffold :contact&lt;br&gt;end&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Well, too bad! The method scaffold is gone from ActionController::Base! And I&#39;m not lying this time!&lt;br&gt;&lt;br&gt;Now that the dynamic scaffold is gone, we&#39;re left with the static one.&lt;br&gt;Ok, let&#39;s try it then:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate scaffold contact&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;And it won&#39;t work again! ;) At the end of the output, you will get something like this:&lt;br&gt;&lt;br&gt;&lt;code&gt;Another migration is already named create_contacts: db/migrate/001_create_contacts.rb&lt;/code&gt;&lt;br&gt;&lt;br&gt;It really means that if your model is meant to be used by a scaffold, you better generate it in the same line. It will fail, afaik, if the model previously existed. Destroy yout model and controller, and execute the following:&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;code&gt;$ script/generate scaffold Contact name:string email:string&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Done! Just run your migrations, startup your server and your new scaffold in rails 2.0 will be working gracefully!&lt;br&gt;&lt;br&gt;It took me a while to discover this changes because I didn&#39;t find it well documented. But maybe I was not looking in the right places. :)&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring 25 dependency injection that doesnt hurt</title>
      <link>http://leonardoborges.com/writings/2007/12/07/spring-25-dependency-injection-that-doesnt-hurt/</link>
      <pubDate>Fri, 07 Dec 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/12/07/spring-25-dependency-injection-that-doesnt-hurt/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;http://martinfowler.com/articles/injection.html&#34;&gt;Dependency injection&lt;/a&gt; - &lt;a href=&#34;http://martinfowler.com/articles/injection.html&#34;&gt;DI&lt;/a&gt;Ã‚Â - Ã‚Â is a great thing. Really. The hability to tweak implementations without touching your code is awesome and the DI frameworks, like spring, saves you a lot of coding. No more service locators stuff.&lt;br&gt;&lt;br&gt;But, and there is always a but, you&#39;re left with a bunch of XML configuration. And I hate it. Not that XML files are bad... the thing is that everything nowadays has its own set of XML configurarion files. And &lt;a href=&#34;http://www.springframework.org&#34;&gt;Spring&lt;/a&gt; is not different.&lt;br&gt;&lt;br&gt;</description>
    </item>
    <item>
      <title>rubyworks production stack for rails</title>
      <link>http://leonardoborges.com/writings/2007/12/01/rubyworks-production-stack-for-rails/</link>
      <pubDate>Sat, 01 Dec 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/12/01/rubyworks-production-stack-for-rails/</guid>
      <description>&lt;p&gt;&#xA;Well, we all know how hard, or at least cumbersome, it can be to set up a production environment to deploy your applications. Besides all the hardware stuff like storages, links, routers you are still left with a huge amount of software configuration to handle. This often includes configuring things like clusters, load balancing and services monitoring - Including notification of interested parts in case of any failure. Pieces of software you have to tie up and make them work together.&lt;br&gt;&lt;br&gt;But hey, ruby lovers, you may have a better way to get this going! Released by &lt;a href=&#34;http://www.thoughtworks.com/&#34; title=&#34;TW&#39;s web site&#34;&gt;ThoughtWorks&lt;/a&gt;, &lt;a href=&#34;http://studios.thoughtworks.com/rubyworks&#34; title=&#34;RubyWorks&#34;&gt;RubyWorks&lt;/a&gt; is, as quoted from their website, a production application stack for &lt;a href=&#34;http://www.rubyonrails.org/&#34; title=&#34;Ruby On Rails&#34;&gt;Ruby On Rails&lt;/a&gt; applications. I decided to give it a try and I really enjoyed it.&lt;br&gt;&lt;br&gt;First of all I didn&#39;t want to mess with my actual configuration so I installed a new vm with &lt;a href=&#34;http://www.virtualbox.org/&#34; title=&#34;Virtual Box&#34;&gt;Virtual Box&lt;/a&gt;. It has Ubuntu 7.10 on it, with 256MB of memory.&lt;br&gt;&lt;br&gt;After installing RubyWorks - instructions on their website -, you get a new skeleton rails app up and running, being served by 4 &lt;a href=&#34;http://mongrel.rubyforge.org/&#34; title=&#34;Mongrel&#34;&gt;mongrels&lt;/a&gt; that defaults to production environment! Impressed? There is more. A &lt;a href=&#34;http://haproxy.1wt.eu/&#34; title=&#34;HAProxy&#34;&gt;HAProxy&lt;/a&gt; is also set up in front of your mongrel servers acting as a load balancer.&lt;br&gt;&lt;br&gt;Well, you probably want to monitor all that stuff huh? A &lt;a href=&#34;http://www.tildeslash.com/monit/&#34; title=&#34;Monit&#34;&gt;monit&lt;/a&gt; web interface is waiting for your call on port 2812! It monitors all your mongrel servers - four by default - and your HAProxy, allowing you to measure CPU and Memory usage, among other things.&lt;br&gt;&lt;br&gt;The coolest thing here is that all these softwares you would have to setup by hand are already working together, ready for production! Well, is it?&lt;br&gt;&lt;br&gt;Going a little deeper, I deployed a database backed application to test this stack&#39;s performance.&lt;br&gt;&lt;br&gt;I used &lt;a href=&#34;http://www.joedog.org/JoeDog/Siege&#34; title=&#34;Siege&#34;&gt;Siege&lt;/a&gt; to stress the app and I am very happy with the results! I compared it with a single mongrel running on production env and no proxy at all.&lt;br&gt;&lt;br&gt;It is worth mentioning that having 4 mongrels running took my vm to 77% of memory usage, while a single mongrel took it to 38%.&lt;br&gt;&lt;br&gt;</description>
    </item>
    <item>
      <title>why every programmer have to be dumb</title>
      <link>http://leonardoborges.com/writings/2007/11/23/why-every-programmer-have-to-be-dumb/</link>
      <pubDate>Fri, 23 Nov 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/11/23/why-every-programmer-have-to-be-dumb/</guid>
      <description>&lt;p&gt;&#xA;At least, dumb for the companies hiring them. The old dream is still for sale out there: Build a &#34;I do everything framework&#34; and hire a bunch of dumb programmers - monkeys? - and you shall make money easily!&lt;br&gt;&lt;br&gt;Just put some button pressers and a full featured enterprise system will be waiting on the other side of this &#34;machine&#34;!&lt;br&gt;&lt;br&gt;C&#39;mon, I thought this dream was over! We&#39;ve had enough proofs that this doesn&#39;t work!&lt;br&gt;&lt;br&gt;Why? Because a framework, system builder, code generator or what you may want to call this thing just can&#39;t do everything. And if you try to build this &#34;monster&#34; you will get yourself a hell of a problem:&lt;br&gt;&lt;ul&gt;&lt;br&gt;&#x9;&lt;li&gt;Your product will never be ready.&lt;br&gt;Or you think that &#34;everything&#34; has limits? Someone will always say: Hey, let&#39;s put this new feature right there... it&#39;s so small....&lt;/li&gt;&lt;br&gt;&#x9;&lt;li&gt;Your product will not work well.&lt;br&gt;Bugs! Bugs! Bugs! I&#39;ve never knew a team that has written enough tests building such a monster. Be prepared! If it&#39;s never ready, you will always be in a rush!&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;&lt;br&gt;But ok, even if you manage to develop this &#34;framework&#34; and hire a bunch of monkeys to press its buttons, that&#39;s when the worst problem arise. (At least worst in my opinion)&lt;br&gt;&lt;br&gt;With this &#34;philosophy&#34;, you assume that you want to hire low level programmers that don&#39;t need to learn anything new besides how to use your full-fledged systems generator. And who the hell likes to work in a place like that?&lt;br&gt;&lt;br&gt;You take from your employees all the joy of development, which is about creativity. All about putting your brain to work. And sooner or later, they will notice that and just quit. You will never be able to stablish a trustworthy relationship within your team as well as to motivate them.&lt;br&gt;&lt;br&gt;How will you motivate a team by telling them they will learn a new framework that isn&#39;t used anywhere else in the world and that they will not improve their thinking?&lt;br&gt;&lt;br&gt;They will become bored. And if not, man, I wouldn&#39;t like to have someone like that in my team.&lt;br&gt;&lt;br&gt;The problem is that managers usually love the idea to build huge enterprise systems at low costs. And some consultants sell this idea quite well.&lt;br&gt;&lt;br&gt;I prefer to have trustworthy people in my team. Provide an environment that promotes learning. Let their creativity flow. Only with this approach you will have a first class team of developers producing, happily, high quality enterprise systems.&lt;br&gt;&lt;br&gt;That&#39;s the message for the companies out there: Software development IS a creative process. Promote learning. Let them create.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>language change</title>
      <link>http://leonardoborges.com/writings/2007/11/20/language-change/</link>
      <pubDate>Tue, 20 Nov 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/11/20/language-change/</guid>
      <description>&lt;p&gt;&#xA;Well, talking with some friends, I decided that, from now on, I shall only write in english on this blog.&lt;br&gt;&lt;br&gt;Of course some of you may not like it. But I think it has more advantages than the other way around.Ã‚Â  I have some friends around the world, including people from the U.S., Spain, Italy, China, India and Australia. This way, they can also enjoy the content of this blog and help me improve it.&lt;br&gt;&lt;br&gt;I will keep writing on the same subjects, so feel free to comment, as always. You may comment in the language you like more - hey, I can&#39;t read Japanese! - but english is highly preferable! ;)&lt;br&gt;&lt;br&gt;Thanks and see you on my next post!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ruby on db2 a linux nightmare with a happy end</title>
      <link>http://leonardoborges.com/writings/2007/11/20/ruby-on-db2-a-linux-nightmare-with-a-happy-end/</link>
      <pubDate>Tue, 20 Nov 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/11/20/ruby-on-db2-a-linux-nightmare-with-a-happy-end/</guid>
      <description>&lt;p&gt;&#xA;Although the title might look dramatic, it&#39;s pretty close to what I&#39;ve been through.&lt;br&gt;&lt;br&gt;I have set up a Ubuntu 64 bits on my laptop last week to do some tests with Ruby and DB2. Oh man, it is not complicated, is it? It shouldn&#39;t be, actually.&lt;br&gt;&lt;br&gt;Too sad that I found &lt;a href=&#34;http://antoniocangiano.com/2007/11/14/guide-to-setting-up-the-ibm-ruby-and-python-drivers-for-db2-on-linux-32-or-64-bit/&#34; title=&#34;Antonio Cangiano&#39;s Blog&#34;&gt;this&lt;/a&gt; so late! It&#39;s a post from a friend, &lt;a href=&#34;http://antoniocangiano.com/&#34; title=&#34;Antonio Cangiano&#39;s Blog&#34;&gt;Antonio Cangiano&lt;/a&gt;, describing the most common problems you may find trying to set up this environment (Linux + Ruby + DB2). You will probably get it working the first time, if you read it &lt;strong&gt;word&lt;/strong&gt; by &lt;strong&gt;word&lt;/strong&gt;. But if not, here are some extra tips that I can share with you.&lt;br&gt;&lt;br&gt;- If you installed Ruby using your distribution&#39;s package manager, remove all ruby packages completely. After that, install ruby exactly as described in Antonio&#39;s &lt;a href=&#34;http://antoniocangiano.com/2007/11/14/guide-to-setting-up-the-ibm-ruby-and-python-drivers-for-db2-on-linux-32-or-64-bit/&#34;&gt;post&lt;/a&gt;, typing this in the console:&lt;br&gt;&lt;pre class=&#34;rubycode&#34;&gt;&lt;code&gt;$ sudo apt-get install build-essential&lt;br&gt;$ sudo apt-get install ruby-full rubygems&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;After that, you may try again.&lt;br&gt;&lt;br&gt;- Another problem I found was after getting the driver built. I have written a simple program to try the connection and got this message:&lt;br&gt;&lt;br&gt;&lt;strong&gt;Failed to load IBM_DB Ruby Driver&lt;/strong&gt;&lt;br&gt;&lt;br&gt;The thing is that this error really means it was not able to find the file libdb2.so.1 in the /usr/lib directory. Issuing this command may settle things for you - it will create the missing symbolic link:&lt;br&gt;&lt;pre class=&#34;rubycode&#34;&gt;&lt;code&gt;$ ln -s /opt/ibm/db2/V9.5/lib64/libdb2.so.1 /usr/lib&lt;/code&gt;&lt;/pre&gt;&lt;br&gt;Good luck!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>enquanto isso em portugal</title>
      <link>http://leonardoborges.com/writings/2007/11/10/enquanto-isso-em-portugal/</link>
      <pubDate>Sat, 10 Nov 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/11/10/enquanto-isso-em-portugal/</guid>
      <description>&lt;p&gt;&#xA;Pois bem, saÃƒÂ­ do Rio hoje rumo a Madrid, com escala em Lisboa.&lt;br&gt;&lt;br&gt;A essa hora jÃƒÂ¡ estaria por lÃƒÂ¡.... mas no momento estou no aeroporto de Lisboa esperando o prÃƒÂ³ximo vÃƒÂ´o, visto que perdi a conexÃƒÂ£o! Acontece atÃƒÂ© na europa! :p&lt;br&gt;&lt;br&gt;Em teoria o embarque ÃƒÂ© daqui a 1h:30min...&lt;br&gt;&lt;br&gt;Os portugueses sÃƒÂ£o muito atenciosos btw!&lt;br&gt;&lt;br&gt;AtÃƒÂ© a prÃƒÂ³xima!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>eu odeio xml</title>
      <link>http://leonardoborges.com/writings/2007/10/29/eu-odeio-xml/</link>
      <pubDate>Mon, 29 Oct 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/10/29/eu-odeio-xml/</guid>
      <description>&lt;p&gt;&#xA;Isso ÃƒÂ© um fato. Cada linha de XML que eu escrevo me faz pensar em formas de evita-las. E isso nÃƒÂ£o ÃƒÂ© simples.&lt;br&gt;&lt;br&gt;Ultimamente, desde o Java 5, tem se trocado o XML pelas &lt;a href=&#34;http://http://java.sun.com/j2se/1.5.0/docs/guide/language/annotations.html&#34; title=&#34;Java Annotations&#34;&gt;annotations&lt;/a&gt;. TÃƒÂ¡ bom, fica bonitinho nÃƒÂ©? AtÃƒÂ© que fica. Em alguns casos, atÃƒÂ© mais organizado. O &lt;a href=&#34;http://www.hibernate.org/hib_docs/annotations/reference/en/html_single/&#34; title=&#34;Hibernate Annotations&#34;&gt;Hibernate&lt;/a&gt; desde a versÃƒÂ£o 3 faz uso das &lt;a href=&#34;http://java.sun.com/javaee/overview/faq/persistence.jsp&#34; title=&#34;Java Persistence API&#34;&gt;annotaions da JPA&lt;/a&gt; como alernativa ao seu XML de configuraÃƒÂ§ÃƒÂ£o. E esse sim ÃƒÂ© um belo caso de sucesso!&lt;br&gt;&lt;br&gt;SÃƒÂ£o apenas algumas anotaÃƒÂ§ÃƒÂµes na classe para mapea-la e pronto, adeus xml! Mas como sempre, as anotaÃƒÂ§ÃƒÂµes jÃƒÂ¡ estÃƒÂ£o sendo exageradas por aÃƒÂ­. Basta decidir configurar uns 3 frameworks - e provavelmente dois deles sÃƒÂ£o descenessÃƒÂ¡rios no seu projeto - usando anotaÃƒÂ§ÃƒÂµes e as suas classes ficarÃƒÂ£o uma zona! E muito mais ilegÃƒÂ­veis que um arquivo XML!&lt;br&gt;&lt;br&gt;As anotaÃƒÂ§ÃƒÂµes sÃƒÂ£o recursos muito poderosos e devem ser usadas de forma consciente. Use as que realmente valem a pena, como as que vou falar agora, que fazem parte da nova release do Spring framework, a &lt;a href=&#34;http://www.springframework.org/node/548&#34; title=&#34;Spring 2.5 rc1&#34;&gt;2.5 RC1&lt;/a&gt;.</description>
    </item>
    <item>
      <title>software livre</title>
      <link>http://leonardoborges.com/writings/2007/10/21/software-livre/</link>
      <pubDate>Sun, 21 Oct 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/10/21/software-livre/</guid>
      <description>&lt;p&gt;&#xA;Aqui no trabalho atualmente temos uma grande barreira com relaÃƒÂ§ÃƒÂ£o ao software livre. Pensei em escrever aqui alguma coisa sobre as barreiras que as empresas colocam quando o assunto ÃƒÂ© esse porÃƒÂ©m o &lt;a target=&#34;_blank&#34; href=&#34;http://bemnalata.blogspot.com/&#34; title=&#34;Blog Cleuton Sampaio&#34;&gt;Cleuton&lt;/a&gt; jÃƒÂ¡ fez &lt;a href=&#34;http://bemnalata.blogspot.com/2007/10/resistncia-das-empresas-ao-uso-de.html&#34; title=&#34;ResistÃƒÂªncia ao uso de softwares livres&#34;&gt;isso&lt;/a&gt;, e ficou muito bom.&lt;br&gt;&lt;br&gt;Vale a visita!&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>scea 5 beta</title>
      <link>http://leonardoborges.com/writings/2007/10/15/scea-5-beta/</link>
      <pubDate>Mon, 15 Oct 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/10/15/scea-5-beta/</guid>
      <description>&lt;p&gt;&#xA;Hoje fiz a versÃƒÂ£o beta da nova prova de arquiteto da Sun e eis algumas impressÃƒÂµes:&lt;br&gt;&lt;br&gt;- Ãƒâ€° longa e cansativa... fato justificÃƒÂ¡vel se levar-mos em consideraÃƒÂ§ÃƒÂ£o o fato de ser uma prova em estado beta. Ela possui mais questÃƒÂµes que a versÃƒÂ£o final. SÃƒÂ£o 153 questÃƒÂµes no total, em 4h e 30min.</description>
    </item>
    <item>
      <title>como o spring me ajudou a manter o active record</title>
      <link>http://leonardoborges.com/writings/2007/10/13/como-o-spring-me-ajudou-a-manter-o-active-record/</link>
      <pubDate>Sat, 13 Oct 2007 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/writings/2007/10/13/como-o-spring-me-ajudou-a-manter-o-active-record/</guid>
      <description>&lt;p&gt;&#xA;Nesse primeiro post vou falar um pouco sobre meu novo trabalho. Na verdade, sobre um problema que encontramos lÃƒÂ¡.&lt;br&gt;&lt;br&gt;Dentre diversas coisas que estamos fazendo, como migraÃƒÂ§ÃƒÂµes por exemplo, estou ajudando na elaboraÃƒÂ§ÃƒÂ£o da arquitetura que irÃƒÂ¡ abrigar as novas aplicaÃƒÂ§ÃƒÂµes desenvolvidas na empresa.</description>
    </item>
    <item>
      <title>Talks &amp; Code</title>
      <link>http://leonardoborges.com/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://leonardoborges.com/talks/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a few of my favourite talks:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vimeo.com/100688924&#34;&gt;EuroClojure 2014 - Taming Asynchronous Workflows with Functional Reactive Programming&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=3QR8meTrh5g&#34;&gt;EuroClojure 2015 - Realtime Collaboration with Clojure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xzVEaI_T1Kg&#34;&gt;YOW! Lambda Jam 2014 - High Performance Web UI&amp;rsquo;s with Om and React&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Not all talks I&amp;rsquo;ve given have video but you can access the slides for all my talks on &lt;a href=&#34;https://www.slideshare.net/borgesleonardo&#34;&gt;SlideShare&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;open-source-projects&#34;&gt;Open Source projects&lt;/h3&gt;&#xA;&lt;p&gt;Here I keep a list of the open-source projects that I&amp;rsquo;ve either started or contributed to.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
